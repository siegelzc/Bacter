{"version":3,"sources":["../js/abilities.js","../js/config.js","../js/game.js","../js/index.js","../js/org.js","../js/run.js","../js/socket.js","../js/tutorial.js","../js/ui/board.js","../js/ui/browser.js","../js/ui/canvas.js","../js/ui/flag.js","../js/ui/items.js","../js/ui/menus/Button.js","../js/ui/menus/List.js","../js/ui/menus/Menu.js","../js/ui/menus/MenuFooter.js","../js/ui/menus/menus.js","../js/ui/menus/MenuSubmit.js","../js/ui/menus/Num.js","../js/ui/menus/Radio.js","../js/ui/menus/Radios.js","../js/ui/menus/submit.js","../js/ui/menus/Text.js","../js/ui/messages.js","../js/ui/title.js","../js/ui/world.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["var ability;\r\nvar Ability = function(data) { // data: { player: }\r\n   this.player = data.player;\r\n   this.auto = false;\r\n   this.extend = {\r\n      value: false,\r\n      activated: false,\r\n      can: false,\r\n      i: 0,\r\n      j: 0,\r\n      start: undefined,\r\n      end: undefined,\r\n      cooling: false,\r\n      time: 4500,\r\n      cooldown: 4000\r\n   };\r\n   this.compress = {\r\n      value: false,\r\n      applied: false,\r\n      activated: false,\r\n      can: false,\r\n      i: 0,\r\n      j: 1,\r\n      timeout: undefined,\r\n      start: undefined,\r\n      end: undefined,\r\n      cooling: false,\r\n      time: 3500,\r\n      cooldown: 4000\r\n   };\r\n   // speed: { // Not updated\r\n   //    value: false, \r\n   //    activated: false, \r\n   //    i: 0, \r\n   //    j: 0, \r\n   //    factor: 2, \r\n   //    timeout: undefined, \r\n   //    time: 5000\r\n   // };\r\n   // slow: { // Not updated\r\n   //    value: false, \r\n   //    activated: false, \r\n   //    i: 0, \r\n   //    j: 1, \r\n   //    factor: 2, \r\n   //    timeout: undefined, \r\n   //    time: 5000\r\n   // };\r\n   this.immortality = {\r\n      value: false,\r\n      activated: false,\r\n      can: false,\r\n      i: 1,\r\n      j: 0,\r\n      timeout: undefined,\r\n      start: undefined,\r\n      end: undefined,\r\n      cooling: false,\r\n      time: 3500,\r\n      cooldown: 6000\r\n   };\r\n   this.freeze = {\r\n      value: false,\r\n      applied: false,\r\n      activated: false,\r\n      can: false,\r\n      i: 1,\r\n      j: 1,\r\n      timeout: undefined,\r\n      start: undefined,\r\n      end: undefined,\r\n      cooling: false,\r\n      time: 4000,\r\n      cooldown: 6000\r\n   };\r\n   // stimulate: {\r\n   //    value: false, \r\n   //    activated: false, \r\n   //    can: false, \r\n   //    i: 2, \r\n   //    j: 0, \r\n   //    factor: 9, // Factor must be equal to that of poison\r\n   //    timeout: undefined, \r\n   //    start: undefined, \r\n   //    end: undefined, \r\n   //    cooling: false, \r\n   //    time: 3000, \r\n   //    cooldown: 5000\r\n   // }, \r\n   // poison: {\r\n   //    value: false, \r\n   //    activated: false, \r\n   //    can: false, \r\n   //    i: 2, \r\n   //    j: 1, \r\n   //    factor: 9, // Factor must be equal to that of stimulate\r\n   //    timeout: undefined, \r\n   //    start: undefined, \r\n   //    end: undefined, \r\n   //    cooling: false, \r\n   //    time: 3000, \r\n   //    cooldown: 5000\r\n   // }, \r\n   this.neutralize = {\r\n      value: false,\r\n      activated: false,\r\n      can: false,\r\n      i: 2,\r\n      j: 0,\r\n      radius: 60,\r\n      color: { r: 0, g: 179, b: 12 },\r\n      weight: 3,\r\n      x: undefined,\r\n      y: undefined,\r\n      timeout: undefined,\r\n      start: undefined,\r\n      end: undefined,\r\n      cooling: false,\r\n      time: 3500,\r\n      cooldown: 6500\r\n   };\r\n   this.toxin = {\r\n      value: false,\r\n      activated: false,\r\n      can: false,\r\n      i: 2,\r\n      j: 1,\r\n      radius: 60,\r\n      color: { r: 255, g: 111, b: 92 },\r\n      weight: 3,\r\n      x: undefined,\r\n      y: undefined,\r\n      timeout: undefined,\r\n      start: undefined,\r\n      end: undefined,\r\n      cooling: false,\r\n      time: 4000,\r\n      cooldown: 6000\r\n   };\r\n   this.spore = {\r\n      value: false,\r\n      activated: false,\r\n      i: 3,\r\n      j: 0,\r\n      interval: undefined,\r\n      speed: 6,\r\n      spores: [],\r\n      count: 0,\r\n      can: false,\r\n      timeout: undefined,\r\n      start: undefined,\r\n      end: undefined,\r\n      cooling: false,\r\n      time: 1700,\r\n      cooldown: 7500 // 7500 default\r\n   };\r\n   this.secrete = {\r\n      value: false,\r\n      activated: false,\r\n      i: 3,\r\n      j: 1,\r\n      color: { r: undefined, g: undefined, b: undefined },\r\n      radius: _cellwidth / cos45 * 2.9,\r\n      can: false,\r\n      timeout: undefined,\r\n      start: undefined,\r\n      end: undefined,\r\n      time: 800\r\n   };\r\n   this.shoot = {\r\n      value: [false, false, false],\r\n      can: [true, true, true],\r\n      secrete: [{}, {}, {}\r\n         // { // Sets values on use\r\n         //    value: false, \r\n         //    color: undefined, \r\n         //    radius: _cellwidth / cos45 * 2.7 / 2, // Half 'secrete'\r\n         //    hit: false, \r\n         //    timeout: undefined, \r\n         //    start: undefined, \r\n         //    end: undefined, \r\n         //    time: 800 // Same as 'secrete'\r\n         // }\r\n      ],\r\n      spore: [undefined, undefined, undefined],\r\n      speed: 5,\r\n      interval: [undefined, undefined, undefined],\r\n      timeout: [undefined, undefined, undefined],\r\n      start: [undefined, undefined, undefined],\r\n      end: [undefined, undefined, undefined],\r\n      time: 1500,\r\n      cooling: [false, false, false],\r\n      cooldown: [2000, 2000, 2000]\r\n   };\r\n   this.tag = {\r\n      value: false,\r\n      activated: false,\r\n      i: 0,\r\n      j: 1,\r\n      can: false,\r\n      timeout: undefined,\r\n      start: undefined,\r\n      end: undefined,\r\n      time: 0,\r\n      cooldown: 5000\r\n   };\r\n};\r\n\r\nfunction shoot(I, J) { // Both parameters are required\r\n   if (ability.shoot.value[I] == false && ability.shoot.can[I] == true) { // If not currently shooting and if can shoot specified ability (Should have been checked before this point)\r\n      ability.shoot.value[I] = true;\r\n      ability.shoot.can[I] = false;\r\n      ability.shoot.secrete[I].value = false;\r\n      clearTimeout(ability.shoot.timeout[I]); // Reset timeout\r\n      ability.shoot.start[I] = new Date(); // Set start time\r\n\r\n      // Get Spore\r\n      let regions = org.getRegionInfo(); // Get region data\r\n      let theta;\r\n      if (mouseX == Infinity || mouseY == Infinity) {\r\n         let mpos = getMpos();\r\n         mouseX = mpos.x;\r\n         mouseY = mpos.y;\r\n      }\r\n      if (state != 'tutorial') {\r\n         theta = atan((mouseY - center.y) / (mouseX - center.x)); // Get angle (theta) from mouse pointer\r\n         if (mouseX < center.x) { // If mouse is in second or third quadrants\r\n            theta += 180; // Correct theta for negative x\r\n         }\r\n      } else {\r\n         theta = atan((mouseY - org.pos.y) / (mouseX - org.pos.x));\r\n         if (mouseX < org.pos.x) { // If mouse is in second or third quadrants\r\n            theta += 180; // Correct theta for negative x\r\n         }\r\n      }\r\n      let deltas = [];\r\n      for (let i = 0; i < regions.exposed.length; i++) { // Loop through exposed cells\r\n         let phi = atan((regions.exposed[i].y - org.y()) / (regions.exposed[i].x - org.x())); // Get angle (phi) of each exposed cell\r\n         if (regions.exposed[i].x - org.x() < 0) {\r\n            phi += 180;\r\n         }\r\n         deltas.push(abs(theta - phi)); // Calculate difference between theta and phi and collect in 'deltas' array\r\n      }\r\n      let min;\r\n      for (let i = 0; i < deltas.length; i++) {\r\n         if (i == 0) {\r\n            min = deltas[i]; // Set first delta as min for comparison value\r\n            continue;\r\n         } else if (min > deltas[i]) { // Calculate minimum delta\r\n            min = deltas[i];\r\n         }\r\n      }\r\n      ability.shoot.spore[I] = regions.exposed[deltas.indexOf(min)]; // Set spore as the cell with angle phi closest to mouse angle theta\r\n      for (let i = 0; i < org.count; i++) {\r\n         if (ability.shoot.spore[I].x == org.cells[i].x && ability.shoot.spore[I].y == org.cells[i].y) { // Find spore in org\r\n            org.cells.splice(i, 1); // Remove spore cell from org\r\n            org.count--;\r\n            i--;\r\n            break;\r\n         }\r\n      }\r\n      ability.shoot.spore[I].speed = ability.shoot.speed;\r\n      ability.shoot.spore[I].theta = theta;\r\n\r\n      // Interval\r\n      ability.shoot.interval[I] = () => {\r\n         ability.shoot.spore[I].x += ability.shoot.spore[I].speed * cos(ability.shoot.spore[I].theta);\r\n         ability.shoot.spore[I].y += ability.shoot.spore[I].speed * sin(ability.shoot.spore[I].theta);\r\n         socket.emit('Ability', ability);\r\n      };\r\n\r\n      // Timeout\r\n      ability.shoot.timeout[I] = setTimeout(() => {\r\n         if (ability.shoot.value[I] == true && ability.shoot.secrete[I].value == false) {\r\n            ability.shoot.value[I] = false;\r\n            ability.shoot.spore[I] = undefined;\r\n            ability.shoot.cooling[I] = true;\r\n            ability.shoot.end[I] = new Date();\r\n            ability.shoot.secrete[I].end = new Date();\r\n            socket.emit('Ability', ability);\r\n         }\r\n      }, ability.shoot.time);\r\n\r\n   } else if (ability.shoot.value[I] == true) { // If currently shooting (secrete)\r\n      ability.shoot.end[I] = new Date();\r\n      ability.shoot.value[I] = false;\r\n      ability.shoot.secrete[I].radius = _cellwidth / cos45 * 2.9 / 2; // Not predefined (Half secrete)\r\n      ability.shoot.secrete[I].hit = false;\r\n      ability.shoot.secrete[I].time = 800; // Not predefined (Same as secrete)\r\n      clearTimeout(ability.shoot.timeout[I]);\r\n      ability.shoot.secrete[I].start = new Date();\r\n      ability.shoot.secrete[I].color = org.color;\r\n\r\n      // Hit (Apply Ability) (Hit detection on local machine)\r\n      let src = getSrc();\r\n      for (let i = 0; i < src.orgs.length; i++) {\r\n         if (src.orgs[i].player == socket.id || org.team && src.orgs[i].team === org.team) { // Do not apply ability to self or teammate\r\n            continue;\r\n         }\r\n         for (let j = 0; j < src.orgs[i].count; j++) {\r\n            if (sqrt(sq(src.orgs[i].cells[j].x - ability.shoot.spore[I].x) + sq(src.orgs[i].cells[j].y - ability.shoot.spore[I].y)) < ability.shoot.secrete[I].radius) { // If center of cell is within circle (subject to change)\r\n               if (src.abilities[i].neutralize.value == true && sqrt(sq(src.orgs[i].cells[j].x - src.abilities[i].neutralize.x) + sq(src.orgs[i].cells[j].y - src.abilities[i].neutralize.y)) <= src.abilities[i].neutralize.radius) { // If center of cell is within neutralize circle\r\n                  continue;\r\n               }\r\n               use(I, J, src.orgs[i].player); // Apply ability to target\r\n               ability.shoot.secrete[I].hit = true;\r\n               break;\r\n            }\r\n         }\r\n      }\r\n\r\n      ability.shoot.secrete[I].value = true; // Value after hit detection so 'grow' hit detection does not run before initial\r\n      socket.emit('Ability', ability);\r\n      ability.shoot.secrete[I].timeout = setTimeout(() => {\r\n         ability.shoot.secrete[I].value = false;\r\n         ability.shoot.secrete[I].end = new Date(); { // Copy of 'shoot' timeout\r\n            ability.shoot.value[I] = false;\r\n            ability.shoot.spore[I] = undefined;\r\n            ability.shoot.cooling[I] = true;\r\n            ability.shoot.end[I] = new Date();\r\n         }\r\n         clearTimeout(ability.shoot.timeout[I]);\r\n         ability.shoot.timeout[I] = undefined;\r\n         socket.emit('Ability', ability);\r\n      }, ability.shoot.secrete[I].time);\r\n   }\r\n}\r\n\r\nfunction use(I, J, playeR) {\r\n   if (I == 0) {\r\n      if (J == 0) {\r\n         if (ability.extend.activated == true) {\r\n            extend(playeR);\r\n         }\r\n      } else if (J == 1) {\r\n         if (ability.compress.activated == true) {\r\n            compress(playeR);\r\n         } else if (ability.tag.activated == true) {\r\n            tag(playeR);\r\n         }\r\n      }\r\n   } else if (I == 1) {\r\n      if (J == 0) {\r\n         if (ability.immortality.activated == true) {\r\n            immortality(playeR);\r\n         }\r\n      } else if (J == 1) {\r\n         if (ability.freeze.activated == true) {\r\n            freeze(playeR);\r\n         }\r\n      }\r\n   } else if (I == 2) {\r\n      if (J == 0) {\r\n         if (ability.neutralize.activated == true) {\r\n            neutralize(playeR);\r\n         }\r\n      } else if (J == 1) {\r\n         if (ability.toxin.activated == true) {\r\n            toxin(playeR);\r\n         }\r\n      }\r\n   } else if (I == 3) {\r\n      if (J == 0) {\r\n         if (ability.spore.activated == true) {\r\n            spore(playeR);\r\n         }\r\n      } else if (J == 1) {\r\n         if (ability.secrete.activated == true) {\r\n            secrete(playeR);\r\n         }\r\n      }\r\n   }\r\n}\r\n\r\nfunction tag(playeR) {\r\n   socket.emit('Tag', playeR);\r\n   ability.tag.can = false;\r\n   ability.tag.start = new Date();\r\n   socket.emit('Ability', ability);\r\n   setTimeout(() => {\r\n      ability.tag.end = new Date();\r\n      ability.tag.cooling = true;\r\n   }, ability.tag.time);\r\n}\r\n\r\nfunction extend(playeR) {\r\n   ability.extend.can = false;\r\n   socket.emit('Extend', playeR);\r\n}\r\n\r\nfunction compress(playeR) {\r\n   let src = getSrc();\r\n   if (src.src == 'tutorial') { // Since orgs are locally grown in tutorial, abilities must be locally applied\r\n      for (let i = 0; i < src.abilities.length; i++) {\r\n         if (src.abilities[i].player == playeR) {\r\n            src.abilities[i].compress.value = true;\r\n            clearTimeout(src.abilities[i].compress.timeout);\r\n            src.abilities[i].compress.timeout = setTimeout(() => {\r\n               src.abilities[i].compress.value = false;\r\n            }, src.abilities[i].compress.time);\r\n         }\r\n      }\r\n   } else {\r\n      socket.emit('Compress', playeR);\r\n   }\r\n   ability.compress.applied = true;\r\n   ability.compress.can = false; // Redundancy\r\n   ability.compress.start = new Date();\r\n   socket.emit('Ability', ability);\r\n   setTimeout(() => {\r\n      ability.compress.end = new Date();\r\n      ability.compress.applied = false;\r\n      ability.compress.cooling = true;\r\n   }, ability.compress.time);\r\n}\r\n\r\n// function speed(playeR) {\r\n//    socket.emit('Speed', playeR);\r\n// }\r\n\r\n// function slow(playeR) {\r\n//    socket.emit('Slow', playeR);\r\n// }\r\n\r\nfunction immortality(playeR) {\r\n   ability.immortality.can = false;\r\n   socket.emit('Immortality', playeR);\r\n}\r\n\r\nfunction freeze(playeR) {\r\n   let src = getSrc();\r\n   if (src.src == 'tutorial') { // Since orgs are locally grown in tutorial, abilities must be locally applied\r\n      for (let i = 0; i < src.abilities.length; i++) {\r\n         if (src.abilities[i].player == playeR) {\r\n            src.abilities[i].freeze.value = true;\r\n            clearTimeout(src.abilities[i].freeze.timeout);\r\n            src.abilities[i].freeze.timeout = setTimeout(() => {\r\n               src.abilities[i].freeze.value = false;\r\n            }, src.abilities[i].freeze.time);\r\n         }\r\n      }\r\n   } else {\r\n      socket.emit('Freeze', playeR);\r\n   }\r\n   ability.freeze.applied = true;\r\n   ability.freeze.can = false; // Redundancy\r\n   ability.freeze.start = new Date();\r\n   socket.emit('Ability', ability);\r\n   setTimeout(() => {\r\n      ability.freeze.end = new Date();\r\n      ability.freeze.applied = false;\r\n      ability.freeze.cooling = true;\r\n   }, ability.freeze.time);\r\n}\r\n\r\n// function stimulate(playeR) {\r\n//    ability.stimulate.can = false;\r\n//    socket.emit('Stimulate', playeR);\r\n// }\r\n\r\n// function poison(playeR) {\r\n//    socket.emit('Poison', playeR);\r\n//    ability.poison.can = false; // Redundancy\r\n//    ability.poison.start = new Date();\r\n//    socket.emit('Ability', ability);\r\n//    setTimeout(() => {\r\n//       ability.poison.end = new Date();\r\n//       ability.poison.cooling = true;\r\n//    }, ability.poison.time);\r\n// }\r\n\r\nfunction neutralize(playeR) {\r\n   socket.emit('Neutralize', playeR);\r\n   ability.neutralize.can = false;\r\n}\r\n\r\nfunction toxin(playeR) {\r\n   socket.emit('Toxin', playeR);\r\n   ability.toxin.can = false;\r\n}\r\n\r\nfunction spore() {\r\n   if (ability.spore.can == true) { // If spore is allowed\r\n      ability.spore.value = true;\r\n      clearTimeout(ability.spore.timeout);\r\n      ability.spore.can = false;\r\n      ability.secrete.can = true;\r\n      ability.spore.start = new Date();\r\n      var regions = org.getRegionInfo();\r\n      ability.spore.spores = regions.exposed; // All exposed cells become spores\r\n      ability.spore.count = ability.spore.spores.length;\r\n      for (let i = 0; i < ability.spore.count; i++) {\r\n         ability.spore.spores[i].color = org.color;\r\n         ability.spore.spores[i].theta = atan((ability.spore.spores[i].y - org.y()) / (ability.spore.spores[i].x - org.x())); // Generate angle value\r\n         if (ability.spore.spores[i].x < org.x()) {\r\n            ability.spore.spores[i].theta += 180;\r\n         }\r\n         ability.spore.spores[i].speed = ability.spore.speed; // Set spore speed to constant (subject to change)\r\n         for (let j = 0; j < org.count; j++) {\r\n            if (ability.spore.spores[i].x == org.cells[j].x && ability.spore.spores[i].y == org.cells[j].y) { // Find corresponding cell to spore\r\n               org.cells.splice(j, 1); // Remove spore cells from org\r\n               org.count--;\r\n               j--;\r\n            }\r\n         }\r\n      }\r\n      ability.spore.interval = () => {\r\n         for (let i = 0; i < ability.spore.count; i++) {\r\n            ability.spore.spores[i].x += ability.spore.spores[i].speed * cos(ability.spore.spores[i].theta);\r\n            ability.spore.spores[i].y += ability.spore.spores[i].speed * sin(ability.spore.spores[i].theta);\r\n         }\r\n         socket.emit('Ability', ability);\r\n      };\r\n      ability.spore.timeout = setTimeout(() => { // End Spore\r\n         if (ability.spore.value == true && ability.secrete.value == false) { // If secrete() has not been called\r\n            ability.spore.spores = []; // Clear spores array\r\n            ability.spore.value = false;\r\n            ability.spore.end = new Date();\r\n            ability.spore.cooling = true;\r\n            socket.emit('Ability', ability);\r\n         }\r\n      }, ability.spore.time);\r\n   }\r\n}\r\n\r\nfunction secrete() {\r\n   if (ability.secrete.can == true) { // If not already secreting and spores are activated\r\n      ability.secrete.value = true;\r\n      ability.secrete.can = false;\r\n      ability.spore.value = false;\r\n      ability.spore.end = new Date(); // Set spore end date for secrete timer calculations\r\n      clearTimeout(ability.secrete.timeout);\r\n      ability.secrete.start = new Date();\r\n      ability.secrete.color = org.color;\r\n      socket.emit('Ability', ability);\r\n      ability.secrete.timeout = setTimeout(() => { // End Secrete\r\n         ability.secrete.value = false;\r\n         ability.secrete.can = true; { // Copy of spore timeout so spore ends when secrete ends\r\n            ability.spore.spores = []; // Clear spores array\r\n            ability.spore.end = new Date(); // Overwrite actual end date for cooldown purposes\r\n            ability.spore.cooling = true;\r\n         }\r\n         ability.secrete.end = new Date();\r\n         socket.emit('Ability', ability);\r\n      }, ability.secrete.time);\r\n   }\r\n}\r\n\r\nfunction renderSpores(abilitY) {\r\n   let src = getSrc();\r\n   if (abilitY.spore.value == true) {\r\n      for (let i = 0; i < abilitY.spore.count; i++) {\r\n         let cell = abilitY.spore.spores[i];\r\n         for (let j = 0; j < src.orgs.length; j++) {\r\n            if (src.orgs[j].player == abilitY.player) {\r\n               if (src.orgs[j].skin == 'circles') {\r\n                  fill(cell.color.r, cell.color.g, cell.color.b);\r\n                  noStroke();\r\n                  ellipse(cell.x, cell.y, cell.width / 2, cell.height / 2);\r\n               } else if (src.orgs[j].skin == 'ghost') {\r\n                  noFill();\r\n                  stroke(cell.color.r, cell.color.g, cell.color.b);\r\n                  strokeWeight(1);\r\n                  rect(cell.x, cell.y, cell.width, cell.height);\r\n               } else {\r\n                  fill(cell.color.r, cell.color.g, cell.color.b);\r\n                  noStroke();\r\n                  rect(cell.x, cell.y, cell.width, cell.height);\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n   for (let i = 0; i < 3; i++) {\r\n      if (abilitY.shoot.value[i] == true) {\r\n         let cell = abilitY.shoot.spore[i];\r\n         for (let j = 0; j < src.orgs.length; j++) {\r\n            if (src.orgs[j].player == abilitY.player) {\r\n               if (src.orgs[j].skin == 'circles') {\r\n                  fill(cell.color.r, cell.color.g, cell.color.b);\r\n                  noStroke();\r\n                  ellipse(cell.x, cell.y, cell.width / 2 * .8, cell.height / 2 * .8); // .8 (default) size of spore (so as to differentiate between the two)\r\n               } else if (src.orgs[j].skin == 'ghost') {\r\n                  noFill();\r\n                  stroke(cell.color.r, cell.color.g, cell.color.b);\r\n                  strokeWeight(1);\r\n                  rect(cell.x, cell.y, cell.width * .8, cell.height * .8);\r\n               } else {\r\n                  fill(cell.color.r, cell.color.g, cell.color.b);\r\n                  noStroke();\r\n                  rect(cell.x, cell.y, cell.width * .8, cell.height * .8);\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n}\r\n\r\nfunction renderSecretions(abilitY) { // abilitY is src.abilities[x]\r\n   let src = getSrc();\r\n   for (let i = 0; i < src.orgs.length; i++) {\r\n      if (abilitY.player == src.orgs[i].player) { // Identify org of abilitY\r\n         if (abilitY.secrete.value == true) {\r\n            for (let j = 0; j < abilitY.spore.count; j++) {\r\n               let spore = abilitY.spore.spores[j];\r\n               if (src.orgs[i].skin == 'ghost') {\r\n                  noFill();\r\n                  stroke(abilitY.secrete.color.r, abilitY.secrete.color.g, abilitY.secrete.color.b);\r\n                  strokeWeight(2);\r\n                  ellipse(spore.x, spore.y, abilitY.secrete.radius);\r\n               } else {\r\n                  fill(abilitY.secrete.color.r, abilitY.secrete.color.g, abilitY.secrete.color.b);\r\n                  noStroke();\r\n                  ellipse(spore.x, spore.y, abilitY.secrete.radius);\r\n               }\r\n            }\r\n         }\r\n         for (let j = 0; j < abilitY.shoot.value.length; j++) {\r\n            if (abilitY.shoot.secrete[j].value == true) {\r\n               let spore = abilitY.shoot.spore[j];\r\n               if (src.orgs[i].skin == 'ghost') {\r\n                  noFill();\r\n                  stroke(abilitY.shoot.secrete[j].color.r, abilitY.shoot.secrete[j].color.g, abilitY.shoot.secrete[j].color.b);\r\n                  strokeWeight(2);\r\n                  ellipse(spore.x, spore.y, abilitY.shoot.secrete[j].radius);\r\n               } else {\r\n                  fill(abilitY.shoot.secrete[j].color.r, abilitY.shoot.secrete[j].color.g, abilitY.shoot.secrete[j].color.b);\r\n                  noStroke();\r\n                  ellipse(spore.x, spore.y, abilitY.shoot.secrete[j].radius);\r\n               }\r\n            }\r\n         }\r\n         break;\r\n      }\r\n   }\r\n}\r\n\r\nfunction renderNeutralize(abilitY) {\r\n   if (abilitY.neutralize.value == true) { // Render neutralize (not toxin) over shoots, spores, and secretes of opponents\r\n      fill(100);\r\n      stroke(abilitY.neutralize.color.r, abilitY.neutralize.color.g, abilitY.neutralize.color.b);\r\n      strokeWeight(abilitY.neutralize.weight);\r\n      ellipse(abilitY.neutralize.x, abilitY.neutralize.y, abilitY.neutralize.radius);\r\n   }\r\n}\r\n\r\nfunction renderToxin(abilitY) {\r\n   if (abilitY.toxin.value == true) { // Toxin renders at bottom\r\n      fill(100);\r\n      stroke(abilitY.toxin.color.r, abilitY.toxin.color.g, abilitY.toxin.color.b);\r\n      strokeWeight(abilitY.toxin.weight);\r\n      ellipse(abilitY.toxin.x, abilitY.toxin.y, abilitY.toxin.radius);\r\n   }\r\n}\r\n\r\nfunction cooldown(abilitY) { // abilitY is ability.xxxxx, not (games[i].)ability\r\n   if (typeof abilitY.value != 'object') { // If is not shoot (typeof [] == 'object')\r\n      if (abilitY.cooling == true) { // If abilitY is cooling down\r\n         let current = new Date(); // Get current time\r\n         if (current - abilitY.end >= abilitY.cooldown) { // If cooldown has passed\r\n            abilitY.can = true; // Re-enable abilitY\r\n            abilitY.cooling = false;\r\n            socket.emit('Ability', ability); // Update server\r\n         }\r\n      }\r\n   } else { // If is shoot\r\n      for (let i = 0; i < abilitY.value.length; i++) {\r\n         if (abilitY.cooling[i] == true) { // If abilitY is cooling down\r\n            let current = new Date(); // Get current time\r\n            if (current - abilitY.end[i] >= abilitY.cooldown[i]) { // If cooldown has passed\r\n               abilitY.can[i] = true; // Re-enable abilitY\r\n               abilitY.cooling[i] = false;\r\n               socket.emit('Ability', ability); // Update server\r\n            }\r\n         }\r\n      }\r\n   }\r\n}","// Repertoires\r\nconst worldColors = {\r\n   black:            { r: 0,     g: 0,    b: 0   }, // Only black is currently in use\r\n   white:            { r: 230,   g: 230,  b: 230 }, \r\n   blue:             { r: 247,   g: 250,  b: 255 }\r\n};\r\nconst orgColors = {\r\n   black: {\r\n      fire:          { r: 255,   g: 90,   b: 81  }, \r\n      camel:         { r: 232,   g: 183,  b: 155 }, \r\n      clay:          { r: 232,   g: 145,  b: 95  }, \r\n      sun:           { r: 255,   g: 246,  b: 86  }, \r\n      leaf:          { r: 125,   g: 255,  b: 200 }, \r\n      lime:          { r: 57,    g: 249,  b: 86  }, \r\n      sky:           { r: 48,    g: 210,  b: 255 }, \r\n      lake:          { r: 142,   g: 182,  b: 255 }, \r\n      ocean:         { r: 102,   g: 136,  b: 244 }, \r\n      royal:         { r: 175,   g: 132,  b: 255 }, \r\n      petal:         { r: 250,   g: 122,  b: 255 }, \r\n      hot:           { r: 232,   g: 2,    b: 216 }\r\n   }, \r\n   white: {\r\n      fire:          { r: 240,   g: 75,   b: 66  }, \r\n      camel:         { r: 232,   g: 183,  b: 155 }, \r\n      clay:          { r: 232,   g: 145,  b: 95  }, \r\n      burnt:         { r: 196,   g: 99,   b: 19  }, \r\n      lime:          { r: 57,    g: 249,  b: 86  }, \r\n      forest:        { r: 0,       g: 114,  b: 38  }, \r\n      peacock:       { r: 16,    g: 143,  b: 147 }, \r\n      sky:           { r: 48,    g: 210,  b: 255 }, \r\n      lake:          { r: 104,   g: 157,  b: 255 }, \r\n      ocean:         { r: 102,   g: 136,  b: 244 }, \r\n      royal:         { r: 175,   g: 132,  b: 255 }, \r\n      petal:         { r: 250,   g: 122,  b: 255 }, \r\n      hot:           { r: 232,   g: 2,    b: 216 }\r\n   }\r\n};\r\nconst skins = [ 'grid', 'circles', 'ghost' ];\r\nconst modes = {\r\n   ffa: 'Free for All', \r\n   skm: 'Skirmish', \r\n   srv: 'Survival', \r\n   ctf: 'Capture the Flag', \r\n   inf: 'Infection', \r\n   kth: 'King of the Hill'\r\n};\r\nconst teamColors = [ 'red', 'blue', 'green', 'pink' ];\r\nconst teamColorDef = { // Conversion between team name to color name\r\n   red: 'fire', \r\n   blue: 'sky', \r\n   green: 'lime', \r\n   pink: 'petal'\r\n};\r\nconst firsts =  [ 'Extend',      'Compress' ];\r\nconst seconds = [ 'Immortality', 'Freeze'   ];\r\nconst thirds =  [ 'Neutralize' , 'Toxin'    ];\r\n\r\n// Math\r\nconst cos45 = 0.70710678118;\r\nconst root2 = 1.41421356;\r\n\r\n// Configurations\r\nconst _orgfrequency      = 70;    // Org update frequency\r\nconst _renderfrequency = 40;    // Rendering update frequency\r\nconst _range           = 50;    // Org default maximum size\r\nconst _cellwidth       = 6;     // Width of single cell (pixels)\r\nconst _movespeed       = 1.7;   // Crosshair movement speed\r\nconst _spectatespeed   = 2.5;   // Crosshair movement speed in spectate mode\r\nconst _rounddelay       = 10000; // Delay time (in milliseconds) before survival round starts\r\nconst _dummies         = 10;    // Number of dummy orgs in title screen\r\nconst _margin          = 25;    // Title screen margin\r\n\r\n// Settings\r\nlet Labels = true;\r\nlet Messages = true;\r\nlet Controls = {\r\n   left1:    { key: 'A',   code: 65 }, \r\n   left2:    { key: '←',   code: 37 }, \r\n   up1:      { key: 'W',   code: 87 }, \r\n   up2:      { key: '↑',   code: 38 }, \r\n   right1:   { key: 'D',   code: 68 }, \r\n   right2:   { key: '→',   code: 39 }, \r\n   down1:    { key: 'S',   code: 83 }, \r\n   down2:    { key: '↓',   code: 40 }, \r\n   ability1: { key: 'X',   code: 88 }, \r\n   ability2: { key: 'C',   code: 67 }, \r\n   ability3: { key: 'V',   code: 86 }, \r\n   ability4: { key: ' ',   code: 32 }, \r\n   respawn:  { key: 'R',   code: 82 }, \r\n   pause:    { key: 'ESC', code: 27 }, \r\n};\r\nconst Defaults = {\r\n   worldwidth:  800,\r\n   worldheight: 800,\r\n   playercap:   16 ,\r\n   playermin:   4  ,\r\n   boardlength: 10 ,\r\n   teamcount:   2\r\n};\r\n","var game; // Initialize in global scope\r\nvar Game = function(datA) {\r\n   let data = datA;\r\n   this.src = 'game';\r\n   this.players = []; { // Info\r\n      this.info = {\r\n         host: socket.id,\r\n         title: data.title,\r\n         protected: undefined,\r\n         count: 0,\r\n         cap: data.cap,\r\n         mode: data.mode,\r\n         teamCount: data.teamCount\r\n      };\r\n      if (!data.password) // If there is no password\r\n         this.info.protected = false;\r\n      else // If there is a password\r\n         this.info.protected = true;\r\n   } { // Teams\r\n      this.teams = [];\r\n      if (this.info.mode === 'skm' || this.info.mode === 'ctf') {\r\n         for (let i = 0; i < this.info.teamCount; i++) {\r\n            this.teams.push([]); // Outer array contains teams, inner arrays contain player ids\r\n         }\r\n      } else if (this.info.mode === 'inf') {\r\n         for (let i = 0; i < 2; i++) { // Only can be two teams in infection (healthy/infected)\r\n            this.teams.push([]); // Outer array contains teams, inner arrays contain player ids\r\n         }\r\n      }\r\n   } { // Rounds\r\n      this.rounds = {\r\n         host: undefined, // Identification purposes\r\n         util: false, // If game utilizes rounds\r\n         waiting: true,\r\n         delayed: false,\r\n         delaystart: undefined,\r\n         rounddelay: _rounddelay,\r\n         start: undefined,\r\n         min: undefined, // Min players\r\n         winner: undefined\r\n      };\r\n      if (this.info.mode === 'srv' || this.info.mode === 'ctf' || this.info.mode === 'inf' || this.info.mode === 'kth') { // If game mode utilizes round system\r\n         this.rounds.util = true;\r\n         this.rounds.host = this.info.host;\r\n         this.rounds.min = data.min;\r\n         this.rounds.waiting = true;\r\n      }\r\n   }\r\n   this.board = new Board(data);\r\n   this.world = new World(data);\r\n   if (this.info.mode === 'ctf')\r\n      this.flag = new Flag(this.world.x + this.world.width / 2, this.world.y + this.world.height / 2, this.world.border.color);\r\n   this.players = [];\r\n   this.spectators = [];\r\n   this.orgs = [];\r\n   this.abilities = [];\r\n};\r\n\r\nfunction createGame(datA) {\r\n   game = new Game(datA);\r\n   socket.emit('Game Created', game);\r\n   if (game.info.protected) // If game is password protected\r\n      socket.emit('Password Created', { pass: datA.password, info: game.info });\r\n}","var games = [];\r\nvar state;\r\nvar mouseDown = false;\r\n\r\nfunction setup() {\r\n   state = 'setup';\r\n   noCanvas(); // Canvas settings\r\n   rectMode(CENTER); // \"\r\n   ellipseMode(RADIUS); // \"\r\n   angleMode(DEGREES); // \"\r\n   textAlign(LEFT); // \"\r\n\r\n   connectSocket();\r\n   let page = document.body.parentNode; // Edit global variable mouseDown to determine if mouse is down or up anywhere on the page\r\n   let md = () => mouseDown = true; // \"\r\n   page.removeEventListener('mousedown', md); // \"\r\n   page.addEventListener('mousedown', md); // \"\r\n   let mu = () => mouseDown = false; // \"\r\n   page.removeEventListener('mouseup', mu); // \"\r\n   page.addEventListener('mouseup', mu); // \"\r\n   var socketInterval = setInterval(() => { // Create instance of Ability, but socket object must exist first, so loop until socket exists\r\n      ability = new Ability({ player: socket.id }); // Create new instance of Ability\r\n      if (socket.id) { // If socket.id has loaded\r\n         clearInterval(socketInterval); // End the loop\r\n      }\r\n   }, 50);\r\n   center = { // Set coordinates of center of window (and canvas)\r\n      x: window.innerWidth / 2,\r\n      y: window.innerHeight / 2\r\n   };\r\n   renderTitle();\r\n   title = new Title();\r\n}\r\n\r\n/**\r\n * Initialize game\r\n * @param  object game_ game object holding all game-wide info\r\n * @param  object data: {\r\n *                         spectate: boolean true: initialize as spectator, false: initialize as player\r\n *                      }\r\n * @return void\r\n */\r\nfunction initialize(game_, data) {\r\n   ReactDOM.render(<CanvasCont />, eid('cont'));\r\n   game = game_;\r\n   if (data.spectate !== true) { // Field can be left undefined\r\n      spawn({ color: data.color, skin: data.skin, team: data.team });\r\n   } else if (data.spectate === true) {\r\n      spectate({ color: data.color, skin: data.skin, team: data.team });\r\n   }\r\n}\r\n\r\n/**\r\n * Event listener called when user presses a key\r\n * @return boolean false: disables default behaviors\r\n */\r\nfunction keyPressed() {\r\n   switch (keyCode) {\r\n      case Controls.ability1.code: // X by default\r\n         if ((state == 'game' || state == 'tutorial') && org.alive == true) {\r\n            if (ability.extend.activated == true && ability.extend.can == true) {\r\n               extend(org.player); // Extend self\r\n            } else if (ability.compress.activated == true && ability.compress.can == true) {\r\n               shoot(0, 1);\r\n               // for (let i = 0; i < game.info.count; i++) {\r\n               //    if (org.target == game.players[i]) { // Find targeted org\r\n               //       compress(org.target); // Compress targeted org\r\n               //       break;\r\n               //    }\r\n               // }\r\n            } else if (ability.tag.activated == true && ability.tag.can == true) {\r\n               shoot(0, 1);\r\n            }\r\n            // if (ability.speed.activated == true) { // Speed/Slow; OLD\r\n            //    speed(org.player);\r\n            // } else if (ability.slow.activated == true) {\r\n            //    slow(org.target);\r\n            // }\r\n         }\r\n         break;\r\n      case Controls.ability2.code: // C by default\r\n         if ((state == 'game' || state == 'tutorial') && org.alive == true) {\r\n            if (ability.immortality.activated == true && ability.immortality.can == true) {\r\n               immortality(org.player); // Immortalize self\r\n            } else if (ability.freeze.activated == true && ability.freeze.can == true) {\r\n               shoot(1, 1);\r\n               // for (let i = 0; i < game.info.count; i++) {\r\n               //    if (org.target == game.players[i]) { // Find targeted org\r\n               //       freeze(org.target); // Freeze targeted org\r\n               //       break;\r\n               //    }\r\n               // }\r\n            }\r\n         }\r\n         break;\r\n      case Controls.ability3.code: // V by default\r\n         if ((state == 'game' || state == 'tutorial') && org.alive == true) {\r\n            // if (ability.stimulate.activated == true && ability.stimulate.can == true) { // Stimulate/Poison OLD\r\n            //    stimulate(org.player); // Stimulate self\r\n            // } else if (ability.poison.activated == true && ability.poison.can == true) {\r\n            //    shoot(2, 1);\r\n            //    // for (let i = 0; i < game.info.count; i++) {\r\n            //    //    if (org.target == game.players[i]) { // Find targeted org\r\n            //    //       poison(org.target); // Poison targeted org\r\n            //    //       break;\r\n            //    //    }\r\n            //    // }\r\n            // }\r\n            if (ability.neutralize.activated == true && ability.neutralize.can == true) {\r\n               neutralize(org.player);\r\n            } else if (ability.toxin.activated == true && ability.toxin.can == true) {\r\n               toxin(org.player);\r\n            }\r\n         }\r\n         break;\r\n      case Controls.ability4.code: // SPACE by default\r\n         if ((state === 'game' || state === 'tutorial') && org.alive) {\r\n            if (ability.spore.value == false && ability.secrete.value == false) {\r\n               spore();\r\n            } else if (ability.spore.value == true && ability.secrete.value == false) {\r\n               secrete();\r\n            }\r\n         }\r\n         break;\r\n      case Controls.respawn.code: // R by default\r\n         if (state == 'spectate' && org.alive == false && org.spawn == true) {\r\n            if (game.players.length < game.info.cap) {\r\n               socket.emit('Spectator Left', game.info);\r\n               renderMenu('respawn', game); // Load respawn menu\r\n            } else {\r\n               alert('Game is at maximum player capacity');\r\n               // Return to spectate mode\r\n            }\r\n         }\r\n         break;\r\n      case Controls.pause.code: { // ESC by default\r\n         switch (state) { // Used as the back key for menus (variable pause key may be used as well)\r\n            case 'createMenu':\r\n            case 'browser':\r\n               renderTitle(); // unmountComponentAtNode() is unnecessary since ReactDOM.render() clears container before rendering\r\n               break;\r\n            case 'joinMenu':\r\n               if (game.info.host === socket.id) { // If player is host (If player is joining directly after creating the game)\r\n                  socket.emit('Game Ended', game);\r\n                  renderTitle();\r\n               } else {\r\n                  renderBrowser();\r\n               }\r\n               break;\r\n            case 'spectateMenu':\r\n               renderBrowser();\r\n               break;\r\n            case 'game':\r\n               renderMenu('pauseGame', game);\r\n               break;\r\n            case 'spectate':\r\n               renderMenu('pauseSpectate', game);\r\n               break;\r\n            case 'tutorial':\r\n               renderMenu('pauseTutorial', tutorial);\r\n               break;\r\n            case 'pauseSpectateMenu': // Cannot access instance of <Menu> component class to bind as this keyword in submit()\r\n            case 'respawnMenu': // Respawn is included because 'back' for respawn should return to spectate\r\n               state = 'spectate';\r\n               ReactDOM.render(<CanvasCont />, eid('cont'));\r\n               break;\r\n            case 'pauseGameMenu':\r\n               let skip = false;\r\n               for (let i = 0; i < game.players.length; i++) {\r\n                  if (game.players[i] === socket.id) { // If still is a player\r\n                     state = 'game';\r\n                     skip = true;\r\n                     break;\r\n                  }\r\n               }\r\n               if (!skip) {\r\n                  for (let i = 0; i < game.spectators.length; i++) {\r\n                     if (game.spectators[i] === socket.id) {\r\n                        state = 'spectate'; // Must include spectate possibility in pause game; even though a spectator could never open pause game menu, he could be killed while in menu\r\n                        break;\r\n                     }\r\n                  }\r\n               }\r\n               ReactDOM.render(<CanvasCont />, eid('cont'));\r\n               break;\r\n            case 'pauseTutorialMenu':\r\n               state = 'tutorial';\r\n               ReactDOM.render(<CanvasCont />, eid('cont'));\r\n               break;\r\n         }\r\n         break;\r\n      }\r\n   }\r\n   // Hard key codes are separate from variable codes, so in the case of overlap, hard codes will always run\r\n   switch (keyCode) {\r\n      case 27 !== Controls.pause.code ? 27 : '': // ESCAPE only if variable pause key is not ESCAPE (keyCode cannot be a string)\r\n         switch (state) { // Used as the back key for menus (variable pause key may be used as well)\r\n            case 'createMenu':\r\n            case 'browser':\r\n               renderTitle(); // unmountComponentAtNode() is unnecessary since ReactDOM.render() clears container before rendering\r\n               break;\r\n            case 'joinMenu':\r\n               if (game.info.host === socket.id) { // If player is host (If player is joining directly after creating the game)\r\n                  socket.emit('Game Ended', game);\r\n                  renderTitle();\r\n               } else {\r\n                  renderBrowser();\r\n               }\r\n               break;\r\n            case 'spectate':\r\n               renderBrowser();\r\n               break;\r\n            case 'pauseSpectateMenu': // Cannot access instance of <Menu> component class to bind as this keyword in submit()\r\n            case 'respawnMenu': // Respawn is included because 'back' for respawn should return to spectate\r\n               state = 'spectate';\r\n               ReactDOM.render(<CanvasCont />, eid('cont'));\r\n               break;\r\n            case 'pauseGameMenu':\r\n               let skip = false;\r\n               for (let i = 0; i < game.players.length; i++) {\r\n                  if (game.players[i] === socket.id) { // If still is a player\r\n                     state = 'game';\r\n                     skip = true;\r\n                     break;\r\n                  }\r\n               }\r\n               if (!skip) {\r\n                  for (let i = 0; i < game.spectators.length; i++) {\r\n                     if (game.spectators[i] === socket.id) {\r\n                        state = 'spectate'; // Must include spectate possibility in pause game; even though a spectator could never open pause game menu, he could be killed while in menu\r\n                        break;\r\n                     }\r\n                  }\r\n               }\r\n               ReactDOM.render(<CanvasCont />, eid('cont'));\r\n               break;\r\n            case 'pauseTutorialMenu':\r\n               state = 'tutorial';\r\n               ReactDOM.render(<CanvasCont />, eid('cont'));\r\n               break;\r\n         }\r\n         break;\r\n   }\r\n}\r\n\r\n/**\r\n * Event listener called when any mouse button is clicked\r\n *    Not currently in use\r\n * @return boolean false should disable default behaviors\r\n */\r\nfunction mouseClicked() {\r\n   if (mouseButton == LEFT) {\r\n      // if (state == 'game') { // DO NOT DELETE (Click detection is very long)\r\n      //    { // Targeting\r\n      //       org.target = undefined; // Clear target if click not on opponent org\r\n      //       for (let i = 0; i < game.info.count; i++) {\r\n      //          if (game.orgs[i].player == org.player) { // If org is player's org\r\n      //             continue; // Cannot target oneself\r\n      //          }\r\n      //          if (mouseX + org.off.x >= game.orgs[i].clickbox.left && mouseX + org.off.x <= game.orgs[i].clickbox.right && mouseY + org.off.y >= game.orgs[i].clickbox.top && mouseY + org.off.y <= game.orgs[i].clickbox.bottom) { // If clicked another org\r\n      //             org.target = game.orgs[i].player;\r\n      //             break;\r\n      //          }\r\n      //       }\r\n      //    }\r\n      // }\r\n      return false; // Supposedly negates default behavior\r\n   } else if (mouseButton == RIGHT) {\r\n      return false; // Supposedly negates default behavior\r\n   } else if (mouseButton == CENTER) {\r\n      return false; // Supposedly negates default behavior\r\n   }\r\n}\r\n\r\n/**\r\n * Event listener for when the browser's window frame is resized\r\n *    Resizes the canvas to match the window\r\n *    Resizes the world to match the canvas\r\n *    Updates variables to match changes\r\n * @return void\r\n */\r\nfunction windowResized() {\r\n   center = {\r\n      x: window.innerWidth / 2,\r\n      y: window.innerHeight / 2\r\n   };\r\n   let src = getSrc();\r\n   if (state === 'title' || state === 'browser' || state === 'tutorial') {\r\n      src.resize(0, 0, window.innerWidth, window.innerHeight);\r\n   } else if (state === 'game' || state === 'spectate') {\r\n      org.off.x = org.pos.x - center.x; // Reposition org (camera) correctly\r\n      org.off.y = org.pos.y - center.y;\r\n      ReactDOM.render(<CanvasCont />, eid('cont'));\r\n   } else if (state.indexOf('Menu') !== -1) {\r\n      let type = state.slice(0, -4); // To make state string, 'Menu' is concatenated to the end of menu type, remove 'Menu' from state to get menu type\r\n      let data = (type === 'join' || type === 'spectate' || type === 'respawn') ? game : null; // Only join, spectate, and respawn menus use game variable as data\r\n      renderMenu(type, data); // <div id='cont'><Menu type={} data={} /></div>\r\n      if (src.src === 'title') { // ^^ Cut out Menu at end of state string for menu type; Send game as data if src is 'game'; Send tutorial as data is src is 'tutorial'\r\n         src.resize(0, 0, window.innerWidth, window.innerHeight);\r\n      } else if (src.src === 'game') { // If menu during game (player or spectator)\r\n         org.off.x = org.pos.x - center.x; // Reposition org (camera) correctly\r\n         org.off.y = org.pos.y - center.y;\r\n      } else if (src.src === 'tutorial') {\r\n         src.resize(0, 0, window.innerWidth, window.innerHeight);\r\n      } // Resize the content of the canvas in the background of menus\r\n   }\r\n}","var org;\r\nvar Org = function(data) { // data: { player: , color: , skin: , team: , spectate: , pos: , title: } (color and skin are required)\r\n   this.player = data.player;\r\n   this.color = data.color;\r\n   this.skin = data.skin;\r\n   this.team = data.team;\r\n   let src = getSrc();\r\n   if (src != undefined && src.src == 'game') {\r\n      if (game.rounds.util == true) {\r\n         this.ready = false; // org.ready ensures that org will only be forcibly respawned once\r\n      }\r\n      if (game.info.mode == 'srv' && game.rounds.waiting == false) {\r\n         this.spawn = false;\r\n      } else {\r\n         this.spawn = true; // Allowance to spawn\r\n      }\r\n      for (let i = 0; i < game.board.list.length; i++) {\r\n         if (game.board.list[i].player == this.player) { // Find player name in leaderboard list\r\n            this.name = game.board.list[i].name;\r\n         }\r\n      }\r\n   }\r\n   if (data.spectate == true) {\r\n      this.speed = _spectatespeed; // Faster movement when spectating\r\n   } else {\r\n      this.speed = _movespeed; // Speed of position movement\r\n   }\r\n   this.cells = [];\r\n   this.count = 0;\r\n   if (data.pos != undefined) {\r\n      this.pos = data.pos;\r\n   } else {\r\n      do {\r\n         this.pos = { // Position is the target's location in the world\r\n            x: floor(random(game.world.x + 50 + _cellwidth / 2, game.world.x + game.world.width - 50 - _cellwidth / 2)), // +- 50 acts as buffer\r\n            y: floor(random(game.world.y + 50 + _cellwidth / 2, game.world.y + game.world.height - 50 - _cellwidth / 2))\r\n         };\r\n         var rePos = false;\r\n         if (game.world.type == 'rectangle') {\r\n            if (this.pos.x < game.world.x || this.pos.x > game.world.x + game.world.width || this.pos.y < game.world.y || this.pos.y > game.world.y + game.world.height) {\r\n               rePos = false;\r\n            }\r\n         } else if (game.world.type == 'ellipse') {\r\n            if (sq(this.pos.x - (game.world.x + game.world.width / 2)) / sq(game.world.width / 2) + sq(this.pos.y - (game.world.y + game.world.height / 2)) / sq(game.world.height / 2) >= 1) {\r\n               rePos = true;\r\n            }\r\n         }\r\n         for (let i = 0; i < game.info.count; i++) { // Org Overlap\r\n            for (let j = 0; j < game.orgs[i].count; j++) {\r\n               if (game.orgs[i].cells[j].x - game.orgs[i].cells[j].width <= this.pos.x && game.orgs[i].cells[j].x + game.orgs[i].cells[j].width >= this.pos.x && game.orgs[i].cells[j].y - game.orgs[i].cells[j].height <= this.pos.y && game.orgs[i].cells[j].y + game.orgs[i].cells[j].height >= this.pos.y) { // If position collides with enemy cell (Full width buffer is intended)\r\n                  rePos = true;\r\n                  break;\r\n               }\r\n            }\r\n            if (rePos == true) { break; }\r\n            let abilitY = game.abilities[i];\r\n            if (abilitY.secrete.value == true) { // Spore Secretions Overlap\r\n               for (let j = 0; j < abilitY.spore.count; j++) {\r\n                  let cell = abilitY.spore.spores[j];\r\n                  if (sqrt(sq(this.pos.x - cell.x) + sq(this.pos.y - cell.y)) <= abilitY.secrete.radius) {\r\n                     rePos = true;\r\n                     break;\r\n                  }\r\n               }\r\n            }\r\n            for (let j = 0; j < 3; j++) { // Shoot Secretions Overlap\r\n               if (abilitY.shoot.secrete[j].value == true) {\r\n                  let cell = abilitY.shoot.spore[j];\r\n                  let sec = abilitY.shoot.secrete[j];\r\n                  if (sqrt(sq(this.pos.x - cell.x) + sq(this.pos.y - cell.y)) <= sec.radius) {\r\n                     rePos = true;\r\n                     break;\r\n                  }\r\n               }\r\n            }\r\n            if (abilitY.toxin.value == true) { // Toxin Overlap\r\n               if (sqrt(sq(this.pos.x - abilitY.toxin.x) + sq(this.pos.y - abilitY.toxin.y)) <= abilitY.toxin.radius) {\r\n                  rePos = true;\r\n               }\r\n            }\r\n            if (rePos == true) { break; }\r\n         }\r\n      } while (rePos == true);\r\n   }\r\n   this.off = { // Offset is the difference between pos and center\r\n      x: this.pos.x - center.x,\r\n      y: this.pos.y - center.y\r\n   };\r\n   this.col = 10; // Collision radius (square) for crosshair (used in collision detection with flag)\r\n   // this.target = undefined; // ID of player which this org is currently targeting (NOT IN USE)\r\n   // this.clickbox = { // Targeting box for other orgs to click (NOT IN USE)\r\n   //    width: undefined,\r\n   //    height: undefined,\r\n   //    x: undefined,\r\n   //    y: undefined,\r\n   //    left: this.pos.x,\r\n   //    right: this.pos.x,\r\n   //    top: this.pos.y,\r\n   //    bottom: this.pos.y,\r\n   //    buffer: _cellwidth / 2,\r\n   //    color: this.color\r\n   // };\r\n   this.coefficient = -27.5; // Used in calculating size (changes in response to extend and compress abilities)\r\n   this.range = 50;\r\n   this.alive = false;\r\n   this.hit = undefined;\r\n   this.count = this.cells.length;\r\n   this.intervals = []; // Store an array of intervals to be pushed; in case multiple intervals are created unintentionally, they can be cleared\r\n   /**\r\n    * Clear the growth interval(s) in this org\r\n    * @return void\r\n    */\r\n   this.tracker = { // Used to ensure no double org growth intervals\r\n      start: undefined, \r\n      end: undefined, \r\n      elap: undefined\r\n   };\r\n\r\n   // Helper Functions\r\n   /**\r\n    * Compress the org object into only the data that must be sent to the server\r\n    *    In order to reduce latency, data sent through web socket should be minimized\r\n    *    Currently, only the following properties are updated each tick:\r\n    *       alive, cells, off, pos, color, skin, team, coefficient, range\r\n    * @return {Object} contains only attributes of org, no functional properties\r\n    */\r\n   this.getCompressed = () => {\r\n      return {\r\n         player: this.player, // Properties are listed here in the order they appear above in this file (/public/js/org.js)\r\n         color: this.color,\r\n         skin: this.skin,\r\n         team: this.team,\r\n         ready: this.ready,\r\n         spawn: this.spawn,\r\n         name: this.name,\r\n         speed: this.speed,\r\n         cells: this.cells,\r\n         count: this.count,\r\n         pos: this.pos,\r\n         off: this.off,\r\n         col: this.col,\r\n         // target: this.target,\r\n         // clickbox: this.clickbox,\r\n         coefficient: this.coefficient,\r\n         range: this.range,\r\n         alive: this.alive,\r\n         hit: this.hit,\r\n         intervals: this.intervals,\r\n         tracker: this.tracker\r\n      };\r\n   };\r\n   this.clearIntervals = () => {\r\n      for (let i = 0; i < this.intervals.length; i++) {\r\n         clearInterval(this.intervals[i]);\r\n      }\r\n      this.intervals = [];\r\n   };\r\n   this.x = () => { // The average of all cell x values \r\n      let sum = 0;\r\n      for (var i = 0; i < this.count; i++) {\r\n         sum += this.cells[i].x;\r\n      }\r\n      let average = sum / this.count;\r\n      return average;\r\n   };\r\n   this.y = () => { // The average of all cell y values\r\n      let sum = 0;\r\n      for (var i = 0; i < this.count; i++) {\r\n         sum += this.cells[i].y;\r\n      }\r\n      let average = sum / this.count;\r\n      return average;\r\n   };\r\n   this.checkAlive = () => {\r\n      if (this.count > 0) this.alive = true;\r\n      else if (this.count === 0) this.alive = false;\r\n      else console.error('(org).checkAlive(): (org).count < 0');\r\n   };\r\n   // this.setClickbox = () => { // DO NOT DELETE\r\n   //    this.clickbox.left = this.x();\r\n   //    this.clickbox.right = this.clickbox.left;\r\n   //    this.clickbox.top = this.y();\r\n   //    this.clickbox.bottom = this.clickbox.top;\r\n   //    for (let i = 0; i < this.count; i++) { // Set the size of clickbox\r\n   //       if (this.cells[i].x - this.cells[i].width / 2 < this.clickbox.left) {\r\n   //          this.clickbox.left = this.cells[i].x - this.cells[i].width / 2;\r\n   //       }\r\n   //       if (this.cells[i].x + this.cells[i].width / 2 > this.clickbox.right) {\r\n   //          this.clickbox.right = this.cells[i].x + this.cells[i].width / 2;\r\n   //       }\r\n   //       if (this.cells[i].y - this.cells[i].height / 2 < this.clickbox.top) {\r\n   //          this.clickbox.top = this.cells[i].y - this.cells[i].height / 2;\r\n   //       }\r\n   //       if (this.cells[i].y + this.cells[i].height / 2 > this.clickbox.bottom) {\r\n   //          this.clickbox.bottom = this.cells[i].y + this.cells[i].height / 2;\r\n   //       }\r\n   //    }\r\n   //    this.clickbox.left -= this.clickbox.buffer;\r\n   //    this.clickbox.right += this.clickbox.buffer;\r\n   //    this.clickbox.top -= this.clickbox.buffer;\r\n   //    this.clickbox.bottom += this.clickbox.buffer;\r\n   //    this.clickbox.width = this.clickbox.right - this.clickbox.left;\r\n   //    this.clickbox.height = this.clickbox.bottom - this.clickbox.top;\r\n   //    this.clickbox.x = this.clickbox.left + this.clickbox.width / 2;\r\n   //    this.clickbox.y = this.clickbox.top + this.clickbox.height / 2;\r\n   // };\r\n   this.getRegionInfo = () => {\r\n      var enclosed = [];\r\n      var exposed = [];\r\n      var adjacent = [];\r\n      for (let i = 0; i < this.count; i++) {\r\n         let test = { x: undefined, y: undefined };\r\n         var left = false;\r\n         var top = false;\r\n         var right = false;\r\n         var bottom = false;\r\n         for (let j = 0; j < this.count; j++) {\r\n            if (i != j) {\r\n               test = { // Left\r\n                  x: this.cells[i].x - this.cells[i].width,\r\n                  y: this.cells[i].y\r\n               };\r\n               if (test.x == this.cells[j].x && test.y == this.cells[j].y) {\r\n                  left = true; // There is a friendly cell to the left\r\n               }\r\n               test = { // Top\r\n                  x: this.cells[i].x,\r\n                  y: this.cells[i].y - this.cells[i].height\r\n               };\r\n               if (test.x == this.cells[j].x && test.y == this.cells[j].y) {\r\n                  top = true; // There is a friendly cell to the top\r\n               }\r\n               test = { // Right\r\n                  x: this.cells[i].x + this.cells[i].width,\r\n                  y: this.cells[i].y\r\n               };\r\n               if (test.x == this.cells[j].x && test.y == this.cells[j].y) {\r\n                  right = true; // There is a friendly cell to the right\r\n               }\r\n               test = { // Bottom\r\n                  x: this.cells[i].x,\r\n                  y: this.cells[i].y + this.cells[i].height\r\n               };\r\n               if (test.x == this.cells[j].x && test.y == this.cells[j].y) {\r\n                  bottom = true; // There is a friendly cell to the bottom\r\n               }\r\n            }\r\n         }\r\n         if (left == true && top == true && right == true && bottom == true) { // If cell is enclosed on all sides by friendly cells\r\n            enclosed.push(this.cells[i]);\r\n         } else { // If cell is not enclosed on all sides by friendly cells\r\n            exposed.push(this.cells[i]);\r\n         }\r\n         if (left == false) { // Push all empty regions adjacent to org\r\n            adjacent.push({ x: this.cells[i].x - this.cells[i].width, y: this.cells[i].y });\r\n         }\r\n         if (top == false) {\r\n            adjacent.push({ x: this.cells[i].x, y: this.cells[i].y - this.cells[i].height });\r\n         }\r\n         if (right == false) {\r\n            adjacent.push({ x: this.cells[i].x + this.cells[i].width, y: this.cells[i].y });\r\n         }\r\n         if (bottom == false) {\r\n            adjacent.push({ x: this.cells[i].x, y: this.cells[i].y + this.cells[i].height });\r\n         }\r\n      }\r\n      for (var j = 0; j < adjacent.length; j++) { // Splice out empty regions adjacent to multiple cells\r\n         for (var k = 0; k < adjacent.length; k++) {\r\n            if (j != k) { // If adjacent[j] and adjacent[k] are different regions\r\n               if (adjacent[k].x == adjacent[j].x && adjacent[k].y == adjacent[j].y) { // If region is repeated\r\n                  adjacent.splice(k, 1);\r\n                  k--;\r\n               }\r\n               if (j >= adjacent.length) {\r\n                  continue;\r\n               }\r\n            }\r\n         }\r\n      }\r\n      return {\r\n         enclosed: enclosed,\r\n         exposed: exposed,\r\n         adjacent: adjacent\r\n      };\r\n   };\r\n   this.grow = () => {\r\n      // Avoid double intervals\r\n      if (this.tracker.start) { // If tracker has been started\r\n         this.tracker.end = Date.now();\r\n         this.tracker.elap = this.tracker.end - this.tracker.start;\r\n      }\r\n      if (this.tracker.elap < _orgfrequency * .6) { // If org is growing ~twice as frequently as it should\r\n         switch (state) { // Recreate org growth interval (stored in an array so if multiple intervals are created accidentally, they can be cleared)\r\n            case 'game': // Only necessary in states where orgs are growing (game and game pause menu), others states may be added\r\n            case 'pauseGameMenu':\r\n               this.clearIntervals();\r\n               this.intervals.push(setInterval(() => runLoop(), _orgfrequency));\r\n               break;\r\n         }\r\n      }\r\n      let src = getSrc();\r\n      let ability;\r\n      for (let i = 0; i < src.abilities.length; i++) {\r\n         if (src.abilities[i].player == this.player) {\r\n            ability = src.abilities[i];\r\n            break;\r\n         }\r\n      }\r\n      \r\n      this.birth();\r\n      this.naturalDeath();\r\n      this.checkAbilities();\r\n\r\n      this.checkAlive();\r\n\r\n      socket.emit('Org Update', [\r\n         this.alive, // Only the following attributes of org need to be updated\r\n         this.cells, // Latency is decreased by only sending necessary data\r\n         this.off, // Order of this array matters and is encoded in /src/app.js @ socket.on('Org Update')\r\n         this.pos,\r\n         this.color,\r\n         this.skin,\r\n         this.team,\r\n         this.coefficient,\r\n         this.range\r\n      ]);\r\n      if (this.count === 0) {\r\n         for (let i = 0; i < game.board.list.length; i++) {\r\n            if (game.board.list[i].player === socket.id) { // Add death to leaderboard\r\n               game.board.list[i].deaths++; // Add 1 to deaths counter\r\n               orderBoard(game.board.list); // Sort the list by kills then deaths\r\n               socket.emit('Board', { list: game.board.list, host: game.board.host }); // Send updated board to server\r\n            }\r\n         }\r\n         if (this.hit !== this.player) { // Cannot gain kill for suicide\r\n            for (let i = 0; i < game.board.list.length; i++) {\r\n               if (game.board.list[i].player === this.hit) { // Find killer in leaderboard list\r\n                  game.board.list[i].kills++;\r\n                  orderBoard(game.board.list);\r\n                  socket.emit('Board', { list: game.board.list, host: game.board.host });\r\n                  break;\r\n               }\r\n            }\r\n         }\r\n         die(true);\r\n      }\r\n      \r\n      this.tracker.start = Date.now();\r\n   };\r\n   /**\r\n    * Determine if and where cells should be born during a single tick\r\n    * @return void\r\n    */\r\n   this.birth = () => {\r\n      let src = getSrc();\r\n      let regions = this.getRegionInfo();\r\n      if (ability.freeze.value === false) { // If org is not Frozen (cannot birth or die naturally)\r\n         // for (let a = 0; a < ability.stimulate.factor; a++) { // Multiply runs by factor of stimulate OLD\r\n         // if (ability.poison.value == true) {\r\n         //    if (random(0, ability.poison.factor) >= 1) { // Divide runs by factor of poison (Runs 1 / factor)\r\n         //       continue;\r\n         //    }\r\n         // }\r\n         for (let i = 0; i < regions.adjacent.length; i++) { // Only Adjacent Regions Can Produce New Cells\r\n            // Don't birth new cell outside world boundary\r\n            if (src.world) {\r\n               if (src.world.type === 'rectangle') {\r\n                  if (regions.adjacent[i].x - _cellwidth / 2 <= src.world.x || regions.adjacent[i].x + _cellwidth / 2 >= src.world.x + src.world.width || regions.adjacent[i].y - _cellwidth / 2 <= src.world.x || regions.adjacent[i].y + _cellwidth / 2 >= src.world.y + src.world.height) { // If new cell would be outside world boundary\r\n                     continue;\r\n                  }\r\n               } else if (src.world.type === 'ellipse') {\r\n                  let a = src.world.width / 2;\r\n                  let b = src.world.height / 2;\r\n                  let x = (regions.adjacent[i].x - _cellwidth / 2) - a;\r\n                  let y = (regions.adjacent[i].y - _cellwidth / 2) - b;\r\n                  if (sq(x) / sq(a) + sq(y) / sq(b) >= 1) { // If top-left corner is outside ellipse\r\n                     continue;\r\n                  }\r\n                  x = (regions.adjacent[i].x + _cellwidth / 2) - a;\r\n                  y = (regions.adjacent[i].y - _cellwidth / 2) - b;\r\n                  if (sq(x) / sq(a) + sq(y) / sq(b) >= 1) { // If top-right corner is outside ellipse\r\n                     continue;\r\n                  }\r\n                  x = (regions.adjacent[i].x + _cellwidth / 2) - a;\r\n                  y = (regions.adjacent[i].y + _cellwidth / 2) - b;\r\n                  if (sq(x) / sq(a) + sq(y) / sq(b) >= 1) { // If bottom-right corner is outside ellipse\r\n                     continue;\r\n                  }\r\n                  x = (regions.adjacent[i].x - _cellwidth / 2) - a;\r\n                  y = (regions.adjacent[i].y + _cellwidth / 2) - b;\r\n                  if (sq(x) / sq(a) + sq(y) / sq(b) >= 1) { // If bottom-left corner is outside ellipse\r\n                     continue;\r\n                  }\r\n               }\r\n            }\r\n            // Don't birth new cell on top of an opponent org\r\n            var overlap = false;\r\n            for (let j = 0; j < src.orgs.length; j++) {\r\n               if (src.orgs[j].player === this.player) { // If org is player's org\r\n                  continue;\r\n               }\r\n               for (let k = 0; k < src.orgs[j].count; k++) {\r\n                  if (regions.adjacent[i].x + _cellwidth / 2 >= src.orgs[j].cells[k].x - _cellwidth / 2 && regions.adjacent[i].x + _cellwidth / 2 <= src.orgs[j].cells[k].x + _cellwidth / 2) { // If right side collides\r\n                     if (regions.adjacent[i].y + _cellwidth / 2 >= src.orgs[j].cells[k].y - _cellwidth / 2 && regions.adjacent[i].y + _cellwidth / 2 <= src.orgs[j].cells[k].y + _cellwidth / 2) { // If bottom side collides\r\n                        overlap = true;\r\n                     } else if (regions.adjacent[i].y - _cellwidth / 2 >= src.orgs[j].cells[k].y - _cellwidth / 2 && regions.adjacent[i].y - _cellwidth / 2 <= src.orgs[j].cells[k].y + _cellwidth / 2) { // If top side collides\r\n                        overlap = true;\r\n                     }\r\n                  } else if (regions.adjacent[i].x - _cellwidth / 2 >= src.orgs[j].cells[k].x - _cellwidth / 2 && regions.adjacent[i].x - _cellwidth / 2 <= src.orgs[j].cells[k].x + _cellwidth / 2) { // If left side collides\r\n                     if (regions.adjacent[i].y + _cellwidth / 2 >= src.orgs[j].cells[k].y - _cellwidth / 2 && regions.adjacent[i].y + _cellwidth / 2 <= src.orgs[j].cells[k].y + _cellwidth / 2) { // If bottom side collides\r\n                        overlap = true;\r\n                     } else if (regions.adjacent[i].y - _cellwidth / 2 >= src.orgs[j].cells[k].y - _cellwidth / 2 && regions.adjacent[i].y - _cellwidth / 2 <= src.orgs[j].cells[k].y + _cellwidth / 2) { // If top side collides\r\n                        overlap = true;\r\n                     }\r\n                  }\r\n               }\r\n            }\r\n            if (overlap === true) {\r\n               continue;\r\n            }\r\n            // Birth new cell accordingly\r\n            if (ability.compress.value ^ ability.extend.value == 0) { // compress.value NOT XOR extend.value\r\n               this.coefficient = -27.5;\r\n               this.range = _range;\r\n            } else if (ability.compress.value == true) {\r\n               this.coefficient = -31.5;\r\n               this.range = _range - 10;\r\n            } else if (ability.extend.value == true) {\r\n               this.coefficient = -25.5;\r\n               this.range = _range + 20;\r\n            }\r\n            let chance = this.coefficient * Math.log(sqrt(sq(regions.adjacent[i].x - this.pos.x) + sq(regions.adjacent[i].y - this.pos.y)) + 1) + 100; // -27.5(ln(r + 1)) + 100\r\n            if (random(0, 100) <= chance) {\r\n               var repeat = false;\r\n               for (let j = 0; j < this.count; j++) {\r\n                  if (regions.adjacent[i].x == this.cells[j].x && regions.adjacent[i].y == this.cells[j].y) {\r\n                     repeat = true;\r\n                     break;\r\n                  }\r\n               }\r\n               if (repeat === false) {\r\n                  this.cells.push(new Cell(regions.adjacent[i].x, regions.adjacent[i].y, this));\r\n                  this.count++;\r\n               }\r\n            }\r\n         }\r\n      }\r\n   };\r\n   /**\r\n    * Determine if and where cells should die naturally (without ability involvement) during a single tick\r\n    *    Remove cells from org after determination\r\n    * @return void\r\n    */\r\n   this.naturalDeath = () => {\r\n      let src = getSrc();\r\n      let regions = this.getRegionInfo();\r\n      if (ability.freeze.value === false) { // If org is not Frozen (cannot birth or die naturally)\r\n         if (ability.immortality.value === false) { // If org is not Immortal\r\n            for (let i = 0; i < regions.exposed.length; i++) { // Only Exposed Cells Can Die\r\n               let chance = this.coefficient * Math.log(-regions.exposed[i].d(this) + (this.range + 1)) + 100; // -27.5(ln(-(r - 51))) + 100\r\n               if (regions.exposed[i].d(this) > this.range) { // If exposed cell is outside maximum radius\r\n                  for (let j = 0; j < this.count; j++) {\r\n                     if (regions.exposed[i].x === this.cells[j].x && regions.exposed[i].y === this.cells[j].y) { // Find exposed cell within org cells array\r\n                        this.cells.splice(j, 1);\r\n                        this.count--;\r\n                        regions.exposed.splice(i, 1);\r\n                        i--;\r\n                        j--;\r\n                        break;\r\n                     }\r\n                  }\r\n                  continue;\r\n               }\r\n               if (src.world.type == 'rectangle' && (regions.exposed[i].x < src.world.x || regions.exposed[i].x > src.world.x + src.world.width || regions.exposed[i].y < src.world.y || regions.exposed[i].y > src.world.y + src.world.height)) { // If cell is outside rectangular world\r\n                  for (let j = 0; j < this.count; j++) {\r\n                     if (regions.exposed[i].x === this.cells[j].x && regions.exposed[i].y === this.cells[j].y) {\r\n                        this.cells.splice(j, 1);\r\n                        this.count--;\r\n                        regions.exposed.splice(i, 1);\r\n                        i--;\r\n                        j--;\r\n                        break;\r\n                     }\r\n                  }\r\n               } else if (src.world.type === 'ellipse' && sq(regions.exposed[i].x - src.world.x - src.world.width / 2) / sq(src.world.width / 2) + sq(regions.exposed[i].y - src.world.y - src.world.height / 2) / sq(src.world.height / 2) > 1) { // If outside elliptical world\r\n                  for (let j = 0; j < this.count; j++) {\r\n                     if (regions.exposed[i].x === this.cells[j].x && regions.exposed[i].y === this.cells[j].y) { // Identify cell\r\n                        this.cells.splice(j, 1);\r\n                        this.count--;\r\n                        regions.exposed.splice(i, 1);\r\n                        i--;\r\n                        j--;\r\n                        break;\r\n                     }\r\n                  }\r\n               }\r\n               if (random(0, 100) <= chance) {\r\n                  for (let j = 0; j < this.count; j++) {\r\n                     if (regions.exposed[i].x === this.cells[j].x && regions.exposed[i].y === this.cells[j].y) {\r\n                        this.cells.splice(j, 1);\r\n                        this.count--;\r\n                        regions.exposed.splice(i, 1);\r\n                        i--;\r\n                        j--;\r\n                        break;\r\n                     }\r\n                  }\r\n               }\r\n            }\r\n         }\r\n      }\r\n   };\r\n   this.checkAbilities = () => {\r\n      let src = getSrc();\r\n      for (let i = 0; i < src.orgs.length; i++) {\r\n         if ((src.orgs[i].team === this.team && typeof team === 'string') && src.orgs[i].player !== socket.id) { // If is friendly org but not own org\r\n            continue; // No friendly fire but can hurt self\r\n         }\r\n         if (src.abilities[i].secrete.value === true) { // Secrete (placed in grow interval so cells will be killed on any overlap with secretion, not just initial impact)\r\n            for (let j = 0; j < this.count; j++) {\r\n               for (let k = 0; k < src.abilities[i].spore.count; k++) {\r\n                  if (sqrt(sq(this.cells[j].x - src.abilities[i].spore.spores[k].x) + sq(this.cells[j].y - src.abilities[i].spore.spores[k].y)) <= src.abilities[i].secrete.radius) { // If center of cell is within secrete circle (subject to change)\r\n                     let skip = false;\r\n                     for (let l = 0; l < src.abilities.length; l++) {\r\n                        if (src.abilities[l].neutralize.value === true && sqrt(sq(this.cells[j].x - src.abilities[l].neutralize.x) + sq(this.cells[j].y - src.abilities[l].neutralize.y)) <= src.abilities[l].neutralize.radius) { // If center of cell is within neutralize circle\r\n                           skip = true;\r\n                           break;\r\n                        }\r\n                     }\r\n                     if (skip) {\r\n                        continue; // Acid is ineffectual when neutralized\r\n                     }\r\n                     this.hit = src.abilities[i].player;\r\n                     if (src.src === 'game' && this.hit !== this.player) { // Only for game; Only for other player hits\r\n                        for (let l = 0; l < src.teams.length; l++) { // Search teams\r\n                           if (src.teams[l].indexOf(this.hit) !== -1 && src.teams[l].indexOf(this.player) !== -1) { // If player and hitter are on same team\r\n                              skip = true;\r\n                              break;\r\n                           }\r\n                        }\r\n                     }\r\n                     if (skip) {\r\n                        continue; // Acid is ineffectual when neutralized\r\n                     }\r\n                     this.cells.splice(j, 1);\r\n                     this.count--;\r\n                     j--;\r\n                     break;\r\n                  }\r\n               }\r\n            }\r\n         }\r\n         for (let j = 0; j < 3; j++) { // Shoot secretion (placed in grow interval so cells will be killed on any overlap with secretion, not just initial impact) (Shoot secretion is smaller than spore secretion)\r\n            if (src.abilities[i].shoot.secrete[j].value == true) {\r\n               for (let k = 0; k < this.count; k++) {\r\n                  if (sqrt(sq(this.cells[k].x - src.abilities[i].shoot.spore[j].x) + sq(this.cells[k].y - src.abilities[i].shoot.spore[j].y)) <= src.abilities[i].shoot.secrete[j].radius) { // If center of cell is within shoot circle (subject to change)\r\n                     let skip = false;\r\n                     for (let l = 0; l < src.abilities.length; l++) {\r\n                        if (src.abilities[l].neutralize.value == true && sqrt(sq(this.cells[j].x - src.abilities[l].neutralize.x) + sq(this.cells[j].y - src.abilities[l].neutralize.y)) <= src.abilities[l].neutralize.radius) { // If center of cell is within neutralize circle\r\n                           skip = true;\r\n                           break;\r\n                        }\r\n                     }\r\n                     if (skip) {\r\n                        continue; // Acid is ineffectual when neutralized\r\n                     }\r\n                     this.hit = src.abilities[i].player;\r\n                     if (src.src === 'game' && this.hit !== this.player) { // Only for game; Only for other player hits\r\n                        for (let l = 0; l < src.teams.length; l++) { // Search teams\r\n                           if (src.teams[l].indexOf(this.hit) !== -1 && src.teams[l].indexOf(this.player) !== -1) { // If player and hitter are on same team\r\n                              skip = true;\r\n                              break;\r\n                           }\r\n                        }\r\n                     }\r\n                     if (skip) {\r\n                        continue; // Acid is ineffectual when neutralized\r\n                     }\r\n                     this.cells.splice(k, 1);\r\n                     this.count--;\r\n                     k--;\r\n                     // break; // Break causes cells to die one at a time (not default)\r\n                  }\r\n               }\r\n            }\r\n         }\r\n         if (src.abilities[i].toxin.value == true) { // Toxin\r\n            for (let j = 0; j < this.count; j++) {\r\n               if (this.player == src.abilities[i].player) { // If is own org's toxin\r\n                  continue; // Do not kill own cells\r\n               }\r\n               if (sqrt(sq(this.cells[j].x - src.abilities[i].toxin.x) + sq(this.cells[j].y - src.abilities[i].toxin.y)) <= src.abilities[i].toxin.radius) { // If center of cell is within toxin circle\r\n                  let skip = false;\r\n                  for (let l = 0; l < src.abilities.length; l++) {\r\n                     if (src.abilities[l].neutralize.value == true && sqrt(sq(this.cells[j].x - src.abilities[l].neutralize.x) + sq(this.cells[j].y - src.abilities[l].neutralize.y)) <= src.abilities[l].neutralize.radius) { // If center of cell is within neutralize circle\r\n                        skip = true;\r\n                        break;\r\n                     }\r\n                  }\r\n                  if (skip) {\r\n                     continue; // Acid is ineffectual when neutralized\r\n                  }\r\n                  this.hit = src.abilities[i].player;\r\n                  if (src.src === 'game' && this.hit !== this.player) { // Only for game; Only for other player hits\r\n                     for (let l = 0; l < src.teams.length; l++) { // Search teams\r\n                        if (src.teams[l].indexOf(this.hit) !== -1 && src.teams[l].indexOf(this.player) !== -1) { // If player and hitter are on same team\r\n                           skip = true;\r\n                           break;\r\n                        }\r\n                     }\r\n                  }\r\n                  if (skip) {\r\n                     continue; // Acid is ineffectual when neutralized\r\n                  }\r\n                  this.cells.splice(j, 1); // Kill cell\r\n                  this.count--;\r\n                  j--;\r\n                  // break; // Break causes cells to die one at a time (not default)\r\n               }\r\n            }\r\n         }\r\n      }\r\n   };\r\n};\r\n\r\nvar Cell = function(x, y, org) {\r\n   this.player = org.player;\r\n   this.width = _cellwidth; // or 3x3\r\n   this.height = _cellwidth;\r\n   this.x = x;\r\n   this.y = y;\r\n   this.color = org.color;\r\n   this.r = function() { // Distance from org center\r\n      let distance = sqrt(sq(this.x - org.x()) + sq(this.y - org.y()));\r\n      return distance;\r\n   };\r\n   this.d = function(org) { // Distance from target (Position in world)\r\n      let distance = sqrt(sq(this.x - org.pos.x) + sq(this.y - org.pos.y));\r\n      return distance;\r\n   };\r\n};\r\n\r\nfunction renderOrgs() {\r\n   let src = getSrc();\r\n   for (let i = 0; i < src.orgs.length; i++) {\r\n      for (let j = 0; j < src.orgs[i].count; j++) {\r\n         let cell = src.orgs[i].cells[j];\r\n         fill(src.orgs[i].color.r, src.orgs[i].color.g, src.orgs[i].color.b);\r\n         if (src.orgs[i].skin == 'grid') {\r\n            stroke(40, 40, 40); // Draw constant grid (natural grid is variable)\r\n            strokeWeight(.25);\r\n            rect(cell.x, cell.y, cell.width, cell.height);\r\n         } else if (src.orgs[i].skin == 'circles') {\r\n            noStroke();\r\n            ellipse(cell.x, cell.y, cell.width / 2, cell.height / 2);\r\n         } else if (src.orgs[i].skin == 'ghost') {\r\n            noFill();\r\n            stroke(src.orgs[i].color.r, src.orgs[i].color.g, src.orgs[i].color.b);\r\n            strokeWeight(1);\r\n            rect(cell.x, cell.y, cell.width, cell.height);\r\n         } else if (src.orgs[i].skin == 'none') {\r\n            stroke(src.orgs[i].color.r, src.orgs[i].color.g, src.orgs[i].color.b); // Stroke over natural grid\r\n            strokeWeight(1);\r\n            rect(cell.x, cell.y, cell.width, cell.height);\r\n         }\r\n      }\r\n   }\r\n}","function spawn(data) { // data: { color: {}, skin: '', team: '' }\r\n   state = 'game';\r\n   org = new Org({ player: socket.id, color: data.color, skin: data.skin, team: data.team, spectate: false });\r\n   org.cells[0] = new Cell(org.pos.x, org.pos.y, org); // Create first cell in org\r\n   org.count++;\r\n   let compressedOrg = org.getCompressed();\r\n   socket.emit('Player Joined', { info: game.info, org: compressedOrg, ability: ability });\r\n}\r\n\r\nfunction spectate(data) { // data: { color: {}, pos: {}, skin: '', team: '' }\r\n   state = 'spectate';\r\n   socket.emit('Spectator Joined', game);\r\n   org = new Org( { player: socket.id, color: data.color, skin: data.skin, team: data.team, pos: data.pos, spectate: true } );\r\n}\r\n\r\nfunction renderUI() {\r\n   let src = getSrc();\r\n   // Crosshair\r\n   if (src.src != 'tutorial') {\r\n      noFill();\r\n      stroke(src.world.border.color.r, src.world.border.color.g, src.world.border.color.b);\r\n      strokeWeight(1);\r\n      line(org.pos.x - 4, org.pos.y, org.pos.x + 4, org.pos.y);\r\n      line(org.pos.x, org.pos.y - 4, org.pos.x, org.pos.y + 4);\r\n   }\r\n\r\n   // // Render Clickbox\r\n   // if (org.target) { // If org is targenting a player (NOT IN USE)\r\n   //    for (let i = 0; i < src.orgs.length; i++) {\r\n   //       if (src.orgs[i].player == org.target) { // Find targeted org\r\n   //          noFill();\r\n   //          stroke(src.orgs[i].clickbox.color.r, src.orgs[i].clickbox.color.g, src.orgs[i].clickbox.color.b);\r\n   //          strokeWeight(1);\r\n   //          rect(src.orgs[i].clickbox.x, src.orgs[i].clickbox.y, src.orgs[i].clickbox.width, src.orgs[i].clickbox.height, 2); // Draw Target Box\r\n   //       }\r\n   //    }\r\n   // }\r\n\r\n   // Screen Name Labels\r\n   if (Labels && src.src === 'game') {\r\n      fill(game.world.border.color.r, game.world.border.color.g, game.world.border.color.b); // Same color as border to maintain contrast with background\r\n      noStroke();\r\n      textFont('Helvetica');\r\n      if (game.world.color == 'black') {\r\n         textStyle(NORMAL);\r\n      } else if (game.world.color == 'white') {\r\n         textStyle(BOLD);\r\n      }\r\n      textSize(10);\r\n      for (let i = 0; i < game.info.count; i++) {\r\n         for (let j = 0; j < game.board.list.length; j++) {\r\n            if (game.orgs[i].player == game.board.list[j].player) {\r\n               let x = function() { // x() and y() cannot be accessed through orgs array, so code is copied and edited from org file\r\n                  let sum = 0;\r\n                  for (let k = 0; k < game.orgs[i].count; k++) {\r\n                     sum += game.orgs[i].cells[k].x;\r\n                  }\r\n                  let average = sum / game.orgs[i].count;\r\n                  return average;\r\n               };\r\n               let y = function() {\r\n                  let sum = 0;\r\n                  for (let k = 0; k < game.orgs[i].count; k++) {\r\n                     sum += game.orgs[i].cells[k].y;\r\n                  }\r\n                  let average = sum / game.orgs[i].count;\r\n                  return average;\r\n               };\r\n               if (game.board.list[j].name.length <= 30) {\r\n                  text(game.board.list[j].name, x() - textWidth(game.board.list[j].name) / 2, y() + sqrt(sq(_cellwidth) * game.orgs[i].count / PI) + 2 * _cellwidth + 8); // sqrt expression approximates radius as a circle; 6 is buffer\r\n               } else {\r\n                  text(game.board.list[j].name.slice(0, 20) + '...', x() - textWidth(game.board.list[j].name.slice(0, 20)) / 2, y() + sqrt(sq(_cellwidth) * game.orgs[i].count / PI) + 2 * _cellwidth + 8); // sqrt expression approximates radius as a circle; 6 is buffer\r\n               }\r\n            }\r\n         }\r\n      }\r\n   }\r\n\r\n   // Ability Cooldowns\r\n   if (!src.stopped) {\r\n      for (let i in ability) { // Regular Cooldowns\r\n         if (typeof ability[i] == 'object' && i !== 'shoot') {\r\n            if (ability[i].cooling == true) {\r\n               cooldown(ability[i]);\r\n            }\r\n         }\r\n      }\r\n      for (let i = 0; i < ability.shoot.value.length; i++) { // Shoot Cooldown\r\n         if (ability.shoot.cooling[i] == true) {\r\n            cooldown(ability.shoot);\r\n            break;\r\n         }\r\n      }\r\n   }\r\n\r\n   // Ability Tooltips\r\n   translate(org.off.x, org.off.y);\r\n   var currentTime;\r\n   if (src.stopped == true) {\r\n      currentTime = src.stopdate;\r\n   } else {\r\n      currentTime = new Date(); // Set current time\r\n   }\r\n   if (!ability.tag.activated) {\r\n      for (let i = 0; i < 4; i++) {\r\n         for (let j in ability) {\r\n            if (typeof ability[j] === 'object') {\r\n               if (ability[j].i === i) { // Find corresponding ability set to tooltip\r\n                  if (ability[j].activated == true) { // Find corresponding activated ability to tooltip\r\n                     if (j == 'spore' && ability.secrete.value == true) {\r\n                        continue; // Do not draw spore\r\n                     }\r\n                     if (j == 'secrete' && ability.secrete.value == false) {\r\n                        continue; // Do not draw secrete\r\n                     }\r\n                     fill(215);\r\n                     stroke(0);\r\n                     strokeWeight(1);\r\n                     rect(center.x - 150 + i * 100, height * 9 / 10 + 30, 24, 38, 0, 0, 4, 4); // Letter background box\r\n                     let letter;\r\n                     if (i == 0) {\r\n                        letter = Controls.ability1.key;\r\n                     } else if (i == 1) {\r\n                        letter = Controls.ability2.key;\r\n                     } else if (i == 2) {\r\n                        letter = Controls.ability3.key;\r\n                     } else if (i == 3) {\r\n                        if (Controls.ability4.key == ' ') {\r\n                           letter = '_'; // Display space bar as underscore\r\n                        } else {\r\n                           letter = Controls.ability4.key;\r\n                        }\r\n                     }\r\n                     fill(0);\r\n                     noStroke();\r\n                     textSize(14);\r\n                     textFont('Consolas');\r\n                     textStyle(BOLD);\r\n                     text(letter, center.x - 150 + i * 100 - textWidth(letter) / 2, height * 9 / 10 + 30 + 13);\r\n                     fill(0);\r\n                     stroke(0);\r\n                     strokeWeight(1);\r\n                     ellipse(center.x - 150 + i * 100, height * 9 / 10, 30); // Background ellipse; Necessary to cover the key tip\r\n                     fill(215);\r\n                     noStroke();\r\n                     if (ability[j].j == 0) { // If defensive ability (or spore)\r\n                        // Ability\r\n                        if (ability[j].value == true) { // If during ability\r\n                           arc(center.x - 150 + i * 100, height * 9 / 10, 29, 29, -90, -90 - (currentTime - ability[j].start) / ability[j].time * 360); // Ability timeout timer\r\n                        } else if (ability[j].value == false && ability[j].can == false) { // If during cooldown\r\n                           arc(center.x - 150 + i * 100, height * 9 / 10, 29, 29, -90, -90 + (currentTime - ability[j].end) / ability[j].cooldown * 360); // Ability cooldown timer\r\n                        } else if (ability[j].value == false && ability[j].can == true) { // If idling\r\n                           ellipse(center.x - 150 + i * 100, height * 9 / 10, 29);\r\n                        }\r\n                     } else if (ability[j].j == 1) { // If offensive ability\r\n                        if (ability[j].i < 3) { // If one of first three abilities (not secrete)\r\n                           noStroke();\r\n                           // Ability\r\n                           if (ability[j].can == true) { // Idle\r\n                              ellipse(center.x - 150 + i * 100, height * 9 / 10, 29);\r\n                           } else if (ability[j].can == false && currentTime - ability[j].start <= ability[j].time) { // If during ability\r\n                              arc(center.x - 150 + i * 100, height * 9 / 10, 29, 29, -90, -90 - (currentTime - ability[j].start) / ability[j].time * 360); // Ability timeout timer\r\n                           } else if (ability[j].can == false && currentTime - ability[j].start > ability[j].time) { // If during cooldown\r\n                              arc(center.x - 150 + i * 100, height * 9 / 10, 29, 29, -90, -90 + (currentTime - ability[j].end) / ability[j].cooldown * 360); // Ability cooldown timer\r\n                           }\r\n                           // Shoot\r\n                           if (j != 'toxin') { // Toxin does not shoot\r\n                              stroke(0);\r\n                              if (ability.shoot.value[i] == false && ability.shoot.can[i] == true) { // Idle\r\n                                 ellipse(center.x - 150 + i * 100 - 41, height * 9 / 10, 8);\r\n                              } else if (ability.shoot.value[i] == true && ability.shoot.can[i] == false) { // If is shooting\r\n                                 arc(center.x - 150 + i * 100 - 41, height * 9 / 10, 8, 8, -90, -90 - (currentTime - ability.shoot.start[i]) / ability.shoot.time * 360); // Ability timeout timer\r\n                              } else if (ability.shoot.secrete[i].value == true) { // If is secreting\r\n                                 arc(center.x - 150 + i * 100 - 41, height * 9 / 10, 8, 8, -90, -90 - ((ability.shoot.end[i] - ability.shoot.start[i]) / ability.shoot.time * 360) - ((currentTime - ability.shoot.secrete[i].start) / ability.secrete.time * (360 - (ability.shoot.end[i] - ability.shoot.start[i]) / ability.shoot.time * 360))); // Secretion timer\r\n                              } else if (currentTime - ability.shoot.secrete[i].end < ability.shoot.cooldown[i]) {\r\n                                 arc(center.x - 150 + i * 100 - 41, height * 9 / 10, 8, 8, -90, -90 + ((currentTime - ability.shoot.secrete[i].end) / ability.shoot.cooldown[i] * 360)); // Shoot cooldown timer (if no hit)\r\n                              }\r\n                           }\r\n                        } else if (ability[j].i == 3) { // Secrete\r\n                           if (ability[j].can == true) { // Idle\r\n                              ellipse(center.x - 150 + i * 100, height * 9 / 10, 29);\r\n                           } else if (ability[j].can == false && currentTime - ability[j].start <= ability[j].time) { // If during ability\r\n                              arc(center.x - 150 + i * 100, height * 9 / 10, 29, 29, -90, -90 - ((ability.spore.end - ability.spore.start) / ability.spore.time * 360) - (currentTime - ability[j].start) / ability[j].time * (360 - ((ability.spore.end - ability.spore.start) / ability.spore.time * 360))); // Ability cooldown timer\r\n                           }\r\n                        }\r\n                     }\r\n                     itemize(items[j], 1, { r: 0, g: 0, b: 0 }, center.x - 150 + i * 100, height * 9 / 10);\r\n                  }\r\n                  if (ability[j].value == true && ability[j].i < 3) { // Ability Activated Tooltip (Not for spore/secrete)\r\n                     if (ability[j].j == 0 || ability[j].i == 3) { // If defensive ability (+ secrete)\r\n                        fill(66, 244, 176); // Green\r\n                        noStroke();\r\n                        ellipse(center.x - 150 + i * 100 - 9, height * 9 / 10 - 37, 5, 5);\r\n                     } else if (ability[j].j == 1 && ability[j].i != 3) { // If offensive ability (No secrete)\r\n                        fill(255, 141, 135); // Red\r\n                        noStroke();\r\n                        ellipse(center.x - 150 + i * 100 + 9, height * 9 / 10 - 37, 5, 5);\r\n                     }\r\n                  }\r\n                  // fill(215);\r\n                  // ellipse(center.x - 150 + 3 * 100, height * 9 / 10, 29);\r\n               }\r\n            }\r\n         }\r\n      }\r\n   } else if (ability.tag.activated == true) {\r\n      fill(215);\r\n      stroke(0);\r\n      strokeWeight(1);\r\n      rect(center.x, height * 9 / 10 + 30, 24, 38, 0, 0, 4, 4); // Letter background box\r\n      let letter;\r\n      if (ability.tag.i == 0) {\r\n         letter = Controls.ability1.key;\r\n      } else if (ability.tag.i == 1) {\r\n         letter = Controls.ability2.key;\r\n      } else if (ability.tag.i == 2) {\r\n         letter = Controls.ability3.key;\r\n      } else if (ability.tag.i == 3) {\r\n         if (Controls.ability4.key == ' ') {\r\n            letter = '_';\r\n         } else {\r\n            letter = Controls.ability4.key;\r\n         }\r\n      }\r\n      fill(0);\r\n      noStroke();\r\n      textSize(14);\r\n      textFont('Consolas');\r\n      textStyle(BOLD);\r\n      text(letter, center.x - textWidth(letter) / 2, height * 9 / 10 + 30 + 13); // Letter text\r\n      // Ability Circles\r\n      fill(0);\r\n      stroke(0);\r\n      strokeWeight(1);\r\n      ellipse(center.x, height * 9 / 10, 30); // Background ellipse\r\n      fill(215);\r\n      noStroke();\r\n      if (ability.tag.can == true) { // Idle\r\n         ellipse(center.x, height * 9 / 10, 29);\r\n      } else if (ability.tag.can == false && currentTime - ability.tag.start <= ability.tag.time) { // If during ability\r\n         arc(center.x, height * 9 / 10, 29, 29, -90, -90 - (currentTime - ability.tag.start) / ability.tag.time * 360); // Ability timeout timer\r\n      } else if (ability.tag.can == false && currentTime - ability.tag.start > ability.tag.time) { // If during cooldown\r\n         arc(center.x, height * 9 / 10, 29, 29, -90, -90 + (currentTime - ability.tag.end) / ability.tag.cooldown * 360); // Ability cooldown timer\r\n      }\r\n      itemize(items.tag, 1, { r: 0, g: 0, b: 0 }, center.x, height * 9 / 10);\r\n      // Shoot\r\n      fill(215);\r\n      stroke(0);\r\n      if (ability.shoot.value[ability.tag.i] == false && ability.shoot.can[ability.tag.i] == true) { // Idle\r\n         ellipse(center.x - 41, height * 9 / 10, 8);\r\n      } else if (ability.shoot.value[ability.tag.i] == true && ability.shoot.can[ability.tag.i] == false) { // If is shooting\r\n         arc(center.x - 41, height * 9 / 10, 8, 8, -90, -90 - (currentTime - ability.shoot.start[ability.tag.i]) / ability.shoot.time * 360); // Ability timeout timer\r\n      } else if (ability.shoot.secrete[ability.tag.i].value == true) { // If is secreting\r\n         arc(center.x - 41, height * 9 / 10, 8, 8, -90, -90 - ((ability.shoot.end[ability.tag.i] - ability.shoot.start[ability.tag.i]) / ability.shoot.time * 360) - ((currentTime - ability.shoot.secrete[ability.tag.i].start) / ability.secrete.time * (360 - (ability.shoot.end[ability.tag.i] - ability.shoot.start[ability.tag.i]) / ability.shoot.time * 360))); // Secretion timer\r\n      } else if (currentTime - ability.shoot.secrete[ability.tag.i].end < ability.shoot.cooldown[ability.tag.i]) {\r\n         arc(center.x - 41, height * 9 / 10, 8, 8, -90, -90 + ((currentTime - ability.shoot.secrete[ability.tag.i].end) / ability.shoot.cooldown[ability.tag.i] * 360)); // Shoot cooldown timer (if no hit)\r\n      }\r\n      if (ability.tag.value == true) { // Ability Activated Tooltip (only green for tag)\r\n         fill(66, 244, 176); // Green\r\n         noStroke();\r\n         ellipse(center.x - 9, height * 9 / 10 - 37, 5, 5);\r\n      }\r\n   }\r\n   translate(-org.off.x, -org.off.y);\r\n}\r\n\r\nvar getSrc = function() {\r\n   let src;\r\n   switch (state) {\r\n      case 'game':\r\n      case 'spectate':\r\n      case 'respawnMenu':\r\n      case 'pauseGameMenu':\r\n      case 'pauseSpectateMenu':\r\n         src = game;\r\n         break;\r\n      case 'title':\r\n      case 'browser':\r\n      case 'createMenu':\r\n      case 'joinMenu':\r\n      case 'spectateMenu':\r\n         src = title;\r\n         break;\r\n      case 'tutorial':\r\n      case 'pauseTutorialMenu':\r\n         src = tutorial;\r\n         break;\r\n   }\r\n   return src;\r\n};\r\n\r\nfunction move() {\r\n   let keys = '';\r\n   if (keyIsDown(Controls.left1.code) || keyIsDown(Controls.left2.code)) {\r\n      keys += 'l';\r\n   }\r\n   if (keyIsDown(Controls.up1.code) || keyIsDown(Controls.up2.code)) {\r\n      keys += 'u';\r\n   }\r\n   if (keyIsDown(Controls.right1.code) || keyIsDown(Controls.right2.code)) {\r\n      keys += 'r';\r\n   }\r\n   if (keyIsDown(Controls.down1.code) || keyIsDown(Controls.down2.code)) {\r\n      keys += 'd';\r\n   }\r\n   switch (keys) {\r\n      case 'l':\r\n         org.pos.x -= org.speed;\r\n         break;\r\n      case 'u':\r\n         org.pos.y -= org.speed;\r\n         break;\r\n      case 'r':\r\n         org.pos.x += org.speed;\r\n         break;\r\n      case 'd':\r\n         org.pos.y += org.speed;\r\n         break;\r\n      case 'lu':\r\n         org.pos.x -= org.speed * cos45;\r\n         org.pos.y -= org.speed * cos45;\r\n         break;\r\n      case 'lr':\r\n         // Net zero\r\n         break;\r\n      case 'ld':\r\n         org.pos.x -= org.speed * cos45;\r\n         org.pos.y += org.speed * cos45;\r\n         break;\r\n      case 'ur':\r\n         org.pos.x += org.speed * cos45;\r\n         org.pos.y -= org.speed * cos45;\r\n         break;\r\n      case 'ud':\r\n         // Net zero\r\n         break;\r\n      case 'rd':\r\n         org.pos.x += org.speed * cos45;\r\n         org.pos.y += org.speed * cos45;\r\n         break;\r\n      case 'lur':\r\n         org.pos.y -= org.speed; // Net up\r\n         break;\r\n      case 'lud':\r\n         org.pos.x -= org.speed; // Net left\r\n         break;\r\n      case 'lrd':\r\n         org.pos.y += org.speed; // Net down\r\n         break;\r\n      case 'urd':\r\n         org.pos.x += org.speed; // Net right\r\n         break;\r\n      case 'lurd':\r\n         // Net zero\r\n         break;\r\n   }\r\n   if (keys != '') {\r\n      org.off.x = org.pos.x - center.x;\r\n      org.off.y = org.pos.y - center.y;\r\n   }\r\n}\r\n\r\n/**\r\n * Enter game by starting game interval (runLoop()) (with org growth)\r\n * @return void\r\n */\r\nfunction enter() {\r\n   if (!org.intervals.length) { // org.intervals array must be of length 0\r\n      org.intervals.push(setInterval(() => runLoop(), _orgfrequency));\r\n   }\r\n}\r\n\r\nfunction runLoop() {\r\n   roundBehaviors();\r\n\r\n   org.grow();\r\n   // org.setClickbox();\r\n\r\n   // CTF\r\n   if (game.info.mode === 'ctf') {\r\n      game.flag.detectPickup();\r\n   }\r\n}\r\n\r\nfunction roundBehaviors() {\r\n   var currentTime = new Date();\r\n   if (game.rounds.util) {\r\n      if (game.info.host === socket.id) { // Only if player is host\r\n         if (game.rounds.waiting && !game.rounds.delayed && game.info.count >= game.rounds.min) { // If waiting, not delayed, and have minimum players\r\n            socket.emit('Round Delay', game);\r\n            game.rounds.delayed = true; // game will be overwritten, but this will stop host from emitting redundantly if org.interval is called again before game is updated\r\n         } else if (game.rounds.waiting && game.rounds.delayed && currentTime - game.rounds.delaystart >= game.rounds.rounddelay - 1000 && org.ready == false) { // Only host; If 1 second left in round-begin delay\r\n            socket.emit('Force Spawn', game.info);\r\n         }\r\n      }\r\n      if (game.info.mode === 'srv' && !game.rounds.waiting && !game.rounds.delayed && game.info.count <= 1 && game.players[0] === socket.id) { // Survival end-game: if during game and player is winner; count <= 1 (rather than === 1) in case multiple players die on last tick, setting count to 0\r\n         for (let i = 0; i < game.board.list.length; i++) {\r\n            if (game.board.list[i].player == socket.id) {\r\n               socket.emit('Round End', game.info);\r\n               game.board.list[i].wins++;\r\n               orderBoard(game.board.list);\r\n               socket.emit('Board', { list: game.board.list, host: game.board.host });\r\n            }\r\n         }\r\n      }\r\n   }\r\n}\r\n\r\nfunction die(spectating) {\r\n   socket.emit('Dead', spectating);\r\n   org.clearIntervals();\r\n   for (let i in ability) { // Reset Ability Cooldowns\r\n      if (typeof ability[i] === 'object' && i !== 'shoot') { // Avoid reference error\r\n         if (ability[i].activated != undefined && ability[i].activated == true) { // If is a usable ability\r\n            clearTimeout(ability[i].timeout);\r\n            ability[i].value = false;\r\n            ability[i].can = true;\r\n            ability[i].cooling = false;\r\n            ability[i].start = undefined;\r\n            ability[i].end = undefined;\r\n         }\r\n      }\r\n   }\r\n   for (let i = 0; i < 3; i++) { // Reset shoots\r\n      clearTimeout(ability.shoot.timeout[i]);\r\n      ability.shoot.value[i] = false;\r\n      ability.shoot.can[i] = true;\r\n      ability.shoot.spore[i] = undefined;\r\n      ability.shoot.secrete[i] = {};\r\n      ability.shoot.start[i] = undefined;\r\n      ability.shoot.end[i] = undefined;\r\n   }\r\n   socket.emit('Ability', ability);\r\n}","let socket; // Initialize in global scope\r\nlet gamesInterval; // \"\r\n// let emitGameInterval; // \"\r\nfunction connectSocket() {\r\n   socket = io.connect();\r\n\r\n   gamesInterval = setInterval(() => {\r\n      if (state !== 'game' && state !== 'spectate') {\r\n         socket.emit('Games Request');\r\n      }\r\n   }, 250);\r\n\r\n   // emitGameInterval = setInterval(() => {\r\n   //    if (state === 'game' || state === 'spectate') {\r\n   //       socket.emit('Game', { game: game });\r\n   //    }\r\n   // }, _renderfrequency);\r\n\r\n   socket.on('Games', (data) => { // data: { games: , connections: }\r\n      games = data.games;\r\n      connections = data.connections;\r\n      if (state === 'browser') renderBrowser();\r\n   });\r\n\r\n   socket.on('Enter', () => enter()); // Begin growth\r\n\r\n   socket.on('Force Spawn', () => {\r\n      die(false); // 'false' parameter tells server not to emit 'Spectate' back to client\r\n      for (let i = 0; i < game.spectators.length; i++) {\r\n         if (game.spectators[i] === socket.id) { // If player is spectator\r\n            socket.emit('Spectator Left', game.info); // Remove spectator from spectators array\r\n         }\r\n      }\r\n      if (state === 'pauseSpectateMenu') {\r\n         renderMenu('pauseGame', game); // Move to correct menu if on spectate menu\r\n      } else if (state === 'respawnMenu') {\r\n         renderMenu('pauseGame', game);\r\n         menus.pauseGame.submit();\r\n      }\r\n      spawn({ color: org.color, skin: org.skin, team: org.team }); // Respawn all players on round start\r\n      org.spawn = false;\r\n      org.ready = true; // org.ready ensures that org will only be forcibly respawned once\r\n   });\r\n\r\n   socket.on('Game', (gamE) => {\r\n      game = gamE;\r\n      if (ability.spore.value === true) {\r\n         ability.spore.interval();\r\n      }\r\n      for (let i = 0; i < 3; i++) {\r\n         if (ability.shoot.value[i] === true) {\r\n            ability.shoot.interval[i]();\r\n         }\r\n      }\r\n      switch (state) {\r\n         case 'game':\r\n         case 'pauseGameMenu':\r\n            {\r\n               translate(-org.off.x, -org.off.y);\r\n               renderWorld();\r\n               for (let i = 0; i < game.info.count; i++) {\r\n                  renderToxin(game.abilities[i]);\r\n               }\r\n               for (let i = 0; i < game.info.count; i++) {\r\n                  renderSecretions(game.abilities[i]);\r\n               }\r\n               for (let i = 0; i < game.info.count; i++) {\r\n                  renderNeutralize(game.abilities[i]);\r\n               }\r\n               renderOrgs();\r\n               for (let i = 0; i < game.info.count; i++) {\r\n                  renderSpores(game.abilities[i]);\r\n               }\r\n               renderUI();\r\n               renderLeaderboard();\r\n               translate(org.off.x, org.off.y);\r\n            }\r\n            renderMessages(); // Render messages outside translation\r\n            if (state === 'game') {\r\n               move(); // Move goes at the end so player does not render his movements before others\r\n            }\r\n            break;\r\n         case 'spectate':\r\n         case 'pauseSpectateMenu':\r\n         case 'respawnMenu':\r\n            {\r\n               translate(-org.off.x, -org.off.y);\r\n               renderWorld();\r\n               for (let i = 0; i < game.info.count; i++) {\r\n                  renderToxin(game.abilities[i]);\r\n               }\r\n               for (let i = 0; i < game.info.count; i++) {\r\n                  renderSecretions(game.abilities[i]);\r\n               }\r\n               for (let i = 0; i < game.info.count; i++) {\r\n                  renderNeutralize(game.abilities[i]);\r\n               }\r\n               renderOrgs(); // Orgs render over neutralize and toxin but under other abilities\r\n               for (let i = 0; i < game.info.count; i++) {\r\n                  renderSpores(game.abilities[i]);\r\n               }\r\n               renderLeaderboard();\r\n               translate(org.off.x, org.off.y);\r\n            }\r\n            renderMessages();\r\n            if (state === 'spectate') {\r\n               move(); // Move is after messages so everything has same offset\r\n            }\r\n            break;\r\n      }\r\n   });\r\n\r\n   socket.on('Game Ended', function(game) {\r\n      if (game.info.host !== socket.id) { // Don't alert host (he already knows)\r\n         alert('The game has ended');\r\n      }\r\n      renderTitle();\r\n   });\r\n\r\n   socket.on('Spectate', () => spectate({ color: org.color, pos: org.pos, skin: org.skin, team: org.team }));\r\n\r\n   { // Abilities\r\n      socket.on('Tag', () => {\r\n         ability.tag.value = true;\r\n         clearTimeout(ability.tag.timeout);\r\n         socket.emit('Ability', ability);\r\n         if (game.info.mode === '') {\r\n            ability.tag.timeout = setTimeout(() => {\r\n               ability.tag.value = false;\r\n               socket.emit('Ability', ability);\r\n            }, ability.tag.time);\r\n         }\r\n      });\r\n\r\n      socket.on('Extend', () => {\r\n         ability.extend.value = true;\r\n         clearTimeout(ability.extend.timeout);\r\n         ability.extend.start = new Date();\r\n         socket.emit('Ability', ability);\r\n         ability.extend.timeout = setTimeout(() => { // End ability\r\n            ability.extend.value = false;\r\n            ability.extend.end = new Date();\r\n            ability.extend.cooling = true;\r\n            socket.emit('Ability', ability);\r\n         }, ability.extend.time);\r\n      });\r\n\r\n      socket.on('Compress', () => {\r\n         ability.compress.value = true;\r\n         clearTimeout(ability.compress.timeout);\r\n         socket.emit('Ability', ability);\r\n         ability.compress.timeout = setTimeout(() => {\r\n            ability.compress.value = false;\r\n            socket.emit('Ability', ability);\r\n         }, ability.compress.time);\r\n      });\r\n\r\n      // socket.on('Speed', () => { // Not updated\r\n      //    ability.speed.value = true;\r\n      //    org.speed *= ability.speed.factor;\r\n      //    clearTimeout(ability.speed.timeout);\r\n      //    socket.emit('Ability', ability);\r\n      //    ability.speed.timeout = setTimeout(() => { // End ability\r\n      //       org.speed /= ability.speed.factor;\r\n      //       ability.speed.value = false;\r\n      //       socket.emit('Ability', ability);\r\n      //    }, ability.speed.time);\r\n      // });\r\n\r\n      // socket.on('Slow', () => { // Not updated\r\n      //    ability.slow.value = true;\r\n      //    org.speed /= ability.slow.factor; // Divide speed by factor\r\n      //    clearTimeout(ability.slow.timeout);\r\n      //    socket.emit('Ability', ability);\r\n      //    ability.slow.timeout = setTimeout(() => { // End ability\r\n      //       org.speed *= ability.slow.factor; // Multiply speed by factor to reset to original\r\n      //       ability.slow.value = false;\r\n      //       socket.emit('Ability', ability);\r\n      //    }, ability.slow.time);\r\n      // });\r\n\r\n      socket.on('Immortality', () => {\r\n         ability.immortality.value = true;\r\n         clearTimeout(ability.immortality.timeout);\r\n         ability.immortality.start = new Date();\r\n         socket.emit('Ability', ability);\r\n         ability.immortality.timeout = setTimeout(() => { // End ability\r\n            ability.immortality.value = false;\r\n            ability.immortality.end = new Date();\r\n            ability.immortality.cooling = true;\r\n         }, ability.immortality.time);\r\n      });\r\n\r\n      socket.on('Freeze', () => {\r\n         ability.freeze.value = true;\r\n         clearTimeout(ability.freeze.timeout);\r\n         socket.emit('Ability', ability);\r\n         ability.freeze.timeout = setTimeout(() => { // End ability\r\n            ability.freeze.value = false;\r\n            socket.emit('Ability', ability);\r\n         }, ability.freeze.time);\r\n      });\r\n\r\n      // socket.on('Stimulate', () => {\r\n      //    ability.stimulate.value = true;\r\n      //    clearTimeout(ability.stimulate.timeout);\r\n      //    ability.stimulate.start = new Date();\r\n      //    socket.emit('Ability', ability);\r\n      //    ability.stimulate.timeout = setTimeout(() => { // End ability\r\n      //       ability.stimulate.value = false;\r\n      //       ability.stimulate.end = new Date();\r\n      //       ability.stimulate.cooling = true;\r\n      //       socket.emit('Ability', ability);\r\n      //    }, ability.stimulate.time);\r\n      // });\r\n\r\n      // socket.on('Poison', () => {\r\n      //    ability.poison.value = true;\r\n      //    clearTimeout(ability.poison.timeout);\r\n      //    socket.emit('Ability', ability);\r\n      //    ability.poison.timeout = setTimeout(() => { // End ability\r\n      //       ability.poison.value = false;\r\n      //       socket.emit('Ability', ability);\r\n      //    }, ability.poison.time);\r\n      // });\r\n\r\n      socket.on('Neutralize', () => {\r\n         ability.neutralize.value = true;\r\n         ability.neutralize.start = new Date();\r\n         clearTimeout(ability.neutralize.timeout);\r\n         ability.neutralize.x = org.pos.x;\r\n         ability.neutralize.y = org.pos.y;\r\n         socket.emit('Ability', ability);\r\n         ability.neutralize.timeout = setTimeout(() => {\r\n            ability.neutralize.value = false;\r\n            ability.neutralize.end = new Date();\r\n            ability.neutralize.cooling = true;\r\n            socket.emit('Ability', ability);\r\n         }, ability.neutralize.time);\r\n      });\r\n\r\n      socket.on('Toxin', () => {\r\n         ability.toxin.value = true;\r\n         ability.toxin.start = new Date();\r\n         clearTimeout(ability.toxin.timeout);\r\n         ability.toxin.x = org.pos.x;\r\n         ability.toxin.y = org.pos.y;\r\n         socket.emit('Ability', ability);\r\n         ability.toxin.timeout = setTimeout(() => {\r\n            ability.toxin.value = false;\r\n            ability.toxin.end = new Date();\r\n            ability.toxin.cooling = true;\r\n            socket.emit('Ability', ability);\r\n         }, ability.toxin.time);\r\n      });\r\n   }\r\n}","var tutorial;\r\n\r\nfunction renderTutorial() {\r\n   clearInterval(title.interval);\r\n   ReactDOM.render(<CanvasCont />, eid('cont'));\r\n   state = 'tutorial';\r\n}\r\n\r\nvar Tutorial = function() {\r\n   this.src = 'tutorial';\r\n   this.task = 'move';\r\n   this.taskTimeout = undefined;\r\n   this.margin = _margin;\r\n   this.world = new World({ width: window.innerWidth - this.margin * 2, height: window.innerHeight - this.margin * 2, type: 'rectangle', color: 'black', x: this.margin, y: this.margin }); { // Org\r\n      let colors = [];\r\n      for (let j in orgColors.black) {\r\n         if (j != 'sun' && j != 'sky') { // No bright colors which would obscure the crosshair in tutorial to minimize confusion\r\n            colors.push(orgColors.black[j]);\r\n         }\r\n      }\r\n      let color = random(colors);\r\n      org = new Org({ player: socket.id, color: color, skin: 'none', spectate: false, pos: { x: center.x, y: center.y }, title: false });\r\n      org.cells[0] = new Cell(org.pos.x, org.pos.y, org); // Create first cell in org\r\n      org.count++;\r\n   }\r\n   this.orgs = [org];\r\n   this.abilities = [ability];\r\n   this.ointerval = setInterval(() => {\r\n      for (let i = 0; i < this.orgs.length; i++) {\r\n         this.orgs[i].grow();\r\n         if (org.count == 0) {\r\n            this.orgs[i].cells[0] = new Cell(org.pos.x, org.pos.y, org); // Create first cell in org\r\n            this.orgs[i].count++;\r\n         }\r\n      }\r\n   }, _orgfrequency); // 70ms\r\n   this.rinterval = setInterval(() => {\r\n      { // Render\r\n         // Background\r\n         background(this.world.backdrop.r, this.world.backdrop.g, this.world.backdrop.b);\r\n\r\n         // Shadows\r\n         { // World\r\n            fill(this.world.backdrop.r - 20, this.world.backdrop.g - 20, this.world.backdrop.b - 20);\r\n            noStroke();\r\n            rect(this.world.x + this.world.width / 2 + 7, this.world.y + this.world.height / 2 + 6, this.world.width, this.world.height);\r\n         } { // Messages\r\n            if (Messages == true) {\r\n               textFont('Helvetica');\r\n               textStyle(NORMAL);\r\n               let message = currentMessage();\r\n               if (message != undefined) {\r\n                  let breaks = freq(message, '\\n');\r\n                  let width = messageWidth(message);\r\n                  rect(5 + 25 + width / 2, 4 + 25 + 9 * breaks, 25 + width, 26 + 18 * breaks);\r\n               }\r\n            }\r\n\r\n         }\r\n\r\n         // World\r\n         fill(this.world.background.r, this.world.background.g, this.world.background.b);\r\n         stroke(this.world.border.color.r, this.world.border.color.g, this.world.border.color.b);\r\n         strokeWeight(1);\r\n         rect(this.world.x + this.world.width / 2, this.world.y + this.world.height / 2, this.world.width, this.world.height);\r\n\r\n         // Game\r\n         renderToxin(ability);\r\n         renderSecretions(ability);\r\n         renderNeutralize(ability);\r\n         renderOrgs();\r\n         renderSpores(ability);\r\n         if (this.task != 'move' && this.task != 'survive') {\r\n            translate(-org.off.x, -org.off.y);\r\n            renderUI();\r\n            translate(org.off.x, org.off.y);\r\n         }\r\n         noFill(); // Crosshair\r\n         stroke(this.world.border.color.r, this.world.border.color.g, this.world.border.color.b);\r\n         strokeWeight(1);\r\n         line(org.pos.x - 4, org.pos.y, org.pos.x + 4, org.pos.y);\r\n         line(org.pos.x, org.pos.y - 4, org.pos.x, org.pos.y + 4);\r\n         renderMessages(); // Render messages outside translation\r\n      } { // Calculate\r\n         if (this.stopped == false) {\r\n            if (ability.spore.value == true) {\r\n               ability.spore.interval();\r\n            }\r\n            for (let i = 0; i < 3; i++) {\r\n               if (ability.shoot.value[i] == true) {\r\n                  ability.shoot.interval[i]();\r\n               }\r\n            }\r\n            if (state == 'tutorial') {\r\n               move();\r\n            }\r\n         }\r\n         this.detect();\r\n      }\r\n   }, _renderfrequency); // 40ms\r\n   this.clear = function() {\r\n      clearInterval(this.ointerval);\r\n      clearInterval(this.rinterval);\r\n   };\r\n   this.stopped = false;\r\n   this.stopdate = undefined;\r\n   this.stop = function() {\r\n      this.stopped = true;\r\n      this.stopdate = new Date();\r\n      clearInterval(this.ointerval);\r\n   };\r\n   this.resize = function(x, y, w, h) {\r\n      center.x = window.innerWidth / 2;\r\n      center.y = window.innerHeight / 2;\r\n      let old_x = this.world.x - this.margin;\r\n      let old_y = this.world.y - this.margin;\r\n      for (let i = 0; i < this.orgs.length; i++) {\r\n         this.orgs[i].pos.x = (this.orgs[i].pos.x - this.margin - old_x) / this.world.width * (w - this.margin * 2) + (this.margin + x); // Reposition org correctly\r\n         this.orgs[i].pos.y = (this.orgs[i].pos.y - this.margin - old_y) / this.world.height * (h - this.margin * 2) + (this.margin + y); // Must be before new world creation so can find percentage of former world size\r\n         this.orgs[i].cells = [];\r\n         this.orgs[i].cells[0] = new Cell(this.orgs[i].pos.x, this.orgs[i].pos.y, this.orgs[i]);\r\n         this.orgs[i].count = 1;\r\n      }\r\n      this.world = new World({ width: w - this.margin * 2, height: h - this.margin * 2, type: 'rectangle', color: 'black', x: x + this.margin, y: y + this.margin });\r\n      if (state === 'tutorial') renderTutorial(); // Only render if state is 'tutorial'; otherwise, will render over pause menu\r\n   };\r\n   this.detect = function() {\r\n      switch (this.task) {\r\n         case 'move':\r\n            {\r\n               if (keyIsDown(Controls.left1.code) || keyIsDown(Controls.left2.code) || keyIsDown(Controls.up1.code) || keyIsDown(Controls.up2.code) || keyIsDown(Controls.right1.code) || keyIsDown(Controls.right2.code) || keyIsDown(Controls.down1.code) || keyIsDown(Controls.down2.code)) { // If a directional key is pressed\r\n                  this.task = 'fullscreen';\r\n                  if (this.taskTimeout == undefined) {\r\n                     this.taskTimeout = setTimeout(() => {\r\n                        this.taskTimeout = undefined;\r\n                        this.task = 'survive';\r\n                     }, 3500);\r\n                  }\r\n               }\r\n               break;\r\n            }\r\n         case 'survive':\r\n            {\r\n               if (this.taskTimeout == undefined) {\r\n                  this.taskTimeout = setTimeout(() => {\r\n                     this.taskTimeout = undefined;\r\n                     this.task = 'extend';\r\n                     ability.extend.activated = true;\r\n                     ability.extend.can = true;\r\n                     socket.emit('Ability', ability);\r\n                  }, 4500);\r\n               }\r\n               break;\r\n            }\r\n         case 'extend':\r\n            {\r\n               if (keyIsDown(Controls.ability1.code)) {\r\n                  if (this.taskTimeout == undefined) {\r\n                     this.taskTimeout = setTimeout(() => {\r\n                        this.taskTimeout = undefined;\r\n                        ability.extend.activated = false;\r\n                        ability.extend.can = false;\r\n                        this.task = 'immortality';\r\n                        ability.immortality.activated = true;\r\n                        ability.immortality.can = true;\r\n                        socket.emit('Ability', ability);\r\n                     }, ability.extend.time);\r\n                  }\r\n               }\r\n               break;\r\n            }\r\n         case 'immortality':\r\n            {\r\n               if (keyIsDown(Controls.ability2.code)) {\r\n                  if (this.taskTimeout == undefined) {\r\n                     this.taskTimeout = setTimeout(() => {\r\n                        this.taskTimeout = undefined;\r\n                        ability.immortality.activated = false;\r\n                        ability.immortality.can = false;\r\n                        this.task = 'neutralize';\r\n                        ability.neutralize.activated = true;\r\n                        ability.neutralize.can = true;\r\n                        socket.emit('Ability', ability);\r\n                     }, ability.immortality.time);\r\n                  }\r\n               }\r\n               break;\r\n            }\r\n         case 'neutralize':\r\n            {\r\n               if (keyIsDown(Controls.ability3.code)) {\r\n                  if (this.taskTimeout == undefined) {\r\n                     this.taskTimeout = setTimeout(() => {\r\n                        this.taskTimeout = undefined;\r\n                        ability.neutralize.activated = false;\r\n                        ability.neutralize.can = false;\r\n                        this.task = 'shoot';\r\n                        ability.compress.activated = true;\r\n                        ability.compress.can = true;\r\n                        ability.freeze.activated = true;\r\n                        ability.freeze.can = true;\r\n                        socket.emit('Ability', ability);\r\n                     }, ability.neutralize.time);\r\n                  }\r\n               }\r\n               break;\r\n            }\r\n         case 'shoot':\r\n            {\r\n               if (this.taskTimeout == undefined) {\r\n                  this.taskTimeout = setTimeout(() => {\r\n                     this.taskTimeout = undefined;\r\n                     ability.freeze.activated = false;\r\n                     ability.freeze.can = false;\r\n                     this.task = 'compress';\r\n                     ability.compress.activated = true; // Redundancy\r\n                     ability.compress.can = true; // Redundancy\r\n                  }, 10000);\r\n               }\r\n               break;\r\n            }\r\n         case 'compress':\r\n            {\r\n               if (this.orgs.length == 1) {\r\n                  let colors = [];\r\n                  for (let j in orgColors.black) {\r\n                     if (j != 'sun' && j != 'lime')\r\n                        colors.push(orgColors.black[j]);\r\n                  }\r\n                  let color = random(colors);\r\n                  let pos;\r\n                  do {\r\n                     pos = { x: random(this.world.width), y: random(this.world.height) };\r\n                  } while (sqrt(sq(pos.x - org.pos.x) + sq(pos.y - org.pos.y)) < _range + 30); // _range + 20 is maximum extend range\r\n                  this.orgs.push(new Org({ player: 'bot' + 1, color: color, skin: 'none', spectate: false, pos: pos, title: false }));\r\n                  this.orgs[1].cells[0] = new Cell(this.orgs[1].pos.x, this.orgs[1].pos.y, this.orgs[1]); // Create first cell in org\r\n                  this.orgs[1].count++;\r\n                  this.abilities[1] = new Ability({ player: 'bot' + 1 });\r\n               }\r\n               if (ability.compress.applied == true) {\r\n                  if (this.taskTimeout == undefined) {\r\n                     this.taskTimeout = setTimeout(() => {\r\n                        this.taskTimeout = undefined;\r\n                        ability.compress.activated = false;\r\n                        ability.compress.can = false;\r\n                        ability.freeze.activated = true;\r\n                        ability.freeze.can = true;\r\n                        this.task = 'freeze';\r\n                     }, ability.compress.time);\r\n                  }\r\n               }\r\n               break;\r\n            }\r\n         case 'freeze':\r\n            {\r\n               if (ability.freeze.applied == true) {\r\n                  if (this.taskTimeout == undefined) {\r\n                     this.taskTimeout = setTimeout(() => {\r\n                        this.taskTimeout = undefined;\r\n                        ability.freeze.activated = false;\r\n                        ability.freeze.can = false;\r\n                        ability.toxin.activated = true;\r\n                        ability.toxin.can = true;\r\n                        this.task = 'toxin';\r\n                     }, ability.freeze.time);\r\n                  }\r\n               }\r\n               break;\r\n            }\r\n         case 'toxin':\r\n            {\r\n               if (keyIsDown(Controls.ability3.code)) {\r\n                  if (this.taskTimeout == undefined) {\r\n                     this.taskTimeout = setTimeout(() => {\r\n                        this.taskTimeout = undefined;\r\n                        ability.toxin.activated = false;\r\n                        ability.toxin.can = false; // All ability can values are reset to true after task change by cooldown; not a problem at the moment; can = false is useless at the moment\r\n                        this.task = 'spore';\r\n                        ability.spore.activated = true;\r\n                        ability.spore.can = true;\r\n                        ability.secrete.activated = true; // .can = false\r\n                        socket.emit('Ability', ability);\r\n                     }, ability.toxin.time);\r\n                  }\r\n               }\r\n               break;\r\n            }\r\n         case 'spore':\r\n            {\r\n               let current = new Date();\r\n               if (ability.secrete.value == true) {\r\n                  if (this.stopped == true) {\r\n                     this.stopped = false;\r\n                     this.ointerval = setInterval(() => { // Restart\r\n                        for (let i = 0; i < this.orgs.length; i++) {\r\n                           this.orgs[i].grow();\r\n                           if (org.count == 0) {\r\n                              this.orgs[i].cells[0] = new Cell(org.pos.x, org.pos.y, org); // Create first cell in org\r\n                              this.orgs[i].count++;\r\n                           }\r\n                        }\r\n                     }, _orgfrequency); // 70ms\r\n                     ability.spore.end = new Date();\r\n                     ability.secrete.start = new Date();\r\n                  }\r\n                  if (this.taskTimeout == undefined) {\r\n                     this.taskTimeout = setTimeout(() => {\r\n                        this.taskTimeout = undefined;\r\n                        ability.spore.activated = false;\r\n                        ability.spore.can = false;\r\n                        ability.secrete.activated = false;\r\n                        ability.secrete.can = false;\r\n                        this.task = 'done';\r\n                     }, ability.secrete.time);\r\n                  }\r\n               } else if (ability.spore.value == true && current - ability.spore.start >= ability.spore.time / 2) {\r\n                  if (this.stopped == false) {\r\n                     clearInterval(ability.spore.interval);\r\n                     clearTimeout(ability.spore.timeout);\r\n                     this.stop();\r\n                  }\r\n               }\r\n               break;\r\n            }\r\n      }\r\n   };\r\n};","var Board = function(datA) {\r\n   let data = datA;\r\n   this.host = socket.id; // Cannot call game.info.host since game is not fully constructed yet; World() can only be called by host, so socket.id is ok\r\n   this.list = [\r\n         // {\r\n         //    player: undefined, // ID of player\r\n         //    name: undefined, // Screen name of player\r\n         //    kills: undefined, // Kills as defined by number of enemy cells killed\r\n         //    deaths: undefined, // Deaths as defined by number of org deaths\r\n         //    ratio: undefined, // Ratio of kills to deaths\r\n         //    score: undefined, // Flag captures (ctf), time score (kth)\r\n         //    wins: undefined // Round wins (srv, ctf, inf, kth)\r\n         // }\r\n      ],\r\n      this.count = undefined;\r\n   if (data.mode == 'skm' || data.mode == 'ctf') { // If is a team game\r\n      this.show = data.teamCount; // Maximum number of players shown in leaderboard (Top __)\r\n   } else {\r\n      this.show = data.show;\r\n   }\r\n   this.x = undefined; // width - (nameWidth + oneWidth + twoWidth) / 2 - marginRight\r\n   this.y = undefined; // marginTop\r\n   this.marginRight = 15;\r\n   this.marginTop = 13;\r\n   this.text = {\r\n      marginLeft: 5,\r\n      marginTop: 15,\r\n      size: 11,\r\n      font: 'Helvetica',\r\n      boldFont: 'Verdana',\r\n      color: { r: 0, g: 0, b: 0 }\r\n   };\r\n   this.nameWidth = 170;\r\n   this.oneWidth = 46;\r\n   this.twoWidth = 46;\r\n   this.threeWidth = 46;\r\n   this.rowHeight = 22;\r\n   this.tableWeight = 1;\r\n   this.headWeight = 1;\r\n   this.cellWeight = 1;\r\n   this.headColor = { r: 200, g: 200, b: 200 };\r\n   this.cellColor = { r: 245, g: 245, b: 245 };\r\n   this.stroke = { r: 0, g: 0, b: 0 };\r\n};\r\n\r\nfunction orderBoard(lisT) {\r\n   lisT.sort(function(a, b) { // Sorts in descending order of K:D ratio\r\n      let N;\r\n      if (game.info.mode == 'ffa' || game.info.mode == 'skm') {\r\n         N = b.kills - a.kills; // If a.kills is greater than b.kills, value will be negative, so will sort a before b\r\n         if (N == 0) {\r\n            N = a.deaths - b.deaths; // If b.deaths is greater than a.deaths, value will be positive, so will sort b before a\r\n         }\r\n      } else if (game.info.mode == 'srv') {\r\n         N = b.kills - a.kills;\r\n         if (N == 0) {\r\n            N = b.wins - a.wins;\r\n         }\r\n      } else if (game.info.mode == 'ctf' || game.info.mode == 'kth') {\r\n         N = b.score - a.score;\r\n         if (N == 0) {\r\n            N = b.wins - a.wins;\r\n         }\r\n      } else if (game.info.mode == 'inf') {\r\n         N = b.wins - a.wins;\r\n      }\r\n      return N;\r\n   });\r\n   return lisT;\r\n}\r\n\r\nfunction renderLeaderboard() {\r\n   translate(org.off.x, org.off.y); // Settings for entire board\r\n   rectMode(CORNER);\r\n   game.board.y = game.board.marginTop;\r\n   noFill();\r\n   stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\r\n   strokeWeight(game.board.tableWeight);\r\n   textSize(game.board.text.size);\r\n   textFont(game.board.text.font);\r\n   textStyle(BOLD);\r\n   if (game.info.mode == 'ffa') {\r\n      game.board.x = width - (game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.threeWidth) - game.board.marginRight;\r\n      fill(game.board.headColor.r, game.board.headColor.g, game.board.headColor.b); // Header\r\n      stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\r\n      strokeWeight(game.board.headWeight);\r\n      rect(game.board.x, game.board.y, game.board.nameWidth, game.board.rowHeight); // Names Header\r\n      rect(game.board.x + game.board.nameWidth, game.board.y, game.board.oneWidth, game.board.rowHeight); // Kills Header\r\n      rect(game.board.x + game.board.nameWidth + game.board.oneWidth, game.board.y, game.board.twoWidth, game.board.rowHeight); // Deaths Header\r\n      rect(game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.twoWidth, game.board.y, game.board.threeWidth, game.board.rowHeight); // Ratios Header\r\n      fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b); // Header Text\r\n      noStroke();\r\n      text('Player', game.board.x + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\r\n      text('Kills', game.board.x + game.board.nameWidth + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\r\n      text('Deaths', game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\r\n      text('K:D', game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\r\n      game.board.count = min(game.board.show, game.board.list.length);\r\n   } else if (game.info.mode == 'skm') {\r\n      game.board.x = width - (game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.threeWidth) - game.board.marginRight;\r\n      fill(game.board.headColor.r, game.board.headColor.g, game.board.headColor.b); // Header\r\n      stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\r\n      strokeWeight(game.board.headWeight);\r\n      rect(game.board.x, game.board.y, game.board.nameWidth, game.board.rowHeight); // Team Color Header\r\n      rect(game.board.x + game.board.nameWidth, game.board.y, game.board.oneWidth, game.board.rowHeight); // Team Kills Header\r\n      rect(game.board.x + game.board.nameWidth + game.board.oneWidth, game.board.y, game.board.twoWidth, game.board.rowHeight); // Team Deaths Header\r\n      rect(game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.twoWidth, game.board.y, game.board.threeWidth, game.board.rowHeight); // Team Ratio Header\r\n      fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b); // Header Text\r\n      noStroke();\r\n      text('Team', game.board.x + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\r\n      text('Kills', game.board.x + game.board.nameWidth + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\r\n      text('Deaths', game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\r\n      text('K:D', game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\r\n      game.board.count = game.teams.length;\r\n   } else if (game.info.mode == 'srv') {\r\n      game.board.x = width - (game.board.nameWidth + game.board.oneWidth + game.board.twoWidth) - game.board.marginRight;\r\n      fill(game.board.headColor.r, game.board.headColor.g, game.board.headColor.b); // Header\r\n      stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\r\n      strokeWeight(game.board.headWeight);\r\n      rect(game.board.x, game.board.y, game.board.nameWidth, game.board.rowHeight); // Names Header\r\n      rect(game.board.x + game.board.nameWidth, game.board.y, game.board.oneWidth, game.board.rowHeight); // Wins Header\r\n      rect(game.board.x + game.board.nameWidth + game.board.oneWidth, game.board.y, game.board.twoWidth, game.board.rowHeight); // Kills Header\r\n      fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b); // Header Text\r\n      noStroke();\r\n      text('Player', game.board.x + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\r\n      text('Wins', game.board.x + game.board.nameWidth + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\r\n      text('Kills', game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\r\n      game.board.count = min(game.board.show, game.board.list.length);\r\n   } else if (game.info.mode == 'ctf') {\r\n      game.board.x = width - (game.board.nameWidth + game.board.oneWidth + game.board.twoWidth) - game.board.marginRight;\r\n      fill(game.board.headColor.r, game.board.headColor.g, game.board.headColor.b); // Header\r\n      stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\r\n      strokeWeight(game.board.headWeight);\r\n      rect(game.board.x, game.board.y, game.board.nameWidth, game.board.rowHeight); // Team Color Header\r\n      rect(game.board.x + game.board.nameWidth, game.board.y, game.board.oneWidth, game.board.rowHeight); // Wins Header\r\n      rect(game.board.x + game.board.nameWidth + game.board.oneWidth, game.board.y, game.board.oneWidth, game.board.rowHeight); // Captures Header\r\n      fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b); // Header Text\r\n      noStroke();\r\n      text('Team', game.board.x + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\r\n      text('Wins', game.board.x + game.board.nameWidth + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\r\n      text('Score', game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\r\n      game.board.count = game.teams.length;\r\n   } else if (game.info.mode == 'inf') {\r\n      game.board.x = width - (game.board.nameWidth + game.board.oneWidth) - game.board.marginRight;\r\n      fill(game.board.headColor.r, game.board.headColor.g, game.board.headColor.b); // Header\r\n      stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\r\n      strokeWeight(game.board.headWeight);\r\n      rect(game.board.x, game.board.y, game.board.nameWidth, game.board.rowHeight); // Names Header\r\n      rect(game.board.x + game.board.nameWidth, game.board.y, game.board.oneWidth, game.board.rowHeight); // Wins Header\r\n      fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b); // Header Text\r\n      noStroke();\r\n      text('Player', game.board.x + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\r\n      text('Wins', game.board.x + game.board.nameWidth + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\r\n      game.board.count = min(game.board.show, game.board.list.length);\r\n   } else if (game.info.mode == 'kth') {\r\n      game.board.x = width - (game.board.nameWidth + game.board.oneWidth + game.board.twoWidth) - game.board.marginRight;\r\n      fill(game.board.headColor.r, game.board.headColor.g, game.board.headColor.b); // Header\r\n      stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\r\n      strokeWeight(game.board.headWeight);\r\n      rect(game.board.x, game.board.y, game.board.nameWidth, game.board.rowHeight); // Names Header\r\n      rect(game.board.x + game.board.nameWidth, game.board.y, game.board.oneWidth, game.board.rowHeight); // Wins Header\r\n      rect(game.board.x + game.board.nameWidth + game.board.oneWidth, game.board.y, game.board.oneWidth, game.board.rowHeight); // Score Header\r\n      fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b); // Header Text\r\n      noStroke();\r\n      text('Player', game.board.x + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\r\n      text('Wins', game.board.x + game.board.nameWidth + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\r\n      text('Score', game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\r\n      game.board.count = min(game.board.show, game.board.list.length);\r\n   }\r\n   var a = 0;\r\n   for (let i = 0; i < game.board.count; i++) { // Body\r\n      if (game.info.mode != 'skm' && game.info.mode != 'ctf') { // If not a team mode\r\n         var spectator = false;\r\n         for (let j = 0; j < game.spectators.length; j++) {\r\n            if (game.board.list[i].player == game.spectators[j]) {\r\n               spectator = true;\r\n               break;\r\n            }\r\n         }\r\n         if (spectator == true) {\r\n            if (i < game.board.count) {\r\n               if (game.board.count < game.info.count) {\r\n                  game.board.count++; // Extend leaderboard length to include the next player\r\n                  i++; // Do not render leaderboard status if player is a spectator\r\n               } else {\r\n                  continue;\r\n               }\r\n            }\r\n         }\r\n      }\r\n      // Cell Boxes\r\n      if (game.info.mode == 'ffa') {\r\n         fill(game.board.cellColor.r, game.board.cellColor.g, game.board.cellColor.b);\r\n         stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\r\n         strokeWeight(game.board.cellWeight);\r\n         rect(game.board.x, game.board.y + (a + 1) * game.board.rowHeight, game.board.nameWidth, game.board.rowHeight); // Names Body\r\n         fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b);\r\n         noStroke();\r\n         if (game.board.list[i].player == socket.id) {\r\n            textFont(game.board.text.boldFont);\r\n            textStyle(BOLD);\r\n         } else {\r\n            textFont(game.board.text.font);\r\n            textStyle(NORMAL);\r\n         }\r\n         text(game.board.list[i].name, game.board.x + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop); // Screen name renders under kills box\r\n         fill(game.board.cellColor.r, game.board.cellColor.g, game.board.cellColor.b); // Body\r\n         stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\r\n         strokeWeight(game.board.cellWeight);\r\n         rect(game.board.x + game.board.nameWidth, game.board.y + (a + 1) * game.board.rowHeight, game.board.oneWidth, game.board.rowHeight); // Kills Body\r\n         rect(game.board.x + game.board.nameWidth + game.board.oneWidth, game.board.y + (a + 1) * game.board.rowHeight, game.board.twoWidth, game.board.rowHeight); // Deaths Body\r\n         rect(game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.twoWidth, game.board.y + (a + 1) * game.board.rowHeight, game.board.threeWidth, game.board.rowHeight); // Ratios Body\r\n         // Text\r\n         fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b);\r\n         noStroke();\r\n         text(game.board.list[i].kills, game.board.x + game.board.nameWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop);\r\n         text(game.board.list[i].deaths, game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop);\r\n         game.board.list[i].ratio = game.board.list[i].kills / game.board.list[i].deaths;\r\n         if (game.board.list[i].ratio == Infinity) { // n / 0, n != 0 (Divide by Zero)\r\n            text('∞', game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop); // K:D Ratio (Rounded to two decimal places)\r\n         } else if (game.board.list[i].kills == 0 && game.board.list[i].deaths == 0) { // 0 / 0 (Indeterminate Form) (Ratio is NaN)\r\n            text('0', game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop); // K:D Ratio (Rounded to two decimal places)\r\n         } else { // n / m, m != 0 (Rational Number)\r\n            text(round(game.board.list[i].ratio * 100) / 100, game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop); // K:D Ratio (Rounded to two decimal places)\r\n         }\r\n      } else if (game.info.mode == 'skm') {\r\n         // fill(game.world.backdrop.r - 20, game.world.backdrop.g - 20, game.world.backdrop.b - 20);\r\n         // noStroke();\r\n         // rect(game.board.x + 4, game.board.y + 3 + (a + 1) * game.board.rowHeight, game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.threeWidth, game.board.rowHeight);\r\n         fill(game.board.cellColor.r, game.board.cellColor.g, game.board.cellColor.b);\r\n         stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\r\n         strokeWeight(game.board.cellWeight);\r\n         rect(game.board.x, game.board.y + (a + 1) * game.board.rowHeight, game.board.nameWidth, game.board.rowHeight); // Team Color Body\r\n         fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b);\r\n         noStroke();\r\n         if (game.teams[i].indexOf(org.player) != -1) { // If player is on given team\r\n            textFont(game.board.text.boldFont);\r\n            textStyle(BOLD);\r\n         } else {\r\n            textFont(game.board.text.font);\r\n            textStyle(NORMAL);\r\n         }\r\n         text(teamColors[i][0].toUpperCase() + teamColors[i].slice(1), game.board.x + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop); // Screen name is above so it renders under kills box\r\n         fill(game.board.cellColor.r, game.board.cellColor.g, game.board.cellColor.b); // Body\r\n         stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\r\n         strokeWeight(game.board.cellWeight);\r\n         rect(game.board.x + game.board.nameWidth, game.board.y + (a + 1) * game.board.rowHeight, game.board.oneWidth, game.board.rowHeight); // Team Kills Body\r\n         rect(game.board.x + game.board.nameWidth + game.board.oneWidth, game.board.y + (a + 1) * game.board.rowHeight, game.board.twoWidth, game.board.rowHeight); // Team Deaths Body\r\n         rect(game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.twoWidth, game.board.y + (a + 1) * game.board.rowHeight, game.board.threeWidth, game.board.rowHeight); // Team Ratios Body\r\n         // Text\r\n         fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b);\r\n         noStroke();\r\n         var teamKills = 0;\r\n         var teamDeaths = 0;\r\n         for (let j = 0; j < game.teams[i].length; j++) {\r\n            for (let k = 0; k < game.board.list.length; k++) {\r\n               if (game.teams[i][j] == game.board.list[k].player) {\r\n                  teamKills += game.board.list[k].kills;\r\n                  teamDeaths += game.board.list[k].deaths;\r\n                  break;\r\n               }\r\n            }\r\n         }\r\n         var teamRatio = teamKills / teamDeaths;\r\n         text(teamKills, game.board.x + game.board.nameWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop);\r\n         text(teamDeaths, game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop);\r\n         if (teamRatio == Infinity) { // n / 0, n != 0 (Divide by Zero)\r\n            text('∞', game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop); // K:D Ratio (Rounded to two decimal places)\r\n         } else if (teamKills == 0 && teamDeaths == 0) { // 0 / 0 (Indeterminate Form) (Ratio is NaN)\r\n            text('0', game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop); // K:D Ratio (Rounded to two decimal places)\r\n         } else { // n / m, m != 0 (Rational Number)\r\n            text(round(teamRatio * 100) / 100, game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop); // K:D Ratio (Rounded to two decimal places)\r\n         }\r\n      } else if (game.info.mode == 'srv') {\r\n         // fill(game.world.backdrop.r - 20, game.world.backdrop.g - 20, game.world.backdrop.b - 20);\r\n         // noStroke();\r\n         // rect(game.board.x + 4, game.board.y + 3 + (a + 1) * game.board.rowHeight, game.board.nameWidth + game.board.oneWidth + game.board.twoWidth, game.board.rowHeight);\r\n         fill(game.board.cellColor.r, game.board.cellColor.g, game.board.cellColor.b);\r\n         stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\r\n         strokeWeight(game.board.cellWeight);\r\n         rect(game.board.x, game.board.y + (a + 1) * game.board.rowHeight, game.board.nameWidth, game.board.rowHeight); // Names Body\r\n         fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b);\r\n         noStroke();\r\n         if (game.board.list[i].player == socket.id) {\r\n            textFont(game.board.text.boldFont);\r\n            textStyle(BOLD);\r\n         } else {\r\n            textFont(game.board.text.font);\r\n            textStyle(NORMAL);\r\n         }\r\n         text(game.board.list[i].name, game.board.x + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop); // Screen name renders under kills box\r\n         fill(game.board.cellColor.r, game.board.cellColor.g, game.board.cellColor.b); // Body\r\n         stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\r\n         strokeWeight(game.board.cellWeight);\r\n         rect(game.board.x + game.board.nameWidth, game.board.y + (a + 1) * game.board.rowHeight, game.board.oneWidth, game.board.rowHeight); // Kills Body\r\n         rect(game.board.x + game.board.nameWidth + game.board.oneWidth, game.board.y + (a + 1) * game.board.rowHeight, game.board.twoWidth, game.board.rowHeight); // Deaths Body\r\n         // Text\r\n         fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b);\r\n         noStroke();\r\n         text(game.board.list[i].wins, game.board.x + game.board.nameWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop);\r\n         text(game.board.list[i].kills, game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop);\r\n      } else if (game.info.mode == 'ctf') {\r\n         // fill(game.world.backdrop.r - 20, game.world.backdrop.g - 20, game.world.backdrop.b - 20);\r\n         // noStroke();\r\n         // rect(game.board.x + 4, game.board.y + 3 + (a + 1) * game.board.rowHeight, game.board.nameWidth + game.board.oneWidth, game.board.rowHeight);\r\n         fill(game.board.cellColor.r, game.board.cellColor.g, game.board.cellColor.b);\r\n         stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\r\n         strokeWeight(game.board.cellWeight);\r\n         rect(game.board.x, game.board.y + (a + 1) * game.board.rowHeight, game.board.nameWidth, game.board.rowHeight); // Team Color Body\r\n         fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b);\r\n         noStroke();\r\n         if (game.teams[i].indexOf(org.player) != -1) { // If player is on given team\r\n            textFont(game.board.text.boldFont);\r\n            textStyle(BOLD);\r\n         } else {\r\n            textFont(game.board.text.font);\r\n            textStyle(NORMAL);\r\n         }\r\n         text(teamColors[i][0].toUpperCase() + teamColors[i].slice(1), game.board.x + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop); // Screen name is above so it renders under kills box\r\n         fill(game.board.cellColor.r, game.board.cellColor.g, game.board.cellColor.b); // Body\r\n         stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\r\n         strokeWeight(game.board.cellWeight);\r\n         rect(game.board.x + game.board.nameWidth, game.board.y + (a + 1) * game.board.rowHeight, game.board.oneWidth, game.board.rowHeight); // Team Kills\r\n         rect(game.board.x + game.board.nameWidth + game.board.oneWidth, game.board.y + (a + 1) * game.board.rowHeight, game.board.twoWidth, game.board.rowHeight); // Round Wins\r\n         // Text\r\n         var wins = 0;\r\n         let done = false;\r\n         for (let j = 0; j < game.teams[i].length; j++) {\r\n            for (let k = 0; k < game.board.list.length; k++) {\r\n               if (game.teams[i][j] == game.board.list[k].player) { // Find player in board list\r\n                  wins = game.board.list[k].wins; // Team wins saved to each player; Copy wins from one player to represent the team\r\n                  done = true;\r\n                  break;\r\n               }\r\n            }\r\n            if (done == true) {\r\n               break;\r\n            }\r\n         }\r\n         var captures = 0;\r\n         for (let j = 0; j < game.teams[i].length; j++) {\r\n            for (let k = 0; k < game.board.list.length; k++) {\r\n               if (game.teams[i][j] == game.board.list[k].player) {\r\n                  captures += game.board.list[k].score;\r\n                  break;\r\n               }\r\n            }\r\n         }\r\n         fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b);\r\n         noStroke();\r\n         text(wins, game.board.x + game.board.nameWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop);\r\n         text(captures, game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop);\r\n      } else if (game.info.mode == 'inf') {\r\n         // fill(game.world.backdrop.r - 20, game.world.backdrop.g - 20, game.world.backdrop.b - 20);\r\n         // noStroke();\r\n         // rect(game.board.x + 4, game.board.y + 3 + (a + 1) * game.board.rowHeight, game.board.nameWidth + game.board.oneWidth, game.board.rowHeight);\r\n         fill(game.board.cellColor.r, game.board.cellColor.g, game.board.cellColor.b);\r\n         stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\r\n         strokeWeight(game.board.cellWeight);\r\n         rect(game.board.x, game.board.y + (a + 1) * game.board.rowHeight, game.board.nameWidth, game.board.rowHeight); // Names Body\r\n         fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b);\r\n         noStroke();\r\n         if (game.board.list[i].player == socket.id) {\r\n            textFont(game.board.text.boldFont);\r\n            textStyle(BOLD);\r\n         } else {\r\n            textFont(game.board.text.font);\r\n            textStyle(NORMAL);\r\n         }\r\n         text(game.board.list[i].name, game.board.x + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop); // Screen name renders under kills box\r\n         fill(game.board.cellColor.r, game.board.cellColor.g, game.board.cellColor.b); // Body\r\n         stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\r\n         strokeWeight(game.board.cellWeight);\r\n         rect(game.board.x + game.board.nameWidth, game.board.y + (a + 1) * game.board.rowHeight, game.board.oneWidth, game.board.rowHeight); // Kills Body\r\n         // Text\r\n         fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b);\r\n         noStroke();\r\n         text(game.board.list[i].wins, game.board.x + game.board.nameWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop);\r\n      } else if (game.info.mode == 'kth') {\r\n         // fill(game.world.backdrop.r - 20, game.world.backdrop.g - 20, game.world.backdrop.b - 20);\r\n         // noStroke();\r\n         // rect(game.board.x + 4, game.board.y + 3 + (a + 1) * game.board.rowHeight, game.board.nameWidth + game.board.oneWidth, game.board.rowHeight);\r\n         fill(game.board.cellColor.r, game.board.cellColor.g, game.board.cellColor.b);\r\n         stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\r\n         strokeWeight(game.board.cellWeight);\r\n         rect(game.board.x, game.board.y + (a + 1) * game.board.rowHeight, game.board.nameWidth, game.board.rowHeight); // Names Body\r\n         fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b);\r\n         noStroke();\r\n         if (game.board.list[i].player == socket.id) {\r\n            textFont(game.board.text.boldFont);\r\n            textStyle(BOLD);\r\n         } else {\r\n            textFont(game.board.text.font);\r\n            textStyle(NORMAL);\r\n         }\r\n         text(game.board.list[i].name, game.board.x + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop); // Screen name renders under kills box\r\n         fill(game.board.cellColor.r, game.board.cellColor.g, game.board.cellColor.b); // Body\r\n         stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\r\n         strokeWeight(game.board.cellWeight);\r\n         rect(game.board.x + game.board.nameWidth, game.board.y + (a + 1) * game.board.rowHeight, game.board.oneWidth, game.board.rowHeight); // Score\r\n         rect(game.board.x + game.board.nameWidth + game.board.oneWidth, game.board.y + (a + 1) * game.board.rowHeight, game.board.twoWidth, game.board.rowHeight); // Wins\r\n         // Text\r\n         fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b);\r\n         noStroke();\r\n         text(game.board.list[i].wins, game.board.x + game.board.nameWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop);\r\n         text(game.board.list[i].score, game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop);\r\n      }\r\n      a++;\r\n   }\r\n   rectMode(CENTER); // Reset Mode\r\n   translate(-org.off.x, -org.off.y);\r\n}","var connections;\r\n\r\nclass Browser extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         games: props.games\r\n      };\r\n   }\r\n\r\n   componentWillReceiveProps(next) {\r\n      if (next.games) this.setState({ games: next.games });\r\n   }\r\n   render() {\r\n      let gamerows = [];\r\n      for (let i = 0; i < this.state.games.length; i++) {\r\n         if (this.state.games[i].players.length == 0 && this.state.games[i].spectators.length == 0 && this.state.games[i].info.count == 0) { // If host has not yet joined the game\r\n            continue;\r\n         }\r\n         gamerows.push( <GameRow key={i} game={this.state.games[i]} row={i} forceUp={!mouseDown} /> );\r\n      }\r\n\r\n      return (\r\n         <div id='browsercont'>\r\n            <Shade />\r\n            <CanvasCont />\r\n            <div id='content'>\r\n               <table id='browser'>\r\n                  <thead>\r\n                     <tr id='head'>\r\n                        <th id='title' colSpan='1'>Title</th>\r\n                        <th id='mode' colSpan='1'>Mode</th>\r\n                        <th id='players' colSpan='1'>Players</th>\r\n                        <th id='spectators' colSpan='1'>Spectators</th>\r\n                        <th id='playercap' colSpan='1'>Player Cap</th>\r\n                        <th id='join-spectate' colSpan='2'>Bacter</th>\r\n                     </tr>\r\n                  </thead>\r\n                  <tbody id='browserBody'>\r\n                     {gamerows}\r\n                  </tbody>\r\n               </table>\r\n            </div>\r\n            <div className='backfooter'>\r\n               <footer onClick={ renderTitle }>\r\n                  <p id='back'>&larr; Back</p>\r\n                  <p id='displayconnections'>{ 'Online Clients: ' + (connections ? connections : 0) }</p>\r\n               </footer>\r\n            </div>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n\r\nclass GameRow extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.row = props.row;\r\n   }\r\n\r\n   render() {\r\n      let game = this.props.game;\r\n      return (\r\n         <tr>\r\n            <td className='title'>{game.info.title}</td>\r\n            <td className='mode'>{modes[game.info.mode]}</td>\r\n            <td className='players'>{game.players.length}</td>\r\n            <td className='spectators'>{game.spectators.length}</td>\r\n            <td className='playercap'>{game.info.cap}</td>\r\n            <TableButton forceUp={this.props.forceUp} row={this.row} inner='Join' />\r\n            <TableButton forceUp={this.props.forceUp} row={this.row} inner='Spectate' />\r\n         </tr>\r\n      );\r\n   }\r\n}\r\n\r\nclass TableButton extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         down: false,\r\n         backgroundColor: 'rgb(255, 255, 255)'\r\n      };\r\n      this.row = props.row;\r\n\r\n      this.handleMouseDown = this.handleMouseDown.bind(this); // Preserve this reference value in handler functions\r\n      this.handleMouseUp = this.handleMouseUp.bind(this);\r\n      this.handleMouseOver = this.handleMouseOver.bind(this);\r\n      this.handleMouseOut = this.handleMouseOut.bind(this);\r\n      this.handleClick = this.handleClick.bind(this);\r\n   }\r\n\r\n   handleMouseDown(e) {\r\n      this.setState({ down: true, backgroundColor: 'rgb(210, 210, 210)' });\r\n   }\r\n   handleMouseUp(e) {\r\n      this.setState({ down: false, backgroundColor: 'rgb(230, 230, 230)' });\r\n   }\r\n   handleMouseOver(e) {\r\n      this.setState({ backgroundColor: this.state.down ? 'rgb(210, 210, 210)' : 'rgb(230, 230, 230)' });\r\n   }\r\n   handleMouseOut(e) {\r\n      this.setState({ backgroundColor: 'rgb(255, 255, 255)' });\r\n   }\r\n   handleClick(e) {\r\n      switch (this.props.inner) {\r\n         case 'Join':\r\n            renderMenu('join', games[this.row]);\r\n            break;\r\n         case 'Spectate':\r\n            renderMenu('spectate', games[this.row]);\r\n            break;\r\n      }\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <td \r\n            className='TableButton' \r\n            onMouseDown={this.handleMouseDown} \r\n            onMouseUp={this.handleMouseUp} \r\n            onMouseOver={this.handleMouseOver} \r\n            onMouseOut={this.handleMouseOut} \r\n            onClick={this.handleClick} \r\n            style={{ backgroundColor: this.state.backgroundColor }}\r\n         >{this.props.inner}</td>\r\n      );\r\n   }\r\n}\r\n\r\nfunction renderBrowser() {\r\n   state = 'browser';\r\n   ReactDOM.render(<Browser games={games} />, eid('cont'));\r\n}","var cnv;\r\nvar center = {\r\n   x: undefined,\r\n   y: undefined\r\n};\r\n\r\nclass CanvasCont extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         width: props.width ? props.width : window.innerWidth, // Width defaults to window width but can be set by props.width\r\n         height: props.height ? props.height : window.innerHeight // Height defaults to window height but can be set by props.height\r\n      };\r\n      this.style = {\r\n         zIndex: '-2' // Canvas is furthest back (-2); Shade is -1; UI is 1\r\n      };\r\n      let body = document.body; // Set body style for canvas to fill screen\r\n      body.style.overflow = 'hidden';\r\n      body.style.margin = 'none';\r\n      body.style.padding = 'none';\r\n      body.style.border = 'none';\r\n      body.style.outline = 'none';\r\n   }\r\n\r\n   componentDidMount() { // Runs only after initial mount\r\n      cnv = createCanvas(this.state.width, this.state.height); // Create p5 canvas\r\n      cnv.parent('#canvascont'); // Set CanvasCont as p5 canvas parent\r\n   }\r\n   componentWillReceiveProps(next) {\r\n      let nextWidth = next.width ? next.width : window.innerWidth;\r\n      let nextHeight = next.height ? next.height : window.innerHeight\r\n      if (nextWidth !== this.state.width || nextHeight !== this.state.height) { // If new dimensions are inequal, create new canvas element\r\n         cnv = createCanvas(nextWidth, nextHeight); // Create p5 canvas\r\n         cnv.parent('#canvascont'); // Set CanvasCont as p5 canvas parent\r\n      }\r\n      this.setState({ // Resize when re-rendered\r\n         width: nextWidth, // Width defaults to window width but can be set by props.width\r\n         height: nextHeight // Height defaults to window height but can be set by props.height\r\n      });\r\n   }\r\n   render() {\r\n      let style = {};\r\n      for (let i in this.props.style) {\r\n         style[i] = this.props.style[i];\r\n      }\r\n      style.zIndex = this.style.zIndex;\r\n      return (\r\n         <div id='canvascont' className='canvas' style={style}></div> // Container for p5's (createCanvas(), parent())\r\n      );\r\n   }\r\n};","var Flag = function(X, Y, coloR) {\r\n   // Attributes\r\n   this.x = X;\r\n   this.y = Y;\r\n   this.color = coloR;\r\n   this.carried = false; // True: flag is being carried by a player; False: flag is dropped\r\n   this.carrier = undefined;\r\n   this.height = 20;\r\n   this.width = 9;\r\n\r\n   // Helper Functions\r\n   this.detectPickup = () => {\r\n      if (!this.carried) { // If flag is unposessed\r\n         if (org.pos.x - org.col > this.x - this.width / 2\r\n          && org.pos.x + org.col < this.x + this.width / 2\r\n          && org.pos.y - org.col > this.y - this.height / 2\r\n          && org.pos.y + org.col < this.y + this.height / 2) { // If org collides with flag\r\n            this.pickup(socket.id); // Org picks up flag\r\n         }\r\n      }\r\n   };\r\n   this.pickup = carrier => {\r\n      this.carried = true; // Org picks up flag\r\n      this.carrier = carrier;\r\n      socket.emit('Flag', { flag: this, host: game.info.host });\r\n   };\r\n};","function itemize(iteM, widtH, coloR, X, Y) {\r\n   let item = iteM; // Directional array\r\n   let count = item.length; // Number of squares\r\n   let width = widtH; // Width of one square\r\n   let color = coloR; // Object containing r, g, and b values\r\n   let x = X; // Starting x\r\n   let y = Y; // Starting y\r\n   fill(color.r, color.g, color.b);\r\n   noStroke();\r\n   rect(x, y, width, width);\r\n   for (let i = 0; i < count; i++) {\r\n      if (item[i] === 0) {\r\n         x -= width;\r\n      } else if (item[i] === 1) {\r\n         y -= width;\r\n      } else if (item[i] === 3) {\r\n         x += width;\r\n      } else if (item[i] === 2) {\r\n         y += width;\r\n      } else {\r\n         console.error(`Itemize(): Directional value out of bounds\\n\\t${item[i]} !== 0, 1, 2, or 3`);\r\n      }\r\n      rect(x, y, width, width);\r\n   }\r\n}\r\n\r\n/**\r\n * Contains list of directions to draw pixels like a pen\r\n * Encoding:\r\n *    0: Left\r\n *    1: Up\r\n *    2: Down\r\n *    3: Right\r\n * @type {Object}\r\n */\r\nvar items = {\r\n   tag: [1, 0, 2, 0, 0, 3, 3, 2, 3, 2, 2, 1, 1, 3, 1, 3, 3, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 0, 0, 3, 3, 3, 3, 3, 3, 2, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 3, 1, 3, 2, 3, 1, 3, 2, 3, 1, 3, 2, 3, 1, 3, 2, 3, 1, 3, 2, 3, 1, 3, 2, 2, 3, 2, 2, 2, 2, 2, 2, 0, 2, 0, 0, 0, 1, 3, 1, 1, 1, 1, 1, 1, 0, 3, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 0, 0, 2, 0, 1, 0, 2, 0, 1, 0, 2, 0, 1, 0, 2, 1, 0, 0, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 3, 1, 3, 3, 3, 2, 0, 2, 2, 2, 2, 2, 2, 3],\r\n   extend: [2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 0, 1, 1, 1, 1, 1, 3, 1, 0, 1, 3, 1, 0, 1, 3, 1, 0, 1, 3, 1, 0, 2, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 2, 0, 2, 2, 2, 2, 2, 2, 1, 0, 1, 1, 1, 1, 2, 0, 2, 2, 3, 3, 3, 3, 3, 3, 3, 1, 1, 1, 3, 2, 2, 2, 3, 1, 1, 1, 3, 2, 2, 2, 3, 1, 1, 1, 3, 2, 2, 2, 3, 1, 1, 1, 3, 2, 3, 1, 2, 2, 2, 2, 3, 1, 1, 1, 1, 3, 2, 2, 2, 2, 3, 1, 1, 1, 1, 3, 2, 2, 2, 2, 3, 1, 1, 1, 1, 3, 2, 2, 2, 2, 3, 2, 2, 2, 2, 3, 1, 1, 1, 1, 1, 0, 1, 3, 1, 0, 1, 3, 1, 0, 1, 3, 1, 0, 1, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 2, 2, 2, 2, 2, 2, 1, 3, 1, 1, 1, 1, 2, 3, 2, 2],\r\n   compress: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 2, 2, 2, 2, 3, 1, 1, 1, 1, 3, 2, 2, 2, 2, 3, 1, 1, 1, 1, 3, 2, 2, 2, 2, 3, 1, 1, 1, 1, 3, 2, 2, 2, 2, 3, 2, 2, 2, 2, 3, 1, 1, 1, 1, 1, 0, 1, 3, 1, 0, 1, 3, 1, 0, 1, 3, 1, 0, 1, 3, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 3, 1, 1, 1, 1, 1, 1, 1, 1, 2, 3, 2, 2, 2, 2, 2, 2, 1, 3, 1, 1, 1, 1, 2, 3, 2, 2, 3, 2, 1, 1, 1, 1, 3, 1, 2, 2, 2, 2, 2, 2, 3, 2, 1, 1, 1, 1, 1, 1, 1, 1, 3, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 3, 1, 1, 0, 1, 3, 1, 0, 1, 3, 1, 0, 1, 3, 1, 0, 1, 3, 1, 0, 1, 3, 1, 0, 3, 2, 2, 2, 2, 3, 2, 2, 2, 2, 3, 1, 1, 1, 1, 3, 2, 2, 2, 2, 3, 1, 1, 1, 1, 3, 2, 2, 2, 2, 3, 1, 1, 1, 1, 3, 2, 2, 2, 2, 3, 1, 1, 1, 1],\r\n   // speed: [], \r\n   // slow: [], \r\n   immortality: [2, 2, 0, 1, 2, 2, 0, 1, 2, 2, 0, 1, 2, 2, 0, 1, 0, 2, 2, 3, 0, 0, 2, 0, 0, 1, 3, 3, 1, 0, 0, 0, 2, 0, 1, 3, 1, 0, 0, 2, 1, 0, 1, 3, 0, 0, 1, 3, 0, 0, 1, 3, 1, 0, 1, 3, 1, 0, 3, 3, 1, 0, 3, 3, 1, 0, 3, 3, 3, 1, 0, 0, 3, 1, 3, 3, 1, 2, 2, 3, 1, 1, 3, 2, 2, 3, 1, 3, 2, 2, 0, 3, 3, 1, 2, 3, 2, 0, 3, 3, 2, 0, 3, 2, 3, 1, 3, 2, 1, 3, 1, 0, 3, 1, 3, 2, 1, 1, 3, 1, 3, 2, 2, 0, 3, 1, 3, 1, 1, 3, 2, 2, 3, 1, 1, 2, 3, 3, 2, 0, 2, 3, 3, 1, 2, 2, 3, 1, 2, 3, 2, 0, 3, 3, 2, 0, 2, 3, 2, 0, 2, 3, 0, 2, 0, 1, 2, 2, 0, 1, 2, 2, 0, 1, 2, 2, 0, 1, 1, 2, 0, 2, 2, 0, 1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 2, 2, 1, 0, 1, 1, 0, 2, 1, 1, 0, 2, 1, 1],\r\n   freeze: [3, 3, 0, 0, 0, 0, 0, 1, 0, 3, 3, 3, 3, 3, 0, 1, 0, 0, 0, 0, 0, 1, 0, 3, 3, 3, 3, 3, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 0, 1, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 1, 0, 0, 0, 3, 1, 3, 3, 3, 3, 3, 1, 0, 0, 0, 3, 3, 3, 1, 3, 2, 3, 1, 3, 2, 3, 1, 2, 2, 3, 1, 3, 2, 3, 1, 2, 2, 3, 1, 3, 2, 3, 2, 0, 3, 3, 2, 0, 2, 3, 3, 2, 0, 2, 3, 2, 3, 2, 0, 2, 3, 2, 0, 2, 3, 0, 2, 0, 2, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 3, 3, 3, 3, 0, 1, 0, 0, 0, 0, 0, 1, 0, 3, 3, 3, 3, 3, 0, 1, 0, 0, 0, 0, 0, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 3, 3, 3, 3, 3, 2, 0, 0, 0, 0, 0, 3, 3, 3, 3, 2, 0, 0, 0, 2, 3, 3, 0, 0, 0, 0, 0, 2, 3, 3, 3, 0, 0, 0, 2, 0, 1, 0, 2, 0, 1, 0, 2, 1, 1, 0, 2, 0, 1, 0, 2, 1, 1, 0, 2, 0, 1, 0, 1, 3, 0, 0, 1, 3, 1, 0, 0, 1, 3, 1, 0, 1, 3, 0, 0, 1, 3, 1, 0, 1, 3, 1, 0, 3, 1, 3, 1, 0, 1, 3],\r\n   // stimulate: [3, 3, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 3, 1, 1, 0, 1, 0, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 1, 0, 1, 0, 1, 0, 0, 0, 2, 0, 3, 3, 3, 2, 0, 0, 0, 0, 2, 3, 3, 3, 0, 0, 0, 0, 0, 1, 2, 0, 2, 0, 3, 3, 3, 3, 3, 3, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, 2, 3, 3, 3, 3, 3, 0, 2, 0, 2, 0, 1, 0, 0, 2, 0, 2, 0, 2, 2, 0, 1], \r\n   // poison: [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 0, 0, 0, 1, 0, 3, 3, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 3, 3, 3, 3, 2, 3, 3, 3, 3, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 1, 0, 0, 0, 0, 0], \r\n   neutralize: [3, 3, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 1, 1, 1, 1, 3, 1, 1, 0, 1, 0, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 1, 0, 1, 0, 1, 0, 0, 0, 2, 0, 3, 3, 3, 2, 0, 0, 0, 0, 2, 3, 3, 3, 0, 0, 0, 0, 0, 1, 2, 0, 2, 0, 3, 3, 3, 3, 3, 3, 0, 2, 0, 0, 0, 0, 0, 0, 2, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2, 0, 0, 0, 0, 0, 0, 0, 3, 2, 3, 3, 3, 3, 3, 0, 2, 0, 2, 0, 1, 0, 0, 2, 0, 2, 0, 2, 2, 0, 1],\r\n   toxin: [0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 0, 0, 0, 1, 0, 3, 3, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 3, 3, 3, 3, 3, 0, 2, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 3, 3, 3, 3, 2, 3, 3, 3, 3, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 1, 0, 0, 0, 0, 0], // Same as stimulate\r\n   spore: [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 3, 1, 3, 3, 3, 3, 2, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 3, 3, 0, 0, 2, 0, 0, 2, 3, 0, 0, 2, 3, 2, 0, 2, 0, 2, 3, 2, 0, 2, 3, 2, 0, 3, 2, 3, 2, 0, 2, 3, 3, 2, 0, 3, 3, 2, 0, 3, 3, 3, 2, 0, 0, 3, 3, 3, 2, 3, 1, 3, 2, 3, 1, 3, 2, 1, 3, 3, 3, 1, 0, 0, 3, 3, 3, 1, 0, 3, 3, 1, 0, 3, 3, 1, 0, 1, 3, 1, 3, 1, 0, 1, 3, 1, 0, 1, 3, 0, 1, 0, 1, 3, 1, 0, 0, 1, 3, 0, 0, 1, 3, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 2, 2, 2, 2, 0, 2, 0, 2, 2, 3, 3, 1, 3, 1, 3, 3, 3, 3, 2, 2, 2, 0, 0, 0, 0, 3, 3, 3, 3, 2, 2, 2, 0, 0, 0, 0, 1, 0, 1, 0, 0, 2, 2, 3, 2, 3, 2, 2, 2, 2, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 0, 0, 0, 1, 1, 1, 1, 3, 1, 3, 1, 1, 0, 0, 2, 0, 2, 0, 0, 0, 0, 1, 1, 1, 3, 3, 3, 3, 0, 0, 0, 0, 1, 1, 1, 3, 3, 3, 3, 2, 3, 2, 3, 3, 2, 2, 3, 3, 1, 1, 0],\r\n   secrete: [1, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 3, 1, 3, 3, 3, 3, 2, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 3, 3, 3, 0, 0, 2, 0, 0, 2, 3, 0, 0, 2, 3, 2, 0, 2, 0, 2, 3, 2, 0, 2, 3, 2, 0, 3, 2, 3, 2, 0, 2, 3, 3, 2, 0, 3, 3, 2, 0, 3, 3, 3, 2, 0, 0, 3, 3, 3, 2, 3, 1, 3, 2, 3, 1, 3, 2, 1, 3, 3, 3, 1, 0, 0, 3, 3, 3, 1, 0, 3, 3, 1, 0, 3, 3, 1, 0, 1, 3, 1, 3, 1, 0, 1, 3, 1, 0, 1, 3, 0, 1, 0, 1, 3, 1, 0, 0, 1, 3, 0, 0, 1, 3, 0, 0, 0, 1, 0, 0, 0, 2, 2, 2, 2, 1, 1, 1, 1, 3, 3, 3, 2, 2, 2, 2, 0, 2, 0, 2, 2, 3, 3, 1, 3, 1, 3, 3, 3, 3, 2, 2, 2, 0, 0, 0, 0, 3, 3, 3, 3, 2, 2, 2, 0, 0, 0, 0, 1, 0, 1, 0, 0, 2, 2, 3, 2, 3, 2, 2, 2, 2, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 0, 0, 0, 1, 1, 1, 1, 3, 1, 3, 1, 1, 0, 0, 2, 0, 2, 0, 0, 0, 0, 1, 1, 1, 3, 3, 3, 3, 0, 0, 0, 0, 1, 1, 1, 3, 3, 3, 3, 2, 3, 2, 3, 3, 2, 2, 3, 3, 1, 1, 0] // Same as spore (Should not differ)\r\n};","class Button extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         down: false, // Is mouse down?\r\n         backgroundColor: 'rgb(240, 240, 240)' // Initialize backgroundColor style in state so it can be edited and re-rendered with React\r\n      };\r\n      this.style = {};\r\n      this.menuType = props.menuType;\r\n      this.instance = props.instance;\r\n      // this.index = menus[this.menuType].options.indexOf(capitalize(this.instance)); // Not currently in use\r\n\r\n      this.handleClick = this.handleClick.bind(this); // Bind this. reference value to class functions\r\n      this.handleMouseOver = this.handleMouseOver.bind(this);\r\n      this.handleMouseOut = this.handleMouseOut.bind(this);\r\n      this.handleMouseUp = this.handleMouseUp.bind(this);\r\n      this.handleMouseDown = this.handleMouseDown.bind(this);\r\n   }\r\n\r\n   handleClick() {\r\n      switch (this.instance) {\r\n         case 'leave game':\r\n         case 'leave tutorial':\r\n            org.clearIntervals();\r\n            // ability = new Ability({ player: socket.id }); // Ability reset occurs already in renderTitle()\r\n            if (getSrc().src === 'game') { // No game object in pause tutorial menu\r\n               socket.emit('Leave Game', game);\r\n               for (let i = 0; i < game.board.list.length; i++) {\r\n                  if (game.board.list[i].player == socket.id) { // Find player in leaderboard\r\n                     game.board.list.splice(i, 1); // Remove player from leaderboard\r\n                     orderBoard(game.board.list); // Sort the list\r\n                     socket.emit('Board', { list: game.board.list, host: game.board.host }); // Send updated board to server\r\n                     break;\r\n                  }\r\n               }\r\n            }\r\n            if (getSrc().src === 'tutorial') {\r\n               tutorial.clear(); // Clear tutorial intervals\r\n            }\r\n            org = undefined; // Clear org variable\r\n            renderTitle();\r\n            title = new Title();\r\n            break;\r\n      }\r\n   }\r\n   handleMouseOver() {\r\n      let page = document.body.parentNode;\r\n      if (!mouseDown || !this.state.down) { // If the mouse was lifted not over the button, state should not be down, but won't be detected as such by the button, hence mouseDown defined elsewhere\r\n         this.setState({\r\n            down: false,\r\n            backgroundColor: 'rgb(220, 220, 220)'\r\n         });\r\n      } else {\r\n         if (this.state.down) {\r\n            this.setState({ backgroundColor: 'rgb(200, 200, 200)' });\r\n            mouseDown = true;\r\n         }\r\n      }\r\n   }\r\n   handleMouseOut() {\r\n      this.setState({ backgroundColor: 'rgb(240, 240, 240)' });\r\n   }\r\n   handleMouseUp() {\r\n      this.style.backgroundColor = 'rgb(220, 220, 220)';\r\n      this.setState({ down: false });\r\n   }\r\n   handleMouseDown() {\r\n      this.setState({ backgroundColor: 'rgb(200, 200, 200)' });\r\n      this.setState({ down: true });\r\n   }\r\n\r\n   componentWillMount() {\r\n      let page = document.body.parentNode;\r\n      if (!mouseDown) this.setState({ down: false });\r\n   }\r\n   render() {\r\n      let style = {};\r\n      for (let i in this.style) {\r\n         style[i] = this.style[i];\r\n      }\r\n      style.backgroundColor = this.state.backgroundColor;\r\n\r\n      return (\r\n         <button\r\n            id={this.instance + ' input'} \r\n            className='menubutton' \r\n            type='button' \r\n            style={style} \r\n            onMouseOver={this.handleMouseOver} \r\n            onMouseOut={this.handleMouseOut} \r\n            onMouseDown={this.handleMouseDown} \r\n            onMouseUp={this.handleMouseUp} \r\n            onClick={this.handleClick}\r\n         ></button>\r\n      );\r\n   }\r\n}\r\n","class List extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         value: props.value, // Currently selected list item\r\n         options: [],\r\n         focused: false, // focused by cursor\r\n         backgroundColor: 'rgb(255, 255, 255)'\r\n      };\r\n      this.style = {};\r\n      this.menuType = props.menuType;\r\n      this.instance = props.instance;\r\n      // this.index = menus[this.menuType].options.indexOf(capitalize(this.instance)); // Gets index of input within menu - Not currently in use\r\n\r\n      this.applyInstance = this.applyInstance.bind(this);\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleFocus = this.handleFocus.bind(this);\r\n      this.handleKeyDown = this.handleKeyDown.bind(this);\r\n   }\r\n\r\n   applyInstance() {\r\n      let info = []; // Info array holds config data for option elements to be created later\r\n      let unset = true; // If value is unset initially, will set value to first in list\r\n      switch (this.instance) {\r\n         case 'world type':\r\n            info = [\r\n               { value: 'rectangle', inner: 'Square' },\r\n               { value: 'ellipse',   inner: 'Circle' }\r\n            ];\r\n            break;\r\n         case 'game mode':\r\n            for (let i in modes) {\r\n               let mode = modes[i];\r\n               let disabled = false;\r\n               if (i === 'ctf' || i === 'inf' || i === 'kth') disabled = true; // CTF, INF, and KTH modes are currently not available\r\n               info.push({ value: i, inner: modes[i], disabled: disabled });\r\n            }\r\n            break;\r\n         case 'color':\r\n            for (let i in orgColors[game.world.color]) { // Renders all colors as a ffa game; If it is a team mode, rendering should be blocked in Menu.render()\r\n               let color = i; // Key: Color name: String\r\n               let rgb = orgColors[game.world.color][i]; // Value: RGB: Object\r\n               info.push({ value: color, inner: color[0].toUpperCase() + color.slice(1), \r\n                  style: { backgroundColor: 'rgb(' + rgb.r + ',' + rgb.g + ',' + rgb.b + ')' }\r\n               });\r\n            }\r\n            if (this.menuType === 'respawn' || this.menuType === 'pauseGame') {\r\n               for (let i = 0; i < info.length; i++) {\r\n                  let color;\r\n                  for (let j in orgColors[game.world.color]) {\r\n                     if (orgColors[game.world.color][j] === org.color) {\r\n                        color = j;\r\n                        break;\r\n                     }\r\n                  }\r\n                  if (color === info[i].value) {\r\n                     this.setState({ value: info[i].value });\r\n                     unset = false;\r\n                     break;\r\n                  }\r\n               }\r\n            }\r\n            break;\r\n         case 'team':\r\n            if (getSrc().src === 'title') { // If in title, set game value to game in games array\r\n               for (let i = 0; i < games.length; i++) { // Update game on-load (Normally occurs in socket.js @ socket.on('Game')); Used for team option updates\r\n                  if (games[i].info.host === game.info.host) { // Identify game\r\n                     game = games[i]; // Set game to updated game from server array\r\n                     break;\r\n                  }\r\n               }\r\n            }\r\n            for (let i = 0; i < game.teams.length; i++) { // If is not a team mode, rendering should be blocked in Menu.render()\r\n               info.push({ value: teamColors[i], inner: teamColors[i][0].toUpperCase() + teamColors[i].slice(1) + ': ' + game.teams[i].length });\r\n            }\r\n            if (this.menuType === 'join') { // Team auto-selection in join menu\r\n               let lengths = game.teams.map((team) => team.length); // Array which records the number of players on each team\r\n               let min = { [0]: lengths[0] }; // min is an object whose only key is the index of the smallest team and whose value is the size of that team (start with first team by default)\r\n               for (let i = 0; i < info.length; i++) { // Must keep track of index of minimum team within teams array, so index is key within min\r\n                  if (min[i] > lengths[i+1]) {\r\n                     delete min[i]; // Remove previous team key-value pair (it is not minimum size)\r\n                     min[i+1] = lengths[i+1];\r\n                  }\r\n               }\r\n               for (let i in min) { // For-in loop only used so key in min object can be accessed\r\n                  this.setState({ value: info[parseInt(i)].value }); // i is of type string, so parseInt must be used to make type number\r\n                  unset = false;\r\n               }\r\n            } else if (this.menuType === 'respawn' || this.menuType === 'pauseGame') { // Team auto-selection in respawn menu\r\n               for (let i = 0; i < info.length; i++) {\r\n                  if (org.team === teamColors[i]) {\r\n                     this.setState({ value: info[i].value });\r\n                     unset = false;\r\n                     break;\r\n                  }\r\n               }\r\n            }\r\n            break;\r\n      }\r\n      if (unset) this.setState({ value: info[0].value }); // If no value has been set, set first option to select element's value\r\n      let ops = info.map((inf) => <option key={inf.value} value={inf.value} disabled={inf.disabled} style={inf.style}>{inf.inner}</option>); // Create option elements from info\r\n      this.setState({ options: ops });\r\n   }\r\n\r\n   handleChange(e) {\r\n      this.props.update(this.instance, e.target.value); // Update local value and menu based on current instance and value\r\n   }\r\n   handleFocus(e) {\r\n      if (e.type === 'focus') { // e.type: the type of event (focus or blur); typeof e.type is DOMString:\r\n         this.setState({ focused: true,  backgroundColor: 'rgb(230, 230, 230)' });\r\n      } else if (e.type === 'blur') {\r\n         this.setState({ focused: false, backgroundColor: 'rgb(255, 255, 255)' });\r\n      }\r\n   }\r\n   handleKeyDown(e) {\r\n      if (e.keyCode === 13) // If ENTER key is down\r\n         this.props.submit(this.menuType);\r\n   }\r\n\r\n   componentWillMount() { // Does not run when component is merely changed, only on initial mount\r\n      this.applyInstance();\r\n   }\r\n   componentDidMount() {\r\n      this.props.update(this.instance, this.state.value); // Update internal values of this and other inputs\r\n   }\r\n   componentWillReceiveProps(next) {\r\n      this.setState({ value: next.value });\r\n   }\r\n   render() {\r\n      let style = {};\r\n      for (let i in this.style) {\r\n         style[i] = this.style[i];\r\n      }\r\n      style.backgroundColor = this.state.backgroundColor;\r\n\r\n      return (\r\n         <select\r\n            id={this.instance + ' input'} \r\n            className='menuinput' \r\n            value={this.state.value} \r\n            style={style} \r\n            onChange={this.handleChange} \r\n            onFocus={this.handleFocus} \r\n            onBlur={this.handleFocus} \r\n            onKeyDown={this.handleKeyDown}\r\n            >{this.state.options}\r\n         </select>\r\n      );\r\n   }\r\n}\r\n","class Menu extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         instances: [], // Array of instances which should be displayed\r\n         values: Array(menus[props.type].options.length).fill(''), // Array of input values; includes all possible inputs, not just those rendered\r\n         issues: Array(menus[props.type].options.length + 1).fill([]) // +1 because issues includes issues which do not apply to any one instance\r\n      }; // Component state - not game state\r\n      this.type = props.type;\r\n      this.data = props.data;\r\n\r\n      this.instantiate = this.instantiate.bind(this);\r\n      this.update = this.update.bind(this);\r\n      this.issue = this.issue.bind(this);\r\n      if (this.type === 'join' || this.type === 'spectate' || this.type === 'respawn') {\r\n         game = props.data;\r\n      } // join, spectate, and respawn are the only menu types which use the data property\r\n      this.instantiate(); // Set initial instances\r\n   }\r\n\r\n   instantiate() { // Set initial instances of menus; called only inside constructor (do not use setState(), change state literally)\r\n      let insts = menus[this.type].options.map(op => op.toLowerCase()); // Set instances to all possible options to start\r\n      switch (this.type) {\r\n         case 'create':\r\n            insts.splice(insts.indexOf('player minimum'), 1); // Remove player min (ffa is selected by default)\r\n            insts.splice(insts.indexOf('team count'), 1); // Remove team count (ffa is selected by default)\r\n            break;\r\n         case 'join':\r\n            if (!this.data.info.protected || this.data.info.host === socket.id) // If the game is not password-protected; If player is host (If player just created the game and is now joining his own game)\r\n               insts.splice(insts.indexOf('password'), 1); // Remove the password input (there is no password necessary) (may be confusing if not removed)\r\n            switch (this.data.info.mode) { // Data is game object; instances of join menu are determined by game mode\r\n               case 'ffa':\r\n                  insts.splice(insts.indexOf('team'), 1); // Remove team selection (not team mode)\r\n                  insts.splice(insts.indexOf('auto assign'), 1); // Remove auto assign to team (not team mode)\r\n                  break;\r\n               case 'skm':\r\n                  insts.splice(insts.indexOf('color'), 1); // Remove color selection (color set by team selection)\r\n                  break;\r\n               case 'srv':\r\n                  insts.splice(insts.indexOf('team'), 1); // Remove team selection (not team mode)\r\n                  insts.splice(insts.indexOf('auto assign'), 1); // Remove auto assign to team (not team mode)\r\n                  break;\r\n               case 'ctf':\r\n                  insts.splice(insts.indexOf('color'), 1); // Remove color selection (color set by team selection)\r\n                  break;\r\n               case 'inf':\r\n                  insts.splice(insts.indexOf('color'), 1); // Remove color selection (color set by assigned infected status)\r\n                  insts.splice(insts.indexOf('team'), 1); // Remove team selection (not team mode)\r\n                  insts.splice(insts.indexOf('auto assign'), 1); // Remove auto assign to team (not team mode)\r\n                  break;\r\n               case 'kth':\r\n                  insts.splice(insts.indexOf('team'), 1); // Remove team selection (not team mode)\r\n                  insts.splice(insts.indexOf('auto assign'), 1); // Remove auto assign to team (not team mode)\r\n                  break;\r\n            }\r\n            break;\r\n         case 'spectate':\r\n            if (!this.data.info.protected || this.data.info.host === socket.id) // If the game is not password-protected; If player is host (If player just created the game and is now joining his own game)\r\n               insts.splice(insts.indexOf('password'), 1); // Remove the password input (there is no password necessary) (may be confusing if not removed)\r\n            break;\r\n         case 'respawn':\r\n            switch (this.data.info.mode) { // Data is game object; instances of join menu are determined by game mode\r\n               case 'ffa':\r\n                  insts.splice(insts.indexOf('team'), 1); // Remove team selection (not team mode)\r\n                  insts.splice(insts.indexOf('auto assign'), 1); // Remove auto assign to team (not team mode)\r\n                  break;\r\n               case 'skm':\r\n                  insts.splice(insts.indexOf('color'), 1); // Remove color selection (color set by team selection)\r\n                  break;\r\n               case 'srv':\r\n                  insts.splice(insts.indexOf('team'), 1); // Remove team selection (not team mode)\r\n                  insts.splice(insts.indexOf('auto assign'), 1); // Remove auto assign to team (not team mode)\r\n                  break;\r\n               case 'ctf':\r\n                  insts.splice(insts.indexOf('color'), 1); // Remove color selection (color set by team selection)\r\n                  break;\r\n               case 'inf':\r\n                  insts.splice(insts.indexOf('color'), 1); // Remove color selection (color set by assigned infected status)\r\n                  insts.splice(insts.indexOf('team'), 1); // Remove team selection (not team mode)\r\n                  insts.splice(insts.indexOf('auto assign'), 1); // Remove auto assign to team (not team mode)\r\n                  break;\r\n               case 'kth':\r\n                  insts.splice(insts.indexOf('team'), 1); // Remove team selection (not team mode)\r\n                  insts.splice(insts.indexOf('auto assign'), 1); // Remove auto assign to team (not team mode)\r\n                  break;\r\n            }\r\n            break;\r\n         case 'pauseGame':\r\n            switch (this.data.info.mode) { // Data is game object; instances of join menu are determined by game mode\r\n               case 'skm': // If players are sorted into teams/groups\r\n               case 'ctf':\r\n               case 'inf':\r\n                  insts.splice(insts.indexOf('color'), 1); // Remove color selection (color set automatically)\r\n                  break;\r\n            }\r\n            break;\r\n         // case 'pauseSpectate': break; // All possible optons are always used in pause spectate menu\r\n         // case 'pauseTutorial': break; // All possible optons are always used in pause tutorial menu\r\n      }\r\n      this.state.instances = insts; // Only set state value literally in constructor, else use setState()\r\n   }\r\n   update(instance, valuE) { // The purpose of update is to update the state of the menu depending on input values\r\n      let value = valuE;\r\n      let insts = menus[this.type].options.map(op => op.toLowerCase()); // Set local instances to lowercase options\r\n      let vals = this.state.values;\r\n      let index = menus[this.type].options.indexOf(capitalize(instance));\r\n      let elt = eid(instance + ' input'); // DOM node of instance input\r\n      let wInput = eid('world width input'); // Width input DOM node\r\n      let hInput = eid('world height input'); // Height input DOM node\r\n      let pmInput = eid('player minimum input'); // Player minimum input DOM node\r\n      let tcInput = eid('team count input'); // Team count input DOM node\r\n      let teamInput = eid('team input'); // Team selections input DOM node\r\n      let wI = menus[this.type].options.indexOf('World Width'); // Width input index (options and state values)\r\n      let hI = menus[this.type].options.indexOf('World Height'); // Height input index (options and state values)\r\n      let pmI = menus[this.type].options.indexOf('Player Minimum'); // Player minimum input index (options and state values)\r\n      let tcI = menus[this.type].options.indexOf('Team Count'); // Team count input index (options and state values)\r\n      if (menus[this.type].values[index] === 'number') { // Special editorial actions for number inputs only\r\n         value = parseFloat(value) ? parseFloat(value) : 0;\r\n         if (value % 1 !== 0) { // If value is not an integer, set it to the greatest integer\r\n            value = floor(value);\r\n         }\r\n      }\r\n      vals[index] = value; // Update input value\r\n      switch (instance) {\r\n         case 'world width':\r\n            vals[hI] = value; // Set world height value to given world width value (hI is hInput index in options array)\r\n            break;\r\n         case 'world height':\r\n            vals[wI] = value; // Set world width value to given world height value (wI is wInput index in options array)\r\n            break;\r\n         case 'player minimum':\r\n            if (tcInput && parseFloat(vals[tcI]) > value) // If team count is greater than player minimum\r\n               vals[tcI] = value; // Reduce team count to player minimum value (tcI is tcInput index in options array)\r\n            break;\r\n         case 'team count':\r\n            if (pmInput && parseFloat(vals[pmI]) > value) // If player minimum is greater than team count\r\n               vals[pmI] = value; // Reduce player minimum to team count (pmI is pmInput index in options array)\r\n            break;\r\n         case 'game mode': // Updates based upon game mode input changes\r\n            // Set displayed instances and special attributes\r\n            if (wInput) wInput.min = 300; // Set default width minimum value\r\n            if (hInput) hInput.min = 300; // Set default height minimum value\r\n            switch (value) {\r\n               case 'ffa':\r\n                  insts.splice(insts.indexOf('player minimum'), 1); // Remove player min\r\n                  insts.splice(insts.indexOf('team count'), 1); // Remove team count\r\n                  break;\r\n               case 'skm':\r\n                  insts.splice(insts.indexOf('player minimum'), 1); // Remove player min\r\n                  insts.splice(insts.indexOf('leaderboard length'), 1); // Remove leaderboard length\r\n                  break;\r\n               case 'srv':\r\n                  insts.splice(insts.indexOf('team count'), 1); // Remove team count\r\n                  break;\r\n               case 'ctf':\r\n                  insts.splice(insts.indexOf('leaderboard length'), 1); // Remove leaderboard length\r\n                  if (wInput) wInput.min = 700; // Dimensional minimums increase in ctf mode\r\n                  if (hInput) hInput.min = 700;\r\n                  break;\r\n               case 'inf':\r\n                  insts.splice(insts.indexOf('team count'), 1); // Remove team count\r\n                  break;\r\n               case 'kth':\r\n                  insts.splice(insts.indexOf('team count'), 1); // Remove team count\r\n                  break;\r\n            }\r\n            this.setState({ instances: insts });\r\n            break;\r\n         case 'auto assign':\r\n            if (value) teamInput.disabled = true; // If auto assign is selected, disable team selection input\r\n            else teamInput.disabled = false;\r\n            break;\r\n      }\r\n      for (let i = 0; i < vals.length; i++) {\r\n         if (vals[i] === 0) // If number (only number because of type comparison in ===) input value is 0 or empty (if empty would have already converted to 0)\r\n            vals[i] = ''; // Replace with an empty string so placeholder is rendered instead of 0\r\n      }\r\n      this.setState({ values: vals }); // Update values in state\r\n   }\r\n   issue(issues) { // issues: Array[ { instance: 'message' } ]\r\n      let count = issues.length;\r\n      let stateIssues = []; // Issues array to be stored in state: Array1[ Array2[ 'message0', ..., 'messageN' ] ] (index of Array1 refers to instance as in options array) (different format than incoming issues)\r\n      for (let i = 0; i < menus[this.type].options.length; i++) {\r\n         let instance = menus[this.type].options[i].toLowerCase(); // Save instance value from options into instance variable\r\n         stateIssues.push([]); // There exists an issues array for each possible option\r\n         for (let j = 0; j < count; j++) {\r\n            if (getKeys(issues[j])[0] === instance) { // If instance of issue is instance from options array\r\n               stateIssues[i].push(issues[j][instance]); // Add issue to messages array within instance index of state issues array\r\n               issues.splice(j, 1); // Remove issue from inputted issues array so it is not unnecessarily looped through\r\n               count--; // count must be reduced since length of issues is reduced\r\n               j--; // j must be reduced since the entire array is shifted back after splicing, so j need not be incremented (always do this after splicing iterated array)\r\n            }\r\n         }\r\n      }\r\n      stateIssues.push([]); // Add an option non-specific array to the end of state issues to be rendered at the end of the menu; Buffer of empty array is necessary\r\n      if (issues.length) { // If there are any remaining issues (issues with instance '' which do not apply to any single input)\r\n         for (let i = 0; i < count; i++) { // count is the number of remaining issues\r\n            let key = getKeys(issues[i])[0];\r\n            stateIssues[stateIssues.length - 1].push(issues[i][key]); // Add reamining issues to last index of state issues array because they are displayed after all other issues at the bottom of the menu\r\n         }\r\n      }\r\n      this.setState({ issues: stateIssues });\r\n   }\r\n\r\n   render() {\r\n      let rows = [];\r\n      for (let i = 0; i < menus[this.type].options.length; i++) {\r\n         let instance = menus[this.type].options[i].toLowerCase(); // instance: name of input for identification purposes\r\n         if (this.state.instances.indexOf(instance) === -1) { // If local instance is not found within stated instances of the menu\r\n            continue; // it should not be rendered in the menu\r\n         } // Allows menus[type].xxxx[i] to be used in this loop without having to check if it should exist within the menu\r\n         let input;\r\n         if (menus[this.type].values[i] === 'text') {\r\n            input = <Text   key={instance} menuType={this.type} instance={instance} value={this.state.values[i]} update={this.update} submit={submit.bind(this)} />; // menuType: which menu is to be rendered\r\n         } else if (menus[this.type].values[i] === 'number') {\r\n            input = <Num    key={instance} menuType={this.type} instance={instance} value={this.state.values[i]} update={this.update} submit={submit.bind(this)} />;\r\n         } else if (menus[this.type].values[i] === 'list') {\r\n            input = <List   key={instance} menuType={this.type} instance={instance} value={this.state.values[i]} update={this.update} submit={submit.bind(this)} />; // instance: name of list to tell what to render\r\n         } else if (menus[this.type].values[i].indexOf('radio') !== -1) { // If 'radio' is anywhere within string\r\n            input = <Radios key={instance} menuType={this.type} instance={instance} value={this.state.values[i]} update={this.update} submit={submit.bind(this)} count={parseInt(menus[this.type].values[i])} />;\r\n         } else if (menus[this.type].values[i] === 'button') {\r\n            input = <Button key={instance} menuType={this.type} instance={instance} />; // Button does not need update since it has no internal value\r\n         } else {\r\n            input = menus[this.type].values[i];\r\n         }\r\n         let issues = this.state.issues[i].map((issues, ix) => (\r\n            <p key={ix} \r\n            style={ { \r\n               color: 'red', \r\n               display: (this.state.issues[i].length ? 'block' : 'none'), \r\n               margin: '5px 0px 3px 0px'\r\n            } }>{issues}</p>\r\n         ));\r\n         let row = (\r\n            <tr className='menurow' key={instance}>\r\n               <td className='menucell' key={0} style={ { textAlign: 'right' } }>{menus[this.type].options[i]}</td>\r\n               <td className='menucell' key={1} style={ { textAlign: 'left' } }>\r\n                  {input}\r\n                  {issues}\r\n               </td>\r\n            </tr>\r\n         );\r\n         rows.push(row);\r\n      }\r\n      if (this.state.issues[this.state.issues.length - 1].length) { // If there are non-specific issues, display them in an additional row at the bottom of the menu\r\n         let row = (\r\n            <tr className='menurow' key={'nonspecissues'}>\r\n               <td className='menucell' key={0}></td>\r\n               <td className='menucell' key={1} style={ { textAlign: 'left' } }>\r\n                  {this.state.issues[this.state.issues.length - 1].map((issues, ix) => (\r\n                     <p key={ix} \r\n                     style={ { \r\n                        color: 'red', \r\n                        display: 'block', \r\n                        margin: '5px 0px 3px 0px'\r\n                     } }>{issues}</p>\r\n                  ))}\r\n               </td>\r\n            </tr>\r\n         );\r\n         rows.push(row);\r\n      }\r\n\r\n      return ( // CanvasCont: zIndex = '-2'; Shade: z-index = '-1'; Menu: zIndex = '1'; (Unpredictable behavior if shade is 0)\r\n         <div id='menu'>\r\n            <Shade />\r\n            <CanvasCont />\r\n            <div id={this.type + 'Header'} className='header' style={ { zIndex: '1', opacity: '.95' } }>\r\n               <h2 className='headertext'>{menus[this.type].header}</h2>\r\n            </div>\r\n            <div className='content' style={ { zIndex: '1' } }>\r\n               <table id={this.type + 'Table'} className='menutable'>\r\n                  <tbody id='Menu Body'>\r\n                     {rows}\r\n                  </tbody>\r\n               </table>\r\n               <MenuSubmit menuType={this.type} values={this.state.values} submit={submit.bind(this)} />\r\n            </div>\r\n            <MenuFooter menuType={this.type} submit={submit.bind(this)} />\r\n         </div>\r\n      );\r\n   }\r\n}\r\n","class MenuFooter extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {};\r\n      this.style = {\r\n         zIndex: '1',\r\n         position: 'absolute',\r\n         opacity: '.95'\r\n      };\r\n      this.menuType = props.menuType;\r\n\r\n      this.handleClick = this.handleClick.bind(this);\r\n   }\r\n\r\n   handleClick() { // Click is handled on footer rather than back text so click applies to entire footer\r\n      switch (this.menuType) {\r\n         case 'create':\r\n            renderTitle();\r\n            break;\r\n         case 'join':\r\n            if (game.info.host == socket.id) { // If player is host (If player is joining directly after creating the game)\r\n               socket.emit('Game Ended', game);\r\n               renderTitle();\r\n            } else {\r\n               renderBrowser();\r\n            }\r\n            break;\r\n         case 'spectate':\r\n            renderBrowser();\r\n            break;\r\n         case 'pauseSpectate': // Do not use submit() so changes are not saved when using back button\r\n         case 'respawn':\r\n            state = 'spectate';\r\n            ReactDOM.render(<CanvasCont />, eid('cont'));\r\n            break;\r\n         case 'pauseGame': {\r\n            let skip = false;\r\n            for (let i = 0; i < game.players.length; i++) {\r\n               if (game.players[i] === socket.id) { // If still is a player\r\n                  state = 'game';\r\n                  skip = true;\r\n                  break;\r\n               }\r\n            }\r\n            if (!skip) {\r\n               for (let i = 0; i < game.spectators.length; i++) {\r\n                  if (game.spectators[i] === socket.id) {\r\n                     state = 'spectate'; // Must include spectate possibility in pause game; even though a spectator could never open pause game menu, he could be killed while in menu\r\n                     break;\r\n                  }\r\n               }\r\n            }\r\n            ReactDOM.render(<CanvasCont />, eid('cont'));\r\n            break;\r\n         }\r\n         case 'pauseTutorial':\r\n            state = 'tutorial';\r\n            ReactDOM.render(<CanvasCont />, eid('cont'));\r\n            break;\r\n      }\r\n   }\r\n\r\n   render() {\r\n      let style = {};\r\n      for (let i in this.style) {\r\n         style[i] = this.style[i];\r\n      }\r\n\r\n      return (\r\n         <div id='footerDiv' style={style} onClick={this.handleClick}>\r\n            <footer id='footer' className='menufooter'>\r\n               <p className='menufootertext'>&larr; Back</p>\r\n            </footer>\r\n         </div>\r\n      );\r\n   }\r\n}\r\n","var menus = {\r\n   create: {\r\n      header: 'Game Creation Options',\r\n      button: 'Create',\r\n      options: [ 'Game Title', 'Password', 'World Type', 'World Width', 'World Height', 'Player Minimum', 'Player Cap', 'Team Count', 'Leaderboard Length', 'Game Mode' ],\r\n      values:  [ 'text',       'text',     'list',       'number',      'number',       'number',         'number',     'number',     'number',             'list'      ]\r\n   },\r\n   join: {\r\n      header: 'Join Game Options',\r\n      button: 'Join',\r\n      options: [ 'Screen Name', 'Password', 'Color', 'Skin',    '1st Ability', '2nd Ability', '3rd Ability', 'Team', 'Auto Assign' ],\r\n      values:  [ 'text',        'text',     'list',  '3 radio', '2 radio',     '2 radio',     '2 radio',     'list', '1 radio'     ]\r\n   },\r\n   spectate: {\r\n      header: 'Spectate Game Options',\r\n      button: 'Spectate',\r\n      options: [ 'Screen Name', 'Password' ],\r\n      values:  [ 'text',        'text'     ]\r\n   },\r\n   respawn: {\r\n      header: 'Spawn Options',\r\n      button: 'Spawn',\r\n      options: [ 'Color', 'Skin',    '1st Ability', '2nd Ability', '3rd Ability', 'Team', 'Auto Assign', 'Leave Game' ],\r\n      values:  [ 'list',  '3 radio', '2 radio',     '2 radio',     '2 radio',     'list', '1 radio'    , 'button'     ]\r\n   },\r\n   pauseGame: {\r\n      header: 'Pause Options',\r\n      button: 'Apply',\r\n      options: [ 'Color', 'Skin',    'Name Labels', 'Messages', 'Leave Game' ],\r\n      values:  [ 'list',  '3 radio', '1 radio',     '1 radio',  'button'     ]\r\n   },\r\n   pauseSpectate: {\r\n      header: 'Pause Options',\r\n      button: 'Apply',\r\n      options: [ 'Name Labels', 'Messages', 'Leave Game' ],\r\n      values:  [ '1 radio',     '1 radio',  'button'     ]\r\n   },\r\n   pauseTutorial: {\r\n      header: 'Pause Options',\r\n      button: 'Back',\r\n      options: [ 'Leave Tutorial' ],\r\n      values:  [ 'button'     ]\r\n   }\r\n};\r\n\r\nfunction renderMenu(type, data) {\r\n   if (state.indexOf('Menu') !== -1 && type !== state.slice(0, -4)) { // If current state is a menu and menu to be rendered is a different menu, unmount menu and re-render\r\n      ReactDOM.unmountComponentAtNode(eid('cont')); // Must first unmount component so Menu() will construct new instance rather than re-rendering (easier than re-constructing in componentWillReceiveProps() when rendering a menu from another menu)\r\n   }\r\n   ReactDOM.render(<Menu type={type} data={data} />, eid('cont')); // Render instance of Menu component class in container with id 'cont'\r\n   state = type + 'Menu'; // Game state - not component state\r\n}\r\n","class MenuSubmit extends React.Component { // Button for submitting menu information\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         down: false, // Is mouse down?\r\n         backgroundColor: 'rgb(240, 240, 240)', // Initialize backgroundColor style in state so it can be edited and re-rendered with React\r\n         left: (window.innerWidth - 95) / 2 + 'px' // Submit width is 95px\r\n      };\r\n      this.menuType = props.menuType;\r\n\r\n      this.handleClick = this.handleClick.bind(this);\r\n      this.handleMouseOver = this.handleMouseOver.bind(this);\r\n      this.handleMouseOut = this.handleMouseOut.bind(this);\r\n      this.handleMouseDown = this.handleMouseDown.bind(this);\r\n      this.handleMouseUp = this.handleMouseUp.bind(this);\r\n   }\r\n\r\n   handleClick(e) { // Submit functions based upon menu type\r\n      this.props.submit(this.menuType);\r\n   }\r\n   handleMouseOver(e) {\r\n      let page = document.body.parentNode;\r\n      if (!mouseDown || !this.state.down) { // If the mouse was lifted not over the button, state should not be down, but won't be detected as such by the button, hence mouseDown defined elsewhere\r\n         this.setState({ down: false, backgroundColor: 'rgb(220, 220, 220)' });\r\n      } else {\r\n         if (this.state.down) {\r\n            this.setState({ backgroundColor: 'rgb(200, 200, 200)' });\r\n            mouseDown = true;\r\n         }\r\n      }\r\n   }\r\n   handleMouseOut(e) {\r\n      this.setState({ backgroundColor: 'rgb(240, 240, 240)' });\r\n   }\r\n   handleMouseDown(e) {\r\n      this.setState({\r\n         down: true,\r\n         backgroundColor: 'rgb(200, 200, 200)'\r\n      });\r\n   }\r\n   handleMouseUp(e) {\r\n      this.setState({\r\n         down: false,\r\n         backgroundColor: 'rgb(240, 240, 240)'\r\n      });\r\n   }\r\n\r\n   componentWillMount() {\r\n      let page = document.body.parentNode;\r\n      if (!mouseDown) this.setState({ down: false });\r\n   }\r\n   componentWillReceiveProps(next) {\r\n      this.setState({ left: (window.innerWidth - 95) / 2 + 'px' }); // Center submit button on the screen\r\n   }\r\n   render() {\r\n      let style = {};\r\n      style.backgroundColor = this.state.backgroundColor;\r\n      style.left = this.state.left;\r\n\r\n      return (\r\n         <button \r\n            id={this.menuType + 'Button'} \r\n            className='menusubmit' \r\n            type='button' \r\n            style={style} \r\n            onClick={this.handleClick} \r\n            onMouseOver={this.handleMouseOver} \r\n            onMouseOut={this.handleMouseOut} \r\n            onMouseDown={this.handleMouseDown} \r\n            onMouseUp={this.handleMouseUp}\r\n         ><p style={ { margin: 0 } }>{menus[this.menuType].button}</p>\r\n         </button>\r\n      );\r\n   }\r\n}\r\n","class Num extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         value: props.value, // Actuall value of the input field\r\n         focused: false, // If the user is focused on the field\r\n         backgroundColor: 'rgb(255, 255, 255)',\r\n         display: 'table-row' // Indicates whether 'display: none' property will be set on the container table row\r\n      };\r\n      this.style = {};\r\n      this.menuType = props.menuType; // Type of menu rendered inside\r\n      this.instance = props.instance; // Name of input\r\n      // this.index = menus[this.menuType].options.indexOf(capitalize(this.instance)); // Not currently in use\r\n      this.placeholder = null;\r\n\r\n      this.applyInstance = this.applyInstance.bind(this);\r\n      this.handleFocus = this.handleFocus.bind(this);\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleKeyDown = this.handleKeyDown.bind(this);\r\n   }\r\n   applyInstance() {\r\n      switch (this.instance) {\r\n         case 'world width':\r\n            this.placeholder = Defaults.worldwidth;\r\n            this.min = 300;\r\n            this.max = 100000;\r\n            break;\r\n         case 'world height':\r\n            this.placeholder = Defaults.worldheight;\r\n            this.min = 300;\r\n            this.max = 100000;\r\n            break;\r\n         case 'player minimum':\r\n            this.placeholder = Defaults.playermin;\r\n            this.min = 2;\r\n            break;\r\n         case 'player cap':\r\n            this.placeholder = Defaults.playercap;\r\n            this.min = 2;\r\n            break;\r\n         case 'leaderboard length':\r\n            this.placeholder = Defaults.boardlength;\r\n            this.min = 1;\r\n            this.max = 20;\r\n            break;\r\n         case 'team count':\r\n            this.placeholder = Defaults.teamcount;\r\n            this.min = 2;\r\n            this.max = teamColors.length;\r\n            break;\r\n      }\r\n   }\r\n\r\n   handleFocus(e) {\r\n      if (e.type === 'focus') { // If focus in\r\n         this.setState({ focused: true, backgroundColor: 'rgb(230, 230, 230)' }); // Darken\r\n      } else if (e.type === 'blur') { // If focus out\r\n         this.setState({ focused: false, backgroundColor: 'rgb(255, 255, 255)' }); // Lighten\r\n      }\r\n   }\r\n   handleChange(e) {\r\n      let val = e.target.value; // Create local, editable value\r\n      if (e.target.value % 1 !== 0) // If value is not an integer\r\n         val = floor(val); // Set value to greatest integer\r\n      this.props.update(this.instance, val); // Update local value and rest of menu if applicable\r\n   }\r\n   handleKeyDown(e) {\r\n      if (e.keyCode === 13) // If ENTER key is down\r\n         this.props.submit(this.menuType);\r\n   }\r\n\r\n   componentWillMount() { // Runs on initial mount, not every update\r\n      this.applyInstance();\r\n   }\r\n   componentDidMount() {\r\n      this.props.update(this.instance, this.state.value);\r\n   }\r\n   componentWillReceiveProps(next) {\r\n      this.setState({ value: next.value });\r\n   }\r\n   render() {\r\n      let style = {};\r\n      for (let i in this.style) {\r\n         style[i] = this.style[i];\r\n      }\r\n      style.backgroundColor = this.state.backgroundColor;\r\n\r\n      return (\r\n         <input \r\n            id={this.instance + ' input'} \r\n            className='menuinput' \r\n            type='number' \r\n            value={this.state.value} \r\n            placeholder={this.placeholder} \r\n            min={this.min} \r\n            max={this.max} \r\n            autoComplete='off' \r\n            style={style} \r\n            onFocus={this.handleFocus} \r\n            onBlur={this.handleFocus} \r\n            onChange={this.handleChange} \r\n            onKeyDown={this.handleKeyDown}\r\n         ></input>\r\n      );\r\n   }\r\n}\r\n","class Radio extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         value: props.value\r\n      };\r\n      this.style = {};\r\n      this.instance = props.instance;\r\n      this.order = props.order; // Index of radio within radio group (for identification purposes)\r\n   }\r\n\r\n   componentWillReceiveProps(next) {\r\n      this.setState({ value: next.value });\r\n   }\r\n   render() {\r\n      let style = {};\r\n      if (this.state.value)\r\n         style.backgroundColor = 'rgb(190, 190, 190)';\r\n      else\r\n         style.backgroundColor = 'rgb(255, 255, 255)';\r\n      return (\r\n         <div\r\n            id={this.instance + ' input ' + this.order} \r\n            className='menuradio' \r\n            type='radio' \r\n            style={style} \r\n            onClick={this.props.onClick}\r\n         ></div>\r\n      );\r\n   }\r\n}\r\n","class Radios extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         value: props.value, // Value is represented as index of radio which is selected (only one is selected at once) (null if none are selected)\r\n         selections: Array(props.count).fill(false) // Boolean array to show selection state of radios\r\n      };\r\n      this.count = props.count;\r\n      this.menuType = props.menuType;\r\n      this.instance = props.instance;\r\n      // this.index = menus[this.menuType].options.indexOf(capitalize(this.instance)); // Not currently in use\r\n\r\n      this.applyInstance = this.applyInstance.bind(this);\r\n   }\r\n\r\n   applyInstance() { // this.props.update should not be run within applyInstance since component is not yet mounted\r\n      switch (this.instance) {\r\n         case 'skin':\r\n            this.set = skins; // Set is an array of text to be displayed next to the radio inputs\r\n            if (this.menuType === 'respawn' || this.menuType === 'pauseGame') { // Placed outside and after above for loop so the above will occur by defualt and this will overwrite if applicable\r\n               for (let i = 0; i < skins.length; i++) {\r\n                  if (org && org.skin === skins[i]) {\r\n                     let sels = this.state.selections; // Create copy of state selections array\r\n                     sels.fill(false); // Set entire array to false\r\n                     sels[i] = true; // Set current skin to value true\r\n                     this.setState({ value: org.skin, selections: sels });\r\n                     break;\r\n                  }\r\n               }\r\n            }\r\n            break;\r\n         case '1st ability':\r\n            this.set = firsts; // Defined in config.js\r\n            if (this.menuType === 'respawn') {\r\n               let index;\r\n               let sels = this.state.selections; // Create copy of state selections array\r\n               sels.fill(false);\r\n               if (ability.extend.activated)\r\n                  index = 0; // Set index value of selected radio in radios\r\n               else if (ability.compress.activated)\r\n                  index = 1; // Set index value of selected radio in radios\r\n               sels[index] = true;\r\n               this.setState({ value: this.set[index], selections: sels });\r\n            }\r\n            break;\r\n         case '2nd ability':\r\n            this.set = seconds; // Defined in config.js\r\n            if (this.menuType === 'respawn') {\r\n               let index;\r\n               let sels = this.state.selections; // Create copy of state selections array\r\n               sels.fill(false);\r\n               if (ability.immortality.activated)\r\n                  index = 0; // Set index value of selected radio in radios\r\n               else if (ability.freeze.activated)\r\n                  index = 1; // Set index value of selected radio in radios\r\n               sels[index] = true;\r\n               this.setState({ value: this.set[index], selections: sels });\r\n            }\r\n            break;\r\n         case '3rd ability':\r\n            this.set = thirds; // Defined in config.js\r\n            if (this.menuType === 'respawn') {\r\n               let index;\r\n               let sels = this.state.selections; // Create copy of state selections array\r\n               sels.fill(false);\r\n               if (ability.neutralize.activated)\r\n                  index = 0; // Set index value of selected radio in radios\r\n               else if (ability.toxin.activated)\r\n                  index = 1; // Set index value of selected radio in radios\r\n               sels[index] = true;\r\n               this.setState({ value: this.set[index], selections: sels });\r\n            }\r\n            break;\r\n         case 'auto assign':\r\n            this.set = ['']; // Do not display any text adjacent to name label radio\r\n            if (this.menuType === 'respawn') {\r\n               if (ability.auto)\r\n                  this.setState({ value: 'auto assign', selections: [true] });\r\n               else\r\n                  this.setState({ value: '', selections: [false] });\r\n            }\r\n            break;\r\n         case 'name labels':\r\n            this.set = ['']; // Do not display any text adjacent to name label radio\r\n            if (Labels) // If name labels setting is on\r\n               this.setState({ value: this.instance, selections: [true] }); // Set value of Radios to instance value ('name labels') and select the radio\r\n            else\r\n               this.setState({ value: '', selections: [false] }); // Set value of Radios to '' (no value) and deselect the radio\r\n            break;\r\n         case 'messages':\r\n            this.set = ['']; // Do not display any text adjacent to name label radio\r\n            if (Messages) // If messages setting is on\r\n               this.setState({ value: this.instance, selections: [true] }); // Set value of Radios to instance value ('messages') and select the radio\r\n            else\r\n               this.setState({ value: '', selections: [false] }); // Set value of Radios to '' (no value) and deselect the radio\r\n            break;\r\n      }\r\n   }\r\n\r\n   handleClick(index) {\r\n      let selections = this.state.selections.slice(); // Copy state selections array into selections\r\n      let newValue = !selections[index]; // Flip selected radio value\r\n      selections.fill(false); // Set all selections to false\r\n      selections[index] = newValue; // Apply new value to selections array\r\n      let val;\r\n      if (this.set.length === 1 && this.set[0] === '') // If there is no text labeling radio, and there is only one radio in a set, set value to instance\r\n         val = selections[index] ? this.instance : ''; // If radio is selected, set value to instance; If deselected, value is empty string\r\n      else\r\n         val = selections[index] ? this.set[index] : ''; // If radio is selected, set value to radio label; If deselected, value is empty string\r\n      this.props.update(this.instance, val); // Update state value\r\n      this.setState({ selections: selections }); // Update selections\r\n   }\r\n\r\n   componentWillMount() {\r\n      this.applyInstance();\r\n   }\r\n   componentDidMount() { // Does not run when component is merely changed\r\n      this.props.update(this.instance, this.state.value);\r\n   }\r\n   componentWillReceiveProps(next) {\r\n      this.setState({ value: next.value });\r\n   }\r\n   render() {\r\n      let radios = [];\r\n      for (let i = 0; i < this.count; i++) {\r\n         radios.push(<Radio key={i} instance={this.instance} order={i} value={this.state.selections[i]} onClick={() => this.handleClick(i)} />); // Uses arrow function syntax so 'i' can be passed rather than event parameter\r\n      }\r\n      let elts = radios.map((radio, index) => ( // Add spacers under radio buttons; Last spacer is twice as high\r\n         <div key={index} onKeyDown={this.handleKeyDown}>\r\n            {radio}\r\n            <p className='menuradiotext'>{this.set[index] ? (this.set[index][0].toUpperCase() + this.set[index].slice(1)) : null}</p>\r\n            <div style={ { display: 'block', height: ((index === radios.length - 1) ? '6px' : '3px') } }></div>\r\n         </div>\r\n      )); // If this.set[index] is empty, do not render text (inner HTML of <p> is null)\r\n\r\n      return (\r\n         <div id={this.instance + ' input'} value={this.state.value}>\r\n            {elts}\r\n         </div>\r\n      );\r\n   }\r\n}\r\n","function submit(menuType) {\r\n   let issues = []; // Array of objects [ { [instance]: 'error message' } ] (instance of input to render error message next to)\r\n   let ok = true; // Check for inputs' validities\r\n   let tInput = eid('game title input');\r\n   let pInput = eid('password input');\r\n   let typeInput = eid('world type input');\r\n   let widthInput = eid('world width input');\r\n   let heightInput = eid('world height input');\r\n   let pcInput = eid('player cap input');\r\n   let pmInput = eid('player minimum input');\r\n   let boardLengthInput = eid('leaderboard length input');\r\n   let tcInput = eid('team count input');\r\n   let modeInput = eid('game mode input');\r\n   let snInput = eid('screen name input');\r\n   let cInput = eid('color input');\r\n   let teamInput = eid('team input');\r\n   let gametitle = tInput ? tInput.value : null; // Reading values is ok, but do not edit direct to the DOM\r\n   let password = pInput ? pInput.value : null;\r\n   let type = typeInput ? typeInput.value.toLowerCase() : null;\r\n   let width = widthInput ? parseFloat(widthInput.value) : null;\r\n   let height = heightInput ? parseFloat(heightInput.value) : null;\r\n   let cap = pcInput ? parseFloat(pcInput.value) : null;\r\n   let minimum = pmInput ? parseFloat(pmInput.value) : null;\r\n   let show = boardLengthInput ? parseFloat(boardLengthInput.value) : null;\r\n   let teamCount = tcInput ? parseFloat(tcInput.value) : null;\r\n   let mode = modeInput ? modeInput.value : null;\r\n   let name = snInput ? snInput.value : null;\r\n   let color = cInput ? cInput.value.toLowerCase() : null;\r\n   let first = this.state.values[menus[this.type].options.indexOf('1st Ability')]; // this value must be instance of Menu component (bind this in submit property in menuSubmit rendering)\r\n   let second = this.state.values[menus[this.type].options.indexOf('2nd Ability')]; // Value of second ability input\r\n   let third = this.state.values[menus[this.type].options.indexOf('3rd Ability')]; // Valeu of third ability input\r\n   first = first ? first.toLowerCase() : ''; // toLowerCase() is separated so entire getting of first value need not be repeated in ternary expression\r\n   second = second ? second.toLowerCase() : '';\r\n   third = third ? third.toLowerCase() : '';\r\n   let skin = this.state.values[menus[this.type].options.indexOf('Skin')]; // this value must be instance of Menu component (bind this in submit property in menuSubmit rendering)\r\n   skin = skin || 'none'; // If no skin is selected, set value of skin to 'none'\r\n   let team = teamInput ? teamInput.value.toLowerCase() : null;\r\n   let auto = this.state.values[menus[this.type].options.indexOf('Auto Assign')]; // this value must be instance of Menu component (bind this in submit property in menuSubmit rendering)\r\n   auto = auto ? true : false; // Set auto assign to Boolean value\r\n   let label = this.state.values[menus[this.type].options.indexOf('Name Labels')]; // this value must be instance of Menu component (bind this in submit property in menuSubmit rendering)\r\n   label = label === 'name labels' ? true : false; // Set label to Boolean value\r\n   let message = this.state.values[menus[this.type].options.indexOf('Messages')]; // this value must be instance of Menu component (bind this in submit property in menuSubmit rendering)\r\n   message = message === 'messages' ? true : false; // Set messages to Boolean value\r\n   switch (menuType) {\r\n      case 'create':\r\n         { // Game Title\r\n            if (tInput) { // If title input exists\r\n               if (!gametitle) { // If empty\r\n                  ok = false;\r\n                  issues.push({ ['game title']: 'Title cannot be left blank' });\r\n                  // alert('Title cannot be left blank');\r\n               } else {\r\n                  for (let i = 0; i < games.length; i++) {\r\n                     if (gametitle === games[i].info.title) { // Find matching title to another game\r\n                        ok = false;\r\n                        issues.push({ ['game title']: 'Title matches that of another game' });\r\n                        // alert('Title matches that of another game');\r\n                        break;\r\n                     }\r\n                  }\r\n               }\r\n            }\r\n         } { // World Width and Height\r\n            if (widthInput && heightInput) { // If width and height inputs exist\r\n               if (!width && width !== 0) { // If width input is empty\r\n                  width = parseFloat(widthInput.placeholder); // Set width to default (rendered in placeholder)\r\n               }\r\n               if (!height && height !== 0) { // If height input is empty\r\n                  height = parseFloat(heightInput.placeholder); // Set height to default (rendered in placeholder)\r\n               }\r\n               if (width < parseFloat(widthInput.min) || height < parseFloat(heightInput.min)) {\r\n                  ok = false;\r\n                  issues.push({ ['world width']: 'Dimensions must be at least ' + widthInput.min + ' x ' + heightInput.min + ' px' });\r\n                  issues.push({ ['world height']: 'Dimensions must be at least ' + widthInput.min + ' x ' + heightInput.min + ' px' });\r\n                  // alert('Dimensions must be at least ' + widthInput.min + ' x ' + heightInput.min + ' px');\r\n               } else if (width > parseFloat(widthInput.max) || height > parseFloat(heightInput.max)) {\r\n                  ok = false;\r\n                  issues.push({ ['world width']: 'Dimensions can be at most ' + widthInput.max + ' x ' + heightInput.max + ' px' });\r\n                  issues.push({ ['world height']: 'Dimensions can be at most ' + widthInput.max + ' x ' + heightInput.max + ' px' });\r\n                  // alert('Dimensions can be at most ' + widthInput.max + ' x ' + heightInput.max + ' px');\r\n               }\r\n               if (width % 1 !== 0 || height % 1 !== 0) {\r\n                  ok = false;\r\n                  issues.push({ ['world width']: 'Width and height must be whole numbers' });\r\n                  issues.push({ ['world height']: 'Width and height must be whole numbers' });\r\n                  // alert('Width and height must be whole numbers');\r\n               }\r\n               if (width != height) {\r\n                  ok = false;\r\n                  issues.push({ ['world width']: 'Width and height must be equivalent' });\r\n                  issues.push({ ['world height']: 'Width and height must be equivalent' });\r\n                  // alert('Width and height must be equivalent');\r\n               }\r\n            }\r\n         } { // Player Cap\r\n            if (pcInput) { // If player cap input exists\r\n               if (!cap && cap !== 0) { // If player cap input is left empty\r\n                  cap = parseFloat(pcInput.placeholder); // Set cap to default as rendered as placeholder\r\n               } else if (cap < parseFloat(pcInput.min)) {\r\n                  ok = false;\r\n                  issues.push({ ['player cap']: 'Player cap must be at least ' + parseFloat(pcInput.min) });\r\n                  // alert('Player cap must be at least ' + parseFloat(pcInput.min));\r\n               } else if (cap % 1 !== 0) {\r\n                  ok = false;\r\n                  issues.push({ ['player cap']: 'Player cap must be a whole number' });\r\n                  // alert('Player cap must be a whole number');\r\n               } else if (pmInput ? cap < parseFloat(pmInput.value) : false) { // If player minimum input exists and player cap is less than player minimum value\r\n                  ok = false;\r\n                  issues.push({ ['player cap']: 'Player cap cannot be less than player minimum' });\r\n                  // alert('Player cap cannot be less than player minimum');\r\n               }\r\n            }\r\n         } { // Player Minimum\r\n            if (pmInput) { // If player minimum input exists\r\n               if (!minimum && minimum !== 0) { // If player minimum input is left empty\r\n                  minimum = parseFloat(pmInput.placeholder); // Set player minimum to default rendered as placeholder\r\n               } else if (minimum < parseFloat(pmInput.min)) {\r\n                  ok = false;\r\n                  issues.push({ ['player minimum']: 'Player minimum must be at least ' + parseFloat(pmInput.min) });\r\n                  // alert('Player minimum must be at least ' + parseFloat(pmInput.min));\r\n               } else if (minimum % 1 !== 0) {\r\n                  ok = false;\r\n                  issues.push({ ['player minimum']: 'Player minimum must be a whole number' });\r\n                  // alert('Player minimum must be a whole number');\r\n               }\r\n            }\r\n         } { // Leaderboard Length\r\n            if (boardLengthInput) { // If leaderboard length input exists\r\n               if (!show && show !== 0) { // If input is left blank\r\n                  show = parseFloat(boardLengthInput.placeholder);\r\n               } else if (show < parseFloat(boardLengthInput.min)) {\r\n                  ok = false;\r\n                  issues.push({ ['leaderboard length']: 'Leaderboard length must be at least ' + parseFloat(boardLengthInput.min) });\r\n                  // alert('Leaderboard length must be at least ' + parseFloat(boardLengthInput.min));\r\n               } else if (show > parseFloat(boardLengthInput.max)) {\r\n                  ok = false;\r\n                  issues.push({ ['leaderboard length']: 'Leaderboard length can be at most ' + parseFloat(boardLengthInput.max) });\r\n                  // alert('Leaderboard length can be at most ' + parseFloat(boardLengthInput.max));\r\n               } else if (show % 1 !== 0) {\r\n                  ok = false;\r\n                  issues.push({ ['leaderboard length']: 'Leaderboard length must be a whole number' });\r\n                  // alert('Leaderboard length must be a whole number');\r\n               }\r\n            }\r\n         } { // Team Count\r\n            if (tcInput) { // If team count input exists\r\n               if (!teamCount && teamCount !== 0) { // If team count input is left empty\r\n                  teamCount = parseFloat(tcInput.placeholder); // Set team count to default rendered as placeholder\r\n               } else if (teamCount < parseFloat(tcInput.min)) {\r\n                  ok = false;\r\n                  issues.push({ ['team count']: 'Team count must be at least ' + parseFloat(tcInput.min) });\r\n                  // alert('Team count must be at least ' + parseFloat(tcInput.min));\r\n               } else if (teamCount > parseFloat(tcInput.max)) {\r\n                  ok = false;\r\n                  issues.push({ ['team count']: 'Team count can be at most ' + parseFloat(tcInput.max) });\r\n                  // alert('Team count can be at most ' + parseFloat(tcInput.max));\r\n               } else if (teamCount % 1 !== 0) {\r\n                  ok = false;\r\n                  issues.push({ ['team count']: 'Team count must be a whole number' });\r\n                  // alert('Team count must be a whole number');\r\n               } else if (teamCount > parseFloat(pcInput.value)) {\r\n                  ok = false;\r\n                  issues.push({ ['team count']: 'Player cap cannot be less than the number of teams' });\r\n                  // alert('Player cap cannot be less than the number of teams');\r\n               }\r\n            }\r\n         }\r\n         if (ok) {\r\n            let color = 'black'; // eid('World color input').value.toLowerCase(); // Only black world is enabled\r\n            createGame({\r\n               title: gametitle,\r\n               password: password,\r\n               type: type,\r\n               width: width,\r\n               height: height,\r\n               color: color,\r\n               cap: cap,\r\n               show: show,\r\n               mode: mode,\r\n               teamCount: teamCount,\r\n               min: minimum\r\n            });\r\n            renderMenu('join', game); // Pass in game data for certain menu information\r\n         } else {\r\n            this.issue(issues);\r\n         }\r\n         break;\r\n      case 'join':\r\n         { // Screen Name\r\n            if (!name) { // If screen name input is left empty\r\n               ok = false;\r\n               issues.push({ ['screen name']: 'Screen name cannot be left empty' });\r\n               // alert('Screen name cannot be left empty');\r\n            }\r\n            for (let i = 0; i < game.info.count; i++) { // Requires game to be updated (in renderMenu(datA))\r\n               if (name == game.board.list[i].name) { // Name cannot match another player's name\r\n                  ok = false;\r\n                  issues.push({ ['screen name']: 'Name matches that of another player' });\r\n                  // alert('Name matches that of another player');\r\n                  break;\r\n               }\r\n            }\r\n         }\r\n         // Skins\r\n         if (skins.indexOf(skin) === -1 && skin !== 'none') { // If the skin value is not 'none' or any other possible skin (should never occur)\r\n            ok = false;\r\n            issues.push({ skin: 'There is an issue with the skin selection' });\r\n         }\r\n         { // Abilities\r\n            if (game.info.mode === 'ffa' || game.info.mode === 'skm' || game.info.mode === 'srv' || game.info.mode === 'ctf' || game.info.mode === 'kth') { // FFA, SKM, SRV, CTF, and KTH all use standard ability set\r\n               if (!first) {\r\n                  ok = false;\r\n                  issues.push({ ['1st ability']: 'Select a first ability' });\r\n               } else if (first !== 'extend' && first !== 'compress') {\r\n                  ok = false;\r\n                  issues.push({ ['1st ability']: 'There is an issue with the first ability selection' });\r\n               }\r\n               if (!second) {\r\n                  ok = false;\r\n                  issues.push({ ['2nd ability']: 'Select a second ability' });\r\n               } else if (second !== 'immortality' && second !== 'freeze') {\r\n                  ok = false;\r\n                  issues.push({ ['2nd ability']: 'There is an issue with the second ability selection' });\r\n               }\r\n               if (!third) {\r\n                  ok = false;\r\n                  issues.push({ ['3rd ability']: 'Select a third ability' });\r\n               } else if (third !== 'neutralize' && third !== 'toxin') {\r\n                  ok = false;\r\n                  issues.push({ ['3rd ability']: 'There is an issue with the third ability selection' });\r\n               }\r\n            }\r\n         } { // Team\r\n            if (game.info.mode == 'skm' || game.info.mode == 'ctf') { // If is a team game\r\n               if (!auto) {\r\n                  for (let i = 0; i < game.teams.length; i++) {\r\n                     if (i === teamColors.indexOf(team)) { // If i is selected team\r\n                        continue;\r\n                     }\r\n                     if (game.teams[teamColors.indexOf(team)].length > game.teams[i].length) { // If there are more players on selected team than another\r\n                        if (org && typeof team === 'string' && org.team === team) { // If player is already on selected team\r\n                           break; // Allow spawn\r\n                        }\r\n                        ok = false;\r\n                        issues.push({ ['auto assign']: 'Cannot join ' + team + ' team because it already has more players than ' + teamColors[i] });\r\n                        // alert('Cannot join ' + team + ' team because it already has more players than ' + teamColors[i]);\r\n                        break;\r\n                     }\r\n                  }\r\n                  if (org && org.team !== team && game.teams[teamColors.indexOf(org.team)].length === game.teams[teamColors.indexOf(team)].length) {\r\n                     ok = false;\r\n                     issues.push({ ['auto assign']: 'Cannot join ' + team + ' team because it will have more players than ' + org.team });\r\n                     // alert('Cannot join ' + team + ' team because it will have more players than ' + org.team);\r\n                  }\r\n               }\r\n            }\r\n         } { // Player Cap\r\n            if (game.players.length >= game.info.cap) {\r\n               ok = false;\r\n               issues.push({ ['player cap']: 'Game is at maximum player capacity' });\r\n               // alert('Game is at maximum player capacity');\r\n            }\r\n         } { // Game Closed\r\n            let closed = true;\r\n            for (let i = 0; i < games.length; i++) {\r\n               if (games[i].info.host == game.info.host) {\r\n                  closed = false;\r\n                  break;\r\n               }\r\n            }\r\n            if (closed) {\r\n               ok = false;\r\n               // issues.push({ ['']: 'The game has closed' }); // Empty quotes for game closed instance because it is not specific to a single input\r\n               alert('The game has closed');\r\n               renderTitle();\r\n            }\r\n         } { // Password\r\n            socket.emit('Check Permission', { title: game.info.title });\r\n            socket.on('Permission Denied', deniedJoin.bind(this)); // Call bound function so this.issues() can be called from within\r\n            socket.on('Permission Granted', grantedJoin.bind(this));\r\n\r\n            function deniedJoin() {\r\n               socket.off('Permission Denied');\r\n               socket.off('Permission Granted');\r\n               ok = false;\r\n               if (password === '' || typeof password !== 'string') {\r\n                  issues.push({ ['password']: 'A password is required for this game' });\r\n                  // alert('A password is required for this game');\r\n               } else {\r\n                  issues.push({ ['password']: 'Password is invalid' });\r\n                  // alert('Password is invalid');\r\n               }\r\n               this.issue(issues);\r\n            }\r\n\r\n            function grantedJoin() { // Function is defined locally so it cannot be called from the global scope (slightly better security)\r\n               socket.off('Permission Denied');\r\n               socket.off('Permission Granted');\r\n               if (ok) { // Inside grantedJoin() so can only be triggered once 'Permission Granted' has been received\r\n                  // Leaderboard\r\n                  let already = false;\r\n                  for (let i = 0; i < game.board.list.length; i++) {\r\n                     if (game.board.list[i].player == socket.id) {\r\n                        already = true;\r\n                        break;\r\n                     }\r\n                  }\r\n                  if (!already) {\r\n                     game.board.list.push({\r\n                        player: socket.id,\r\n                        name: name,\r\n                        kills: 0,\r\n                        deaths: 0,\r\n                        score: 0,\r\n                        wins: 0\r\n                     });\r\n                  }\r\n                  orderBoard(game.board.list);\r\n                  socket.emit('Board', { list: game.board.list, host: game.board.host }); // Must be before spawn because only runs when first entering server, and spawn() runs on respawn as well\r\n                  // Abilities\r\n                  if (game.info.mode === 'ffa' || game.info.mode === 'skm' || game.info.mode === 'srv' || game.info.mode === 'ctf' || game.info.mode === 'kth') { // FFA, SKM, SRV, CTF, and KTH all use standard ability set\r\n                     ability.tag.activated = false;\r\n                     ability.tag.can = false;\r\n                     if (first === 'extend') {\r\n                        ability.extend.activated = true;\r\n                        ability.extend.can = true;\r\n                        ability.compress.activated = false;\r\n                        ability.compress.can = false;\r\n                     } else if (first === 'compress') {\r\n                        ability.compress.activated = true;\r\n                        ability.compress.can = true;\r\n                        ability.extend.activated = false;\r\n                        ability.extend.can = false;\r\n                     }\r\n                     if (second === 'immortality') {\r\n                        ability.immortality.activated = true;\r\n                        ability.immortality.can = true;\r\n                        ability.freeze.activated = false;\r\n                        ability.freeze.can = false;\r\n                     } else if (second === 'freeze') {\r\n                        ability.freeze.activated = true;\r\n                        ability.freeze.can = true;\r\n                        ability.immortality.activated = false;\r\n                        ability.immortality.can = false;\r\n                     }\r\n                     if (third === 'neutralize') {\r\n                        ability.neutralize.activated = true;\r\n                        ability.neutralize.can = true;\r\n                        ability.toxin.activated = false;\r\n                        ability.toxin.can = false;\r\n                     } else if (third === 'toxin') {\r\n                        ability.toxin.activated = true;\r\n                        ability.toxin.can = true;\r\n                        ability.neutralize.activated = false;\r\n                        ability.neutralize.can = false;\r\n                     }\r\n                     ability.spore.activated = true;\r\n                     ability.spore.can = true;\r\n                     ability.secrete.activated = true;\r\n                     ability.secrete.can = false;\r\n                     for (let i = 0; i < ability.shoot.value.length; i++) {\r\n                        ability.shoot.can[i] = true;\r\n                        ability.shoot.value[i] = false;\r\n                     }\r\n                  } else if (game.info.mode === 'inf') {\r\n                     ability.tag.activated = true;\r\n                     ability.tag.can = true;\r\n                     ability.extend.activated = false;\r\n                     ability.extend.can = false;\r\n                     ability.compress.activated = false;\r\n                     ability.compress.can = false;\r\n                     ability.immortality.activated = false;\r\n                     ability.immortality.can = false;\r\n                     ability.freeze.activated = false;\r\n                     ability.freeze.can = false;\r\n                     ability.neutralize.activated = false;\r\n                     ability.neutralize.can = false;\r\n                     ability.toxin.activated = false;\r\n                     ability.toxin.can = false;\r\n                     ability.spore.activated = false;\r\n                     ability.spore.can = false;\r\n                     ability.secrete.activated = false;\r\n                     ability.secrete.can = false;\r\n                     for (let i = 0; i < ability.shoot.value.length; i++) {\r\n                        if (i == ability.tag.i) {\r\n                           ability.shoot.can[i] = true;\r\n                        } else {\r\n                           ability.shoot.can[i] = false;\r\n                        }\r\n                        ability.shoot.value[i] = false;\r\n                     }\r\n                  }\r\n                  // Team\r\n                  if (game.info.mode === 'skm' || game.info.mode === 'ctf') { // If is a team game\r\n                     ability.auto = auto; // auto variable is Boolean\r\n                     if (auto) { // If auto assign is selected\r\n                        let indices = [];\r\n                        let minimum = Infinity;\r\n                        for (let i = 0; i < game.teams.length; i++) { // Find team(s) with the fewest players and store their indices within game.teams array into indices array\r\n                           if (game.teams[i].length < minimum) { // If length is less than minimum\r\n                              minimum = game.teams[i].length; // Set length as new minimum\r\n                              indices = [i]; // Clear indices and push i\r\n                           } else if (game.teams[i].length == minimum) {\r\n                              indices.push(i);\r\n                           }\r\n                        }\r\n                        team = teamColors[indices[floor(random(0, indices.length))]]; // Set team to the team with the fewest players; If there are multiple, choose one at random\r\n                     }\r\n                     for (let i = 0; i < teamColors.length; i++) {\r\n                        if (team === teamColors[i]) {\r\n                           game.teams[i].push(socket.id); // Add player to selected team\r\n                           socket.emit('Teams', { teams: game.teams, host: game.info.host }); // Update server teams; host is for identification\r\n                           break;\r\n                        }\r\n                     }\r\n                  }\r\n                  // Color\r\n                  var color;\r\n                  if (game.info.mode === 'inf') { // If inf mode\r\n                     color = teamColorDef.green; // All players healthy by default\r\n                  } else if (game.info.mode !== 'skm' && game.info.mode !== 'ctf' && eid('color input')) { // If is not a team game and there is a color input field\r\n                     color = eid('color input').value.toLowerCase();\r\n                  } else {\r\n                     color = teamColorDef[team]; // Color must be after Team\r\n                  }\r\n                  // Initialize\r\n                  clearInterval(title.interval);\r\n                  if (game.rounds.util) {\r\n                     if (game.rounds.waiting) {\r\n                        initialize(game, { spectate: false, color: orgColors[game.world.color][color], skin: skin, team: team });\r\n                     } else {\r\n                        initialize(game, { spectate: true, color: orgColors[game.world.color][color], skin: skin, team: team });\r\n                     }\r\n                  } else {\r\n                     initialize(game, { spectate: false, color: orgColors[game.world.color][color], skin: skin, team: team });\r\n                  }\r\n               } else {\r\n                  this.issue(issues);\r\n               }\r\n            }\r\n         }\r\n         break;\r\n      case 'spectate':\r\n         { // Game Closed\r\n            let closed = true;\r\n            for (let i = 0; i < games.length; i++) {\r\n               if (games[i].info.host === game.info.host) {\r\n                  closed = false;\r\n                  break;\r\n               }\r\n            }\r\n            if (closed) {\r\n               ok = false;\r\n               // issues.push({ ['']: 'The game has closed' });\r\n               alert('The game has closed');\r\n               renderTitle();\r\n            }\r\n         } { // Screen Name\r\n            if (!name) {\r\n               ok = false;\r\n               issues.push({ ['screen name']: 'Screen name cannot be left empty' });\r\n               // alert('Screen name cannot be left empty');\r\n            }\r\n            for (let i = 0; i < game.info.count; i++) { // Requires game to be updated (in renderMenu(datA))\r\n               if (name === game.board.list[i].name) { // Name cannot match another player's name\r\n                  ok = false;\r\n                  issues.push({ ['screen name']: 'Name matches that of another player' });\r\n                  // alert('Name matches that of another player');\r\n                  break;\r\n               }\r\n            }\r\n         } { // Password\r\n            socket.emit('Check Permission', { title: game.info.title });\r\n            socket.on('Permission Denied', deniedSpectate.bind(this));\r\n            socket.on('Permission Granted', grantedSpectate.bind(this));\r\n\r\n            function deniedSpectate() {\r\n               socket.off('Permission Denied');\r\n               socket.off('Permission Granted');\r\n               ok = false;\r\n               if (!password) {\r\n                  issues.push({ ['password']: 'A password is required for this game' });\r\n                  // alert('A password is required for this game');\r\n               } else {\r\n                  issues.push({ ['password']: 'Password is invalid' });\r\n                  // alert('Password is invalid');\r\n               }\r\n               this.issue(issues);\r\n            }\r\n\r\n            function grantedSpectate() {\r\n               socket.off('Permission Denied');\r\n               socket.off('Permission Granted');\r\n               if (ok) { // Inside 'Permission Granted' so can only be triggered once 'Permission Granted' has been received\r\n                  // Leaderboard\r\n                  let already = false;\r\n                  for (let i = 0; i < game.board.list.length; i++) {\r\n                     if (game.board.list[i].player === socket.id) {\r\n                        already = true;\r\n                        break;\r\n                     }\r\n                  }\r\n                  if (!already) {\r\n                     game.board.list.push({ // Add player to leaderboard\r\n                        player: socket.id,\r\n                        name: name,\r\n                        kills: 0,\r\n                        deaths: 0,\r\n                        score: 0,\r\n                        wins: 0\r\n                     });\r\n                  }\r\n                  orderBoard(game.board.list);\r\n                  socket.emit('Board', { list: game.board.list, host: game.board.host }); // Must be before spawn because only runs when first entering server, and spawn() runs on respawn as well\r\n                  // Initialize\r\n                  clearInterval(title.interval);\r\n                  initialize(game, { spectate: true, color: undefined, skin: undefined });\r\n               } else {\r\n                  this.issue(issues);\r\n               }\r\n            }\r\n         }\r\n         break;\r\n      case 'respawn':\r\n         if (skins.indexOf(skin) === -1 && skin !== 'none') // Skins\r\n            ok = false;\r\n            issues.push({ skin: 'There is an issue with the skin selection' });\r\n         { // Abilities\r\n            if (game.info.mode === 'ffa' || game.info.mode === 'skm' || game.info.mode === 'srv' || game.info.mode === 'ctf' || game.info.mode === 'kth') { // FFA, SKM, SRV, CTF, and KTH all use standard ability set\r\n               if (!first) {\r\n                  ok = false;\r\n                  issues.push({ ['1st ability']: 'Select a first ability' });\r\n               } else if (first !== 'extend' && first !== 'compress') {\r\n                  ok = false;\r\n                  issues.push({ ['1st ability']: 'There is an issue with the first ability selection' });\r\n               }\r\n               if (!second) {\r\n                  ok = false;\r\n                  issues.push({ ['2nd ability']: 'Select a second ability' });\r\n               } else if (second !== 'immortality' && second !== 'freeze') {\r\n                  ok = false;\r\n                  issues.push({ ['2nd ability']: 'There is an issue with the second ability selection' });\r\n               }\r\n               if (!third) {\r\n                  ok = false;\r\n                  issues.push({ ['3rd ability']: 'Select a third ability' });\r\n               } else if (third !== 'neutralize' && third !== 'toxin') {\r\n                  ok = false;\r\n                  issues.push({ ['3rd ability']: 'There is an issue with the third ability selection' });\r\n               }\r\n            }\r\n         } { // Team\r\n            if (game.info.mode === 'skm' || game.info.mode === 'ctf') { // If is a team game\r\n               ability.auto = auto; // auto variable is Boolean\r\n               if (!auto) { // If auto assign is not selected\r\n                  for (let i = 0; i < game.teams.length; i++) {\r\n                     if (i === teamColors.indexOf(team)) {\r\n                        continue;\r\n                     }\r\n                     if (game.teams[teamColors.indexOf(team)].length > game.teams[i].length) { // If chosen team has greater players than another team\r\n                        if (org && org.team === team && typeof team === 'string') { // If player is already on loaded team\r\n                           break; // Allow respawn\r\n                        } else {\r\n                           ok = false; // Disallow respawn\r\n                           issues.push({ ['team input']: 'Cannot join ' + team + ' team because it already has more players than ' + teamColors[i] });\r\n                           // alert('Cannot join ' + team + ' team because it already has more players than ' + teamColors[i]);\r\n                           break;\r\n                        }\r\n                     }\r\n                     if (org && org.team !== team && game.teams[teamColors.indexOf(org.team)].length === game.teams[teamColors.indexOf(team)].length) { // If chosen team has equal players as current team (and is not current team)\r\n                        ok = false; // Disallow respawn\r\n                        issues.push({ ['team input']: 'Cannot join ' + team + ' team because it will have more players than ' + org.team });\r\n                        // alert('Cannot join ' + team + ' team because it will have more players than ' + org.team);\r\n                     }\r\n                  }\r\n               } else { // If auto assign is selected\r\n                  let indices = [];\r\n                  let minimum = Infinity;\r\n                  for (let i = 0; i < game.teams.length; i++) { // Find team(s) with the fewest players and store their indices within game.teams array into indices array\r\n                     let l = game.teams[i].length;\r\n                     if (game.teams[i].indexOf(socket.id) != -1) { // If player is on given team\r\n                        l--; // Do not include player as part of the team, so if even numbers before, will replace back on the same team and not add extra to other team\r\n                     }\r\n                     if (l < minimum) { // If length is less than minimum\r\n                        minimum = l; // Set length as new minimum\r\n                        indices = [i]; // Clear indices and push i\r\n                     } else if (l == minimum) {\r\n                        indices.push(i);\r\n                     }\r\n                  }\r\n                  team = teamColors[indices[floor(random(0, indices.length))]]; // Set team to the team with the fewest players; If there are multiple, choose one at random\r\n               }\r\n            }\r\n         } { // Game Closed\r\n            let closed = true;\r\n            for (let i = 0; i < games.length; i++) {\r\n               if (games[i].info.host == game.info.host) {\r\n                  closed = false;\r\n                  break;\r\n               }\r\n            }\r\n            if (closed == true) {\r\n               ok = false;\r\n               // issues.push({ ['']: 'The game has closed' });\r\n               alert('The game has closed');\r\n               renderTitle();\r\n            }\r\n         }\r\n         if (ok) {\r\n            socket.emit('Spectator Spawned', game);\r\n            // Abilities\r\n            if (game.info.mode === 'ffa' || game.info.mode === 'skm' || game.info.mode === 'srv' || game.info.mode === 'ctf' || game.info.mode === 'kth') { // FFA, SKM, SRV, CTF, and KTH all use standard ability set\r\n               if (first === 'extend') {\r\n                  ability.extend.activated = true;\r\n                  ability.extend.can = true;\r\n                  ability.compress.activated = false;\r\n                  ability.compress.can = false;\r\n               } else if (first === 'compress') {\r\n                  ability.compress.activated = true;\r\n                  ability.compress.can = true;\r\n                  ability.extend.activated = false;\r\n                  ability.extend.can = false;\r\n               }\r\n               if (second === 'immortality') {\r\n                  ability.immortality.activated = true;\r\n                  ability.immortality.can = true;\r\n                  ability.freeze.activated = false;\r\n                  ability.freeze.can = false;\r\n               } else if (second === 'freeze') {\r\n                  ability.freeze.activated = true;\r\n                  ability.freeze.can = true;\r\n                  ability.immortality.activated = false;\r\n                  ability.immortality.can = false;\r\n               }\r\n               if (third === 'neutralize') {\r\n                  ability.neutralize.activated = true;\r\n                  ability.neutralize.can = true;\r\n                  ability.toxin.activated = false;\r\n                  ability.toxin.can = false;\r\n               } else if (third === 'toxin') {\r\n                  ability.toxin.activated = true;\r\n                  ability.toxin.can = true;\r\n                  ability.neutralize.activated = false;\r\n                  ability.neutralize.can = false;\r\n               }\r\n               ability.spore.activated = true;\r\n               ability.spore.can = true;\r\n               ability.secrete.activated = true;\r\n               ability.secrete.can = false;\r\n            } else if (game.info.mode === 'inf') {\r\n               ability.extend.activated = false;\r\n               ability.extend.can = false;\r\n               ability.compress.activated = false;\r\n               ability.compress.can = false;\r\n               ability.immortality.activated = false;\r\n               ability.immortality.can = false;\r\n               ability.freeze.activated = false;\r\n               ability.freeze.can = false;\r\n               ability.neutralize.activated = false;\r\n               ability.neutralize.can = false;\r\n               ability.toxin.activated = false;\r\n               ability.toxin.can = false;\r\n               ability.spore.activated = false;\r\n               ability.spore.can = false;\r\n               ability.secrete.activated = false;\r\n               ability.secrete.can = false;\r\n            }\r\n            // Team\r\n            if (game.info.mode === 'skm' || game.info.mode === 'ctf') { // If is a team game\r\n               if (org.team !== team) { // Only add player to team if not already on team\r\n                  game.teams[teamColors.indexOf(team)].push(socket.id); // Add player to selected team\r\n                  game.teams[teamColors.indexOf(org.team)].splice(game.teams[teamColors.indexOf(org.team)].indexOf(socket.id), 1);\r\n                  socket.emit('Teams', { teams: game.teams, host: game.info.host }); // Host is for identification\r\n               }\r\n            }\r\n            // Color\r\n            if (game.info.mode === 'inf') { // If inf mode\r\n               color = teamColorDef.green; // All players healthy by default\r\n            } else if (game.info.mode !== 'skm' && game.info.mode !== 'ctf') { // If is not a team mode \r\n               color = eid('color input').value.toLowerCase();\r\n            } else {\r\n               color = teamColorDef[team]; // Color must be after Team\r\n            }\r\n            // Initialize\r\n            initialize(game, { spectate: false, color: orgColors[game.world.color][color], skin: skin, team: team });\r\n         } else {\r\n            this.issue(issues);\r\n         }\r\n         break;\r\n      case 'pauseGame':\r\n         if (skins.indexOf(skin) === -1 || skin === 'none') // Skins\r\n            issues.push({ skin: 'There is an issue with the skin selection' });\r\n         { // Game Closed\r\n            let closed = true;\r\n            for (let i = 0; i < games.length; i++) {\r\n               if (games[i].info.host === game.info.host) {\r\n                  closed = false;\r\n                  break;\r\n               }\r\n            }\r\n            if (closed) {\r\n               ok = false;\r\n               // issues.push({ ['']: 'The game has closed' });\r\n               alert('The game has closed');\r\n               renderTitle();\r\n            }\r\n         }\r\n         if (ok) {\r\n            if (game.info.mode !== 'skm' && game.info.mode !== 'ctf') { // If is not a team mode\r\n               org.color = orgColors[game.world.color][color]; // Set org color\r\n            } // Cannot change team in pause menu\r\n            org.skin = skin; // Set org skin\r\n            Labels = label; // Set labels setting (Boolean)\r\n            Messages = message; // Set messages setting (Boolean)\r\n            let skip = false;\r\n            for (let i = 0; i < game.players.length; i++) {\r\n               if (game.players[i] === socket.id) { // If still is a player\r\n                  state = 'game';\r\n                  skip = true;\r\n                  break;\r\n               }\r\n            }\r\n            if (!skip) {\r\n               for (let i = 0; i < game.spectators.length; i++) {\r\n                  if (game.spectators[i] === socket.id) {\r\n                     state = 'spectate'; // Must include spectate possibility in pause game; even though a spectator could never open pause game menu, he could be killed while in menu\r\n                     break;\r\n                  }\r\n               }\r\n            }\r\n            ReactDOM.render(<CanvasCont />, eid('cont'));\r\n         } else {\r\n            this.issue(issues);\r\n         }\r\n         break;\r\n      case 'pauseSpectate':\r\n         { // Game Closed\r\n            let closed = true;\r\n            for (let i = 0; i < games.length; i++) {\r\n               if (games[i].info.host === game.info.host) {\r\n                  closed = false;\r\n                  break;\r\n               }\r\n            }\r\n            if (closed) {\r\n               ok = false;\r\n               // issues.push({ ['']: 'The game has closed' });\r\n               alert('The game has closed');\r\n               renderTitle();\r\n            }\r\n         }\r\n         if (ok) {\r\n            Labels = label; // Set name labels setting (Boolean)\r\n            Messages = message; // Set messages setting (Boolean)\r\n            state = 'spectate';\r\n            ReactDOM.render(<CanvasCont />, eid('cont'));\r\n         } else {\r\n            this.issue(issues);\r\n         }\r\n         break;\r\n      case 'pauseTutorial':\r\n         if (ok) {\r\n            state = 'tutorial';\r\n            ReactDOM.render(<CanvasCont />, eid('cont'));\r\n         } else {\r\n            this.issue(issues);\r\n         }\r\n         break;\r\n   }\r\n}","class Text extends React.Component { // Each input-type component renders a table row containing the input type\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         value: props.value,\r\n         focused: false, // If the user is focused on the field\r\n         backgroundColor: 'rgb(255, 255, 255)' // Initialize backgroundColor style in state so it can be edited and re-rendered with React\r\n      };\r\n      this.style = {};\r\n      this.menuType = props.menuType;\r\n      this.instance = props.instance;\r\n      // this.index = menus[this.menuType].options.indexOf(capitalize(this.instance)); // Not currently in use\r\n\r\n      this.applyInstance = this.applyInstance.bind(this);\r\n      this.handleFocus = this.handleFocus.bind(this);\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.handleKeyDown = this.handleKeyDown.bind(this);\r\n   }\r\n   applyInstance() {\r\n      switch (this.instance) {\r\n         case 'password':\r\n            if (this.menuType === 'join' || this.menuType === 'spectate') // Caution: password instance exists in create and join/spectate menus\r\n               socket.emit('Ask Permission', { pass: this.state.value, info: game.info }); // Add player to permissed list on server (if there is no password for game)\r\n            break;\r\n      }\r\n   }\r\n\r\n   handleFocus(e) {\r\n      if (e.type === 'focus') {\r\n         this.setState({ focused: true, backgroundColor: 'rgb(230, 230, 230)' });\r\n      } else if (e.type === 'blur') {\r\n         this.setState({ focused: false, backgroundColor: 'rgb(255, 255, 255)' });\r\n      }\r\n   }\r\n   handleChange(e) { // e.target is dom element of target\r\n      this.props.update(this.instance, e.target.value);\r\n      if (this.instance === 'password' && (this.menuType === 'join' || this.menuType === 'spectate')) {\r\n         socket.emit('Ask Permission', { pass: e.target.value, info: game.info }); // Add player to permissed list on server (if correct password)\r\n      }\r\n   }\r\n   handleKeyDown(e) {\r\n      if (e.keyCode === 13) // If ENTER key is down\r\n         this.props.submit(this.menuType);\r\n   }\r\n\r\n   componentWillMount() {\r\n      this.applyInstance();\r\n   }\r\n   componentDidMount() {\r\n      this.props.update(this.instance, this.state.value);\r\n   }\r\n   componentWillReceiveProps(next) {\r\n      this.setState({ value: next.value });\r\n   }\r\n   render() {\r\n      let style = {};\r\n      for (let i in this.style) {\r\n         style[i] = this.style[i];\r\n      }\r\n      style.backgroundColor = this.state.backgroundColor;\r\n\r\n      return (\r\n         <input \r\n            id={this.instance + ' input'} \r\n            className='menuinput' \r\n            type='text' \r\n            value={this.state.value} \r\n            autoComplete='off' \r\n            style={style} \r\n            onFocus={this.handleFocus} \r\n            onBlur={this.handleFocus} \r\n            onChange={this.handleChange} \r\n            onKeyDown={this.handleKeyDown}\r\n         ></input>\r\n      );\r\n   }\r\n}\r\n","let currentMessage = () => {\r\n   let message;\r\n   if (state === 'game' || state === 'spectate') {\r\n      if (org.alive) {\r\n         if (game.rounds.util) {\r\n            if (game.rounds.waiting == true && game.rounds.delayed == false) {\r\n               if (game.rounds.min - game.info.count == 1) {\r\n                  message = 'Waiting for ' + (game.rounds.min - game.info.count) + ' more player to join';\r\n               } else {\r\n                  message = 'Waiting for ' + (game.rounds.min - game.info.count) + ' more players to join';\r\n               }\r\n            } else if (game.rounds.waiting == true && game.rounds.delayed == true) { // Delay at round start\r\n               message = 'Round begins in: ' + (1 + floor((game.rounds.rounddelay - (new Date() - game.rounds.delaystart)) / 1000)); // Add 1 to make ceiling function\r\n            } else if (game.rounds.waiting == false && game.rounds.delayed == true) { // Delay at round end\r\n               message = 'Round ends in: ' + (1 + floor((game.rounds.rounddelay - (new Date() - game.rounds.delaystart)) / 1000)); // Add 1 to make ceiling function\r\n            }\r\n         }\r\n      } else if (!org.alive) {\r\n         if (game.rounds.util) {\r\n            if (game.rounds.waiting === true && game.rounds.delayed === false) { // Waiting for more players to join, not counting down yet\r\n               if (game.rounds.min - game.info.count == 1) {\r\n                  message = 'Waiting for ' + (game.rounds.min - game.info.count) + ' more player to join';\r\n               } else {\r\n                  message = 'Waiting for ' + (game.rounds.min - game.info.count) + ' more players to join';\r\n               }\r\n            } else if (game.rounds.waiting === true && game.rounds.delayed === true) { // Enough players have joined, counting down\r\n               message = 'Round begins in: ' + (1 + floor((game.rounds.rounddelay - (new Date() - game.rounds.delaystart)) / 1000)); // Add 1 to make ceiling function\r\n            } else if (game.rounds.waiting === false && game.rounds.delayed === false) { // Round in progress\r\n               message = 'Wait for the round to complete';\r\n            } else if (game.rounds.waiting === false && game.rounds.delayed === true) {\r\n               message = 'Round ends in: ' + (1 + floor((game.rounds.rounddelay - (new Date() - game.rounds.delaystart)) / 1000)); // Add 1 to make ceiling function\r\n            }\r\n         } else {\r\n            message = 'Press \\'' + Controls.respawn.key + '\\' to Spawn';\r\n         }\r\n      }\r\n   } else if (state === 'tutorial') {\r\n      switch (tutorial.task) {\r\n         case 'move':\r\n            message = 'Use W-A-S-D (Recommended) or the arrow keys to move';\r\n            break;\r\n         case 'fullscreen':\r\n            message = 'Press F11 to enter fullscreen mode (Recommended)';\r\n            break;\r\n         case 'survive':\r\n            message = 'If the crosshair is too far from the organism, it will die';\r\n            break;\r\n         case 'extend':\r\n            message = 'Use the EXTEND ability to increase the organism\\'s size';\r\n            break;\r\n         case 'immortality':\r\n            message = 'The IMMORTALITY ability will stop the natural atrophe of cells';\r\n            break;\r\n         case 'neutralize':\r\n            message = 'NEUTRALIZE will create a bubble of safety from enemy attacks';\r\n            break;\r\n         case 'shoot':\r\n            message = 'To COMPRESS or FREEZE an enemy, press the ability key to launch a spore in the direction of the cursor\\nThen press it again to activate the ability';\r\n            break;\r\n         case 'compress':\r\n            message = 'On hit, COMPRESS shrinks the size of the targeted enemy\\nCOMPRESS the bot to progress';\r\n            break;\r\n         case 'freeze':\r\n            message = 'On hit, FREEZE halts all natural processes within the enemy organism\\nFREEZE the bot to progress';\r\n            break;\r\n         case 'toxin':\r\n            message = 'TOXIN creates a localized bubble in which only you can survive';\r\n            break;\r\n         case 'spore':\r\n            if (tutorial.stopped) {\r\n               message = 'Reactivate the ability to cause all spores to secrete an acid, killing enemy cells';\r\n            } else {\r\n               message = 'Use SPORE to jettison outer cells in all directions (Space Bar)';\r\n            }\r\n            break;\r\n         case 'secrete':\r\n            message = 'Reactivate the ability to cause all spores to secrete an acid, killing enemy cells';\r\n            break;\r\n         case 'done':\r\n            message = 'Now that you\\'re ready, press ESC to return to the menu';\r\n            break;\r\n      }\r\n   }\r\n   return message;\r\n};\r\n\r\nfunction renderMessages() {\r\n   if (Messages == true) {\r\n      let message = currentMessage();\r\n      if (message != undefined) {\r\n         let src = getSrc();\r\n         fill(src.world.background.r, src.world.background.g, src.world.background.b); // Message shadows are rendered in renderWorld()\r\n         stroke(src.world.border.color.r, src.world.border.color.g, src.world.border.color.b);\r\n         strokeWeight(1);\r\n         textFont('Helvetica');\r\n         textSize(14);\r\n         if (src.world.color == 'black') {\r\n            textStyle(NORMAL);\r\n         } else if (src.world.color == 'white') {\r\n            textStyle(BOLD);\r\n         }\r\n         let breaks = freq(message, '\\n');\r\n         let width = messageWidth(message);\r\n         rect(25 + width / 2, 25 + 9 * breaks, 25 + width, 26 + 18 * breaks);\r\n         fill(src.world.border.color.r, src.world.border.color.g, src.world.border.color.b); // Same color as border to maintain contrast with background\r\n         noStroke();\r\n         text(message, 25, 30);\r\n      }\r\n   }\r\n}\r\n\r\nlet messageWidth = message => {\r\n   let lines = message.split('\\n');\r\n   let count = lines.length;\r\n   let lengths = [];\r\n   for (let i = 0; i < count; i++) {\r\n      lengths.push(lines[i].length);\r\n   }\r\n   return textWidth(lines[lengths.indexOf(max(lengths))]);\r\n};","var title; // Initialize in global scope\r\nvar Title = function() {\r\n   state = 'title';\r\n   this.src = 'title';\r\n   this.margin = _margin;\r\n   this.world = new World({ width: window.innerWidth - this.margin * 2, height: window.innerHeight - this.margin * 2, type: 'rectangle', color: 'black', x: this.margin, y: this.margin });\r\n   this.orgs = [];\r\n   this.abilities = [];\r\n   let quadrants = [];\r\n   for (let i = 0; i < _dummies; i++) {\r\n      let colors = [];\r\n      for (let j in orgColors.black) {\r\n         colors.push(orgColors.black[j]);\r\n      }\r\n      let color = random(colors);\r\n      let arr = skins.slice();\r\n      arr.push('none');\r\n      let skin = random(arr);\r\n      let xoff;\r\n      let yoff;\r\n      let quadrant;\r\n      do {\r\n         quadrant = random();\r\n         if (quadrant < .25) {\r\n            quadrant = 1;\r\n            xoff = 0;\r\n            yoff = 0;\r\n         } else if (quadrant < .5) {\r\n            quadrant = 2;\r\n            xoff = 1;\r\n            yoff = 0;\r\n         } else if (quadrant < .75) {\r\n            quadrant = 3;\r\n            xoff = 1;\r\n            yoff = 1;\r\n         } else if (quadrant < 1) {\r\n            quadrant = 4;\r\n            xoff = 0;\r\n            yoff = 1;\r\n         }\r\n         quadrants[i] = quadrant;\r\n      } while (freq(quadrants, quadrant) > floor(_dummies / 4) + 1);\r\n      let pos = {\r\n         x: random(this.world.x + _cellwidth + this.world.width / 2 * xoff, this.world.x - _cellwidth + this.world.width / 2 * (xoff + 1)), // 80 is edge buffer\r\n         y: random(this.world.y + _cellwidth + this.world.height / 2 * yoff, this.world.y - _cellwidth + this.world.height / 2 * (yoff + 1))\r\n      };\r\n      this.orgs[i] = new Org({ player: i, color: color, skin: skin, team: null, pos: pos, title: true });\r\n      this.orgs[i].cells[0] = new Cell(this.orgs[i].pos.x, this.orgs[i].pos.y, this.orgs[i]); // Title must exist to create new Cell()\r\n      this.orgs[i].count++;\r\n      this.abilities[i] = new Ability({ player: i });\r\n   }\r\n   this.menu = new TitleMenu(this.world.x + this.world.width / 2, this.world.y + this.world.height / 2);\r\n\r\n   /**\r\n    * Interval to run title screen animations\r\n    * @return void\r\n    */\r\n   this.interval = setInterval(() => {\r\n      { // Render\r\n         // Background\r\n         background(this.world.backdrop.r, this.world.backdrop.g, this.world.backdrop.b);\r\n\r\n         // Shadows\r\n         fill(this.world.backdrop.r - 20, this.world.backdrop.g - 20, this.world.backdrop.b - 20);\r\n         noStroke();\r\n         rect(this.world.x + this.world.width / 2 + 7, this.world.y + this.world.height / 2 + 6, this.world.width, this.world.height); // World\r\n\r\n         // World\r\n         fill(this.world.background.r, this.world.background.g, this.world.background.b);\r\n         stroke(this.world.border.color.r, this.world.border.color.g, this.world.border.color.b);\r\n         strokeWeight(1);\r\n         rect(this.world.x + this.world.width / 2, this.world.y + this.world.height / 2, this.world.width, this.world.height);\r\n\r\n         // Orgs\r\n         renderOrgs();\r\n      } { // Calculate\r\n         for (let i = 0; i < this.orgs.length; i++) {\r\n            this.orgs[i].grow();\r\n         }\r\n      }\r\n   }, _orgfrequency);\r\n\r\n   /**\r\n    * Resize the title screen to fit the window dimensions\r\n    * @param  number x offset in x-direction from left of window\r\n    * @param  number y offset in y-direction from top of window\r\n    * @param  number w screen width (pixels)\r\n    * @param  number h screen height (pixels)\r\n    * @return void\r\n    */\r\n   this.resize = (x, y, w, h) => {\r\n      center.x = window.innerWidth / 2;\r\n      center.y = window.innerHeight / 2;\r\n      let old_x = this.world.x - this.margin;\r\n      let old_y = this.world.y - this.margin;\r\n      for (let i = 0; i < this.orgs.length; i++) {\r\n         this.orgs[i].pos.x = (this.orgs[i].pos.x - this.margin - old_x) / this.world.width * (w - this.margin * 2) + (this.margin + x); // Reposition org correctly\r\n         this.orgs[i].pos.y = (this.orgs[i].pos.y - this.margin - old_y) / this.world.height * (h - this.margin * 2) + (this.margin + y); // Must be before new world creation so can find percentage of former world size\r\n         this.orgs[i].cells = [];\r\n         this.orgs[i].cells[0] = new Cell(this.orgs[i].pos.x, this.orgs[i].pos.y, this.orgs[i]);\r\n         this.orgs[i].count = 1;\r\n      }\r\n      this.world = new World({ width: w - this.margin * 2, height: h - this.margin * 2, type: 'rectangle', color: 'black', x: x + this.margin, y: y + this.margin });\r\n      if (state === 'title') {\r\n         renderTitle();\r\n      } else if (state === 'browser') {\r\n         renderBrowser();\r\n      }\r\n   };\r\n};\r\n\r\nclass TitleMenu extends React.Component {\r\n   constructor(props) {\r\n      super(props);\r\n   }\r\n\r\n   handleClick(btn) {\r\n      switch (btn) {\r\n         case 'host':\r\n            renderMenu('create');\r\n            break;\r\n         case 'join':\r\n            renderBrowser();\r\n            break;\r\n         case 'tutorial':\r\n            renderTutorial();\r\n            tutorial = new Tutorial();\r\n            break;\r\n      }\r\n   }\r\n\r\n   render() {\r\n      let x = center.x;\r\n      let y = center.y;\r\n      let mWidth = 170; // Menu Width\r\n      let mHeight = 150;\r\n      let bWidth = mWidth * 2 / 3; // Button Width\r\n      let bHeight = 25;\r\n      let style = {\r\n         menu: {\r\n            left: (x - mWidth / 2) + 'px',\r\n            top: (y - mHeight / 2) + 'px'\r\n         },\r\n         host: {\r\n            left: (x - bWidth / 2) + 'px',\r\n            top: (y - mHeight / 2 + 29) + 'px'\r\n         },\r\n         join: {\r\n            left: (x - bWidth / 2) + 'px',\r\n            top: (y - mHeight / 2 + 29 + bHeight * 3 / 2) + 'px'\r\n         },\r\n         tutorial: {\r\n            left: (x - bWidth / 2) + 'px',\r\n            top: (y - mHeight / 2 + 29 + bHeight * 3 / 2 * 2) + 'px'\r\n         }\r\n      };\r\n      return (\r\n         <div id='Title Menu' style={style.menu}>\r\n            <div id='Title Host Button' className='Title Menu Button' onClick={() => this.handleClick('host')} style={style.host}>Host</div>\r\n            <div id='Title Join Button' className='Title Menu Button' onClick={() => this.handleClick('join')} style={style.join}>Join</div>\r\n            <div id='Title Tutorial Button' className='Title Menu Button' onClick={() => this.handleClick('tutorial')} style={style.tutorial}>Tutorial</div>\r\n         </div>\r\n      ); // handleClick does not need to be bound if arrow function is used; without using arrow function, 'host'/'join'/'tutorial' properties could not be sent\r\n   }\r\n}\r\n\r\nfunction renderTitle() {\r\n   state = 'title';\r\n   if (org) org.clearIntervals(); // If global org variable exists (such as after exiting a game) clear its interval(s) so as to not interfere with title animations\r\n   ability = new Ability({ player: socket.id });\r\n   let a = ReactDOM.render( // Title rendering placed within ReactDOM.render() so Title() can be used for title and retain this. namespace\r\n      <div id='title'>\r\n         <CanvasCont />\r\n         <TitleMenu />\r\n      </div>\r\n   , eid('cont')); // TitleMenu will not retain its this. namespace\r\n}\r\n\r\nvar Shade = function() { // White layer behind menus allows user to see background but unfocuses it\r\n   let style = {\r\n      position: 'fixed',\r\n      left: '0px',\r\n      top: '0px',\r\n      width: '100%',\r\n      height: '100%',\r\n      backgroundColor: 'rgb(255, 255, 255)',\r\n      opacity: '.5',\r\n      zIndex: '-1'\r\n   };\r\n   return (\r\n      <div id=\"shade\" style={style}></div>\r\n   );\r\n};","var World = function(datA) { // datA: { width: , height: , type: , color: , x: , y: }\r\n   let data = datA;\r\n   this.host = socket.id; // Cannot call game.info.host since game is not fully constructed yet; World() can only be called by host, so socket.id is ok\r\n   this.width = data.width;\r\n   this.height = data.height;\r\n   if (data.x != undefined) { // Coordinates are for top left corner\r\n      this.x = data.x;\r\n   } else {\r\n      this.x = 0;\r\n   }\r\n   if (data.y != undefined) {\r\n      this.y = data.y;\r\n   } else {\r\n      this.y = 0;\r\n   }\r\n   this.type = data.type\r\n   this.color = data.color;\r\n   for (let i in worldColors) {\r\n      if (i == this.color) {\r\n         this.background = worldColors[i];\r\n         break;\r\n      }\r\n   }\r\n   this.interval = undefined;\r\n   this.border = {\r\n      color: undefined,\r\n      weight: 1\r\n   };\r\n   this.backdrop = { r: 70, g: 70, b: 70 };\r\n   this.border.weight = 1;\r\n   if (this.color == 'black') {\r\n      this.border.color = { r: 255, g: 255, b: 255 };\r\n   } else if (this.color == 'white') {\r\n      this.border.color = { r: 0, g: 0, b: 0 };\r\n   }\r\n};\r\n\r\nfunction renderWorld() {\r\n   // Background\r\n   background(game.world.backdrop.r, game.world.backdrop.g, game.world.backdrop.b);\r\n\r\n   // Shadows\r\n   fill(game.world.backdrop.r - 20, game.world.backdrop.g - 20, game.world.backdrop.b - 20);\r\n   noStroke();\r\n   { // World\r\n      if (game.world.type == 'rectangle') { // World\r\n         rect(game.world.x + game.world.width / 2 + 7, game.world.y + game.world.height / 2 + 6, game.world.width, game.world.height);\r\n      } else if (game.world.type == 'ellipse') {\r\n         ellipse(game.world.x + game.world.width / 2 + 5, game.world.y + game.world.height / 2 + 4, game.world.width / 2, game.world.height / 2);\r\n      }\r\n   }\r\n   { // Leaderboard\r\n      translate(org.off.x, org.off.y); // Shadows in renderWorld() so it will render behind world\r\n      rectMode(CORNER);\r\n      game.board.y = game.board.marginTop; // Leaderboard Head\r\n      switch (game.info.mode) {\r\n         case 'ffa':\r\n            game.board.x = width - (game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.threeWidth) - game.board.marginRight;\r\n            rect(game.board.x + 4, game.board.y + 3, game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.threeWidth, game.board.rowHeight);\r\n            game.board.count = min(game.board.show, game.board.list.length);\r\n            break;\r\n         case 'skm':\r\n            game.board.x = width - (game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.threeWidth) - game.board.marginRight;\r\n            rect(game.board.x + 4, game.board.y + 3, game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.threeWidth, game.board.rowHeight);\r\n            game.board.count = game.teams.length;\r\n            break;\r\n         case 'srv':\r\n            game.board.x = width - (game.board.nameWidth + game.board.oneWidth + game.board.twoWidth) - game.board.marginRight;\r\n            rect(game.board.x + 4, game.board.y + 3, game.board.nameWidth + game.board.oneWidth + game.board.twoWidth, game.board.rowHeight);\r\n            game.board.count = min(game.board.show, game.board.list.length);\r\n            break;\r\n         case 'ctf':\r\n            game.board.x = width - (game.board.nameWidth + game.board.oneWidth + game.board.twoWidth) - game.board.marginRight;\r\n            rect(game.board.x + 4, game.board.y + 3, game.board.nameWidth + game.board.oneWidth + game.board.twoWidth, game.board.rowHeight);\r\n            game.board.count = game.teams.length;\r\n            break;\r\n         case 'inf':\r\n            game.board.x = width - (game.board.nameWidth + game.board.oneWidth) - game.board.marginRight;\r\n            rect(game.board.x + 4, game.board.y + 3, game.board.nameWidth + game.board.oneWidth, game.board.rowHeight);\r\n            game.board.count = min(game.board.show, game.board.list.length);\r\n            break;\r\n         case 'kth':\r\n            game.board.x = width - (game.board.nameWidth + game.board.oneWidth + game.board.twoWidth) - game.board.marginRight;\r\n            rect(game.board.x + 4, game.board.y + 3, game.board.nameWidth + game.board.oneWidth + game.board.twoWidth, game.board.rowHeight);\r\n            game.board.count = min(game.board.show, game.board.list.length);\r\n            break;\r\n      }\r\n      var a = 0;\r\n      for (let i = 0; i < game.board.count; i++) { // Leaderboard Body\r\n         if (game.info.mode != 'skm' && game.info.mode != 'ctf') { // If not a team mode\r\n            var spectator = false;\r\n            for (let j = 0; j < game.spectators.length; j++) {\r\n               if (game.board.list[i].player == game.spectators[j]) {\r\n                  spectator = true;\r\n                  break;\r\n               }\r\n            }\r\n            if (spectator == true) {\r\n               if (i < game.board.count) {\r\n                  if (game.board.count < game.info.count) {\r\n                     game.board.count++; // Extend leaderboard length to include the next player\r\n                     i++; // Do not render leaderboard status if player is a spectator\r\n                  } else {\r\n                     continue;\r\n                  }\r\n               }\r\n            }\r\n         }\r\n         switch (game.info.mode) {\r\n            case 'ffa':\r\n               rect(game.board.x + 4, game.board.y + 3 + (a + 1) * game.board.rowHeight, game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.threeWidth, game.board.rowHeight);\r\n               break;\r\n            case 'skm':\r\n               rect(game.board.x + 4, game.board.y + 3 + (a + 1) * game.board.rowHeight, game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.threeWidth, game.board.rowHeight);\r\n               break;\r\n            case 'srv':\r\n               rect(game.board.x + 4, game.board.y + 3 + (a + 1) * game.board.rowHeight, game.board.nameWidth + game.board.oneWidth + game.board.twoWidth, game.board.rowHeight);\r\n               break;\r\n            case 'ctf':\r\n               rect(game.board.x + 4, game.board.y + 3 + (a + 1) * game.board.rowHeight, game.board.nameWidth + game.board.oneWidth + game.board.twoWidth, game.board.rowHeight);\r\n               break;\r\n            case 'inf':\r\n               rect(game.board.x + 4, game.board.y + 3 + (a + 1) * game.board.rowHeight, game.board.nameWidth + game.board.oneWidth, game.board.rowHeight);\r\n               break;\r\n            case 'kth':\r\n               rect(game.board.x + 4, game.board.y + 3 + (a + 1) * game.board.rowHeight, game.board.nameWidth + game.board.oneWidth + game.board.twoWidth, game.board.rowHeight);\r\n               break;\r\n         }\r\n         a++;\r\n      }\r\n      translate(-org.off.x, -org.off.y);\r\n      rectMode(CENTER);\r\n   } { // Messages\r\n      translate(org.off.x, org.off.y);\r\n      if (Messages == true) {\r\n         textFont('Helvetica');\r\n         textStyle(NORMAL);\r\n         let message = currentMessage();\r\n         if (message != undefined) {\r\n            let breaks = freq(message, '\\n');\r\n            let width = messageWidth(message);\r\n            rect(5 + 25 + width / 2, 4 + 25 + 9 * breaks, 25 + width, 26 + 18 * breaks);\r\n         }\r\n      }\r\n      translate(-org.off.x, -org.off.y);\r\n   }\r\n\r\n   // World\r\n   fill(game.world.background.r, game.world.background.g, game.world.background.b);\r\n   stroke(game.world.border.color.r, game.world.border.color.g, game.world.border.color.b);\r\n   strokeWeight(game.world.border.weight);\r\n   if (game.world.type == 'rectangle') {\r\n      rect(game.world.x + game.world.width / 2, game.world.y + game.world.height / 2, game.world.width, game.world.height); // World border\r\n   } else if (game.world.type == 'ellipse') {\r\n      ellipse(game.world.x + game.world.width / 2, game.world.y + game.world.height / 2, game.world.width / 2, game.world.height / 2); // World border\r\n   }\r\n\r\n   // CTF\r\n   if (game.info.mode == 'ctf') {\r\n      // Bases\r\n      for (let i = 1; i < game.teams.length + 1; i++) {\r\n         let color = teamColorDef[teamColors[i - 1]];\r\n         stroke(orgColors[game.world.color][color].r, orgColors[game.world.color][color].g, orgColors[game.world.color][color].b);\r\n         strokeWeight(3);\r\n         let bin = i.toString(2); // Convert i to binary string\r\n         if (bin.length < 2) {\r\n            bin = '0' + bin; // Add zero to front to form equivalent two-length binary number\r\n         }\r\n         let x = game.world.x + (game.world.width * parseInt(bin[bin.length - 1]));\r\n         let y = game.world.y + (game.world.height * parseInt(bin[bin.length - 2]));\r\n         let theta;\r\n         if (bin == '01') {\r\n            theta = 270;\r\n         } else if (bin == '10') {\r\n            theta = 90;\r\n         } else if (bin == '11') {\r\n            theta = 180;\r\n         } else if (bin == '100') {\r\n            theta = 0;\r\n         }\r\n         let l = 150;\r\n         if (game.world.type == 'rectangle') {\r\n            arc(x, y, l, l, -theta + 1, -theta + 89); // -1 to avoid world border overlap with a degree cushion either side\r\n         } else if (game.world.type == 'ellipse') {\r\n            let r = game.world.width / 2;\r\n            let h = x + cos(-theta + 45) * r * (root2 - 1); // l = r(root2 - 1); length from circle to square corner\r\n            let k = y + sin(-theta + 45) * r * (root2 - 1); // yoff = l*sin(-theta + 45); -theta + 45 gives angle to center\r\n            let a = game.world.x + r; // a is world center x\r\n            let b = game.world.y + r; // b is world center y\r\n            let diffs = [];\r\n            let points = [ /*{ p: Number, q: Number }*/ ];\r\n            for (let j = 0; j < 720; j++) {\r\n               let alpha = j;\r\n               let p = h + l * cos(alpha);\r\n               let q = k + l * sin(alpha);\r\n               let d = abs(sqrt(sq(p - a) + sq(q - b)) - r); // Calculate distance of point on base circle to world circle\r\n               diffs.push(d); // Store all distances to array\r\n               points.push({ p: p, q: q }); // Store all points to array\r\n            }\r\n            let point = points[diffs.indexOf(min(diffs))]; // Find closest point to world circle (points and diffs are analogous)\r\n            let phi = atan(abs(point.q - k) / abs(point.p - h));\r\n            if (phi > 45) {\r\n               phi = 90 - phi;\r\n            }\r\n            arc(h, k, l, l, -theta - phi + 1, -theta + 90 + phi - 1); // -1 to avoid world border overlap\r\n         }\r\n      }\r\n      // Flag\r\n      noFill();\r\n      stroke(game.world.border.color.r, game.world.border.color.g, game.world.border.color.b);\r\n      strokeWeight(2);\r\n      line(game.flag.x - game.flag.width / 2, game.flag.y - game.flag.height / 2, game.flag.x - game.flag.width / 2, game.flag.y + game.flag.height / 2);\r\n      fill(game.flag.color.r, game.flag.color.g, game.flag.color.b);\r\n      strokeWeight(1);\r\n      triangle(game.flag.x - game.flag.width / 2, game.flag.y - game.flag.height / 2, game.flag.x - game.flag.width / 2, game.flag.y, game.flag.x + game.flag.width / 2, game.flag.y - game.flag.height / 4);\r\n   }\r\n}"]}