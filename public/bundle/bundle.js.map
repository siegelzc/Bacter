{"version":3,"sources":["../js/abilities.js","../js/board.js","../js/browser.js","../js/canvas.js","../js/config.js","../js/flag.js","../js/game.js","../js/index.js","../js/items.js","../js/menus/Button.js","../js/menus/List.js","../js/menus/Menu.js","../js/menus/MenuFooter.js","../js/menus/MenuSubmit.js","../js/menus/Num.js","../js/menus/Radio.js","../js/menus/Radios.js","../js/menus/Text.js","../js/menus/menus.js","../js/menus/submit.js","../js/messages.js","../js/org.js","../js/run.js","../js/socket.js","../js/title.js","../js/tutorial.js","../js/world.js"],"names":[],"mappings":"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","file":"bundle.js","sourcesContent":["var ability;\nvar Ability = function(datA) { // datA: { player: }\n   let data = datA;\n   this.player = data.player;\n   this.auto = false;\n   this.extend = {\n      value: false,\n      activated: false,\n      can: false,\n      i: 0,\n      j: 0,\n      start: undefined,\n      end: undefined,\n      cooling: false,\n      time: 4500,\n      cooldown: 4000\n   };\n   this.compress = {\n      value: false,\n      applied: false,\n      activated: false,\n      can: false,\n      i: 0,\n      j: 1,\n      timeout: undefined,\n      start: undefined,\n      end: undefined,\n      cooling: false,\n      time: 3500,\n      cooldown: 4000\n   };\n   // speed: { // Not updated\n   // \tvalue: false, \n   // \tactivated: false, \n   // \ti: 0, \n   // \tj: 0, \n   // \tfactor: 2, \n   // \ttimeout: undefined, \n   // \ttime: 5000\n   // };\n   // slow: { // Not updated\n   // \tvalue: false, \n   // \tactivated: false, \n   // \ti: 0, \n   // \tj: 1, \n   // \tfactor: 2, \n   // \ttimeout: undefined, \n   // \ttime: 5000\n   // };\n   this.immortality = {\n      value: false,\n      activated: false,\n      can: false,\n      i: 1,\n      j: 0,\n      timeout: undefined,\n      start: undefined,\n      end: undefined,\n      cooling: false,\n      time: 3500,\n      cooldown: 6000\n   };\n   this.freeze = {\n      value: false,\n      applied: false,\n      activated: false,\n      can: false,\n      i: 1,\n      j: 1,\n      timeout: undefined,\n      start: undefined,\n      end: undefined,\n      cooling: false,\n      time: 4000,\n      cooldown: 6000\n   };\n   // stimulate: {\n   // \tvalue: false, \n   // \tactivated: false, \n   // \tcan: false, \n   // \ti: 2, \n   // \tj: 0, \n   // \tfactor: 9, // Factor must be equal to that of poison\n   // \ttimeout: undefined, \n   // \tstart: undefined, \n   // \tend: undefined, \n   // \tcooling: false, \n   // \ttime: 3000, \n   // \tcooldown: 5000\n   // }, \n   // poison: {\n   // \tvalue: false, \n   // \tactivated: false, \n   // \tcan: false, \n   // \ti: 2, \n   // \tj: 1, \n   // \tfactor: 9, // Factor must be equal to that of stimulate\n   // \ttimeout: undefined, \n   // \tstart: undefined, \n   // \tend: undefined, \n   // \tcooling: false, \n   // \ttime: 3000, \n   // \tcooldown: 5000\n   // }, \n   this.neutralize = {\n      value: false,\n      activated: false,\n      can: false,\n      i: 2,\n      j: 0,\n      radius: 60,\n      color: { r: 0, g: 179, b: 12 },\n      weight: 3,\n      x: undefined,\n      y: undefined,\n      timeout: undefined,\n      start: undefined,\n      end: undefined,\n      cooling: false,\n      time: 3500,\n      cooldown: 6500\n   };\n   this.toxin = {\n      value: false,\n      activated: false,\n      can: false,\n      i: 2,\n      j: 1,\n      radius: 60,\n      color: { r: 255, g: 111, b: 92 },\n      weight: 3,\n      x: undefined,\n      y: undefined,\n      timeout: undefined,\n      start: undefined,\n      end: undefined,\n      cooling: false,\n      time: 4000,\n      cooldown: 6000\n   };\n   this.spore = {\n      value: false,\n      activated: false,\n      i: 3,\n      j: 0,\n      interval: undefined,\n      speed: 6,\n      spores: [],\n      count: 0,\n      can: false,\n      timeout: undefined,\n      start: undefined,\n      end: undefined,\n      cooling: false,\n      time: 1700,\n      cooldown: 7500 // 7500 default\n   };\n   this.secrete = {\n      value: false,\n      activated: false,\n      i: 3,\n      j: 1,\n      color: { r: undefined, g: undefined, b: undefined },\n      radius: _cellwidth / cos45 * 2.9,\n      can: false,\n      timeout: undefined,\n      start: undefined,\n      end: undefined,\n      time: 800\n   };\n   this.shoot = {\n      value: [false, false, false],\n      can: [true, true, true],\n      secrete: [{}, {}, {}\n         // { // Sets values on use\n         // \tvalue: false, \n         // \tcolor: undefined, \n         // \tradius: _cellwidth / cos45 * 2.7 / 2, // Half 'secrete'\n         // \thit: false, \n         // \ttimeout: undefined, \n         // \tstart: undefined, \n         // \tend: undefined, \n         // \ttime: 800 // Same as 'secrete'\n         // }\n      ],\n      spore: [undefined, undefined, undefined],\n      speed: 5,\n      interval: [undefined, undefined, undefined],\n      timeout: [undefined, undefined, undefined],\n      start: [undefined, undefined, undefined],\n      end: [undefined, undefined, undefined],\n      time: 1500,\n      cooling: [false, false, false],\n      cooldown: [2000, 2000, 2000]\n   };\n   this.tag = {\n      value: false,\n      activated: false,\n      i: 0,\n      j: 1,\n      can: false,\n      timeout: undefined,\n      start: undefined,\n      end: undefined,\n      time: 0,\n      cooldown: 5000\n   };\n};\n\nfunction shoot(I, J) { // Both parameters are required\n   if (ability.shoot.value[I] == false && ability.shoot.can[I] == true) { // If not currently shooting and if can shoot specified ability (Should have been checked before this point)\n      ability.shoot.value[I] = true;\n      ability.shoot.can[I] = false;\n      ability.shoot.secrete[I].value = false;\n      clearTimeout(ability.shoot.timeout[I]); // Reset timeout\n      ability.shoot.start[I] = new Date(); // Set start time\n\n      // Get Spore\n      let regions = getRegionInfo(org); // Get region data\n      let theta;\n      if (mouseX == Infinity || mouseY == Infinity) {\n         let mpos = getMpos();\n         mouseX = mpos.x;\n         mouseY = mpos.y;\n      }\n      if (state != 'tutorial') {\n         theta = atan((mouseY - center.y) / (mouseX - center.x)); // Get angle (theta) from mouse pointer\n         if (mouseX < center.x) { // If mouse is in second or third quadrants\n            theta += 180; // Correct theta for negative x\n         }\n      } else {\n         theta = atan((mouseY - org.pos.y) / (mouseX - org.pos.x));\n         if (mouseX < org.pos.x) { // If mouse is in second or third quadrants\n            theta += 180; // Correct theta for negative x\n         }\n      }\n      let deltas = [];\n      for (let i = 0; i < regions.exposed.length; i++) { // Loop through exposed cells\n         let phi = atan((regions.exposed[i].y - org.y()) / (regions.exposed[i].x - org.x())); // Get angle (phi) of each exposed cell\n         if (regions.exposed[i].x - org.x() < 0) {\n            phi += 180;\n         }\n         deltas.push(abs(theta - phi)); // Calculate difference between theta and phi and collect in 'deltas' array\n      }\n      let min;\n      for (let i = 0; i < deltas.length; i++) {\n         if (i == 0) {\n            min = deltas[i]; // Set first delta as min for comparison value\n            continue;\n         } else if (min > deltas[i]) { // Calculate minimum delta\n            min = deltas[i];\n         }\n      }\n      ability.shoot.spore[I] = regions.exposed[deltas.indexOf(min)]; // Set spore as the cell with angle phi closest to mouse angle theta\n      for (let i = 0; i < org.count; i++) {\n         if (ability.shoot.spore[I].x == org.cells[i].x && ability.shoot.spore[I].y == org.cells[i].y) { // Find spore in org\n            org.cells.splice(i, 1); // Remove spore cell from org\n            org.count--;\n            i--;\n            break;\n         }\n      }\n      ability.shoot.spore[I].speed = ability.shoot.speed;\n      ability.shoot.spore[I].theta = theta;\n\n      // Interval\n      ability.shoot.interval[I] = () => {\n         ability.shoot.spore[I].x += ability.shoot.spore[I].speed * cos(ability.shoot.spore[I].theta);\n         ability.shoot.spore[I].y += ability.shoot.spore[I].speed * sin(ability.shoot.spore[I].theta);\n         socket.emit('Ability', ability);\n      };\n\n      // Timeout\n      ability.shoot.timeout[I] = setTimeout(() => {\n         if (ability.shoot.value[I] == true && ability.shoot.secrete[I].value == false) {\n            ability.shoot.value[I] = false;\n            ability.shoot.spore[I] = undefined;\n            ability.shoot.cooling[I] = true;\n            ability.shoot.end[I] = new Date();\n            ability.shoot.secrete[I].end = new Date();\n            socket.emit('Ability', ability);\n         }\n      }, ability.shoot.time);\n\n   } else if (ability.shoot.value[I] == true) { // If currently shooting (secrete)\n      ability.shoot.end[I] = new Date();\n      ability.shoot.value[I] = false;\n      ability.shoot.secrete[I].radius = _cellwidth / cos45 * 2.9 / 2; // Not predefined (Half secrete)\n      ability.shoot.secrete[I].hit = false;\n      ability.shoot.secrete[I].time = 800; // Not predefined (Same as secrete)\n      clearTimeout(ability.shoot.timeout[I]);\n      ability.shoot.secrete[I].start = new Date();\n      ability.shoot.secrete[I].color = org.color;\n\n      // Hit (Apply Ability) (Hit detection on local machine)\n      let src = getSrc();\n      for (let i = 0; i < src.orgs.length; i++) {\n         if (src.orgs[i].player == socket.id || org.team && src.orgs[i].team === org.team) { // Do not apply ability to self or teammate\n            continue;\n         }\n         for (let j = 0; j < src.orgs[i].count; j++) {\n            if (sqrt(sq(src.orgs[i].cells[j].x - ability.shoot.spore[I].x) + sq(src.orgs[i].cells[j].y - ability.shoot.spore[I].y)) < ability.shoot.secrete[I].radius) { // If center of cell is within circle (subject to change)\n               if (src.abilities[i].neutralize.value == true && sqrt(sq(src.orgs[i].cells[j].x - src.abilities[i].neutralize.x) + sq(src.orgs[i].cells[j].y - src.abilities[i].neutralize.y)) <= src.abilities[i].neutralize.radius) { // If center of cell is within neutralize circle\n                  continue;\n               }\n               use(I, J, src.orgs[i].player); // Apply ability to target\n               ability.shoot.secrete[I].hit = true;\n               break;\n            }\n         }\n      }\n\n      ability.shoot.secrete[I].value = true; // Value after hit detection so 'grow' hit detection does not run before initial\n      socket.emit('Ability', ability);\n      ability.shoot.secrete[I].timeout = setTimeout(() => {\n         ability.shoot.secrete[I].value = false;\n         ability.shoot.secrete[I].end = new Date(); { // Copy of 'shoot' timeout\n            ability.shoot.value[I] = false;\n            ability.shoot.spore[I] = undefined;\n            ability.shoot.cooling[I] = true;\n            ability.shoot.end[I] = new Date();\n         }\n         clearTimeout(ability.shoot.timeout[I]);\n         ability.shoot.timeout[I] = undefined;\n         socket.emit('Ability', ability);\n      }, ability.shoot.secrete[I].time);\n   }\n}\n\nfunction use(I, J, playeR) {\n   if (I == 0) {\n      if (J == 0) {\n         if (ability.extend.activated == true) {\n            extend(playeR);\n         }\n      } else if (J == 1) {\n         if (ability.compress.activated == true) {\n            compress(playeR);\n         } else if (ability.tag.activated == true) {\n            tag(playeR);\n         }\n      }\n   } else if (I == 1) {\n      if (J == 0) {\n         if (ability.immortality.activated == true) {\n            immortality(playeR);\n         }\n      } else if (J == 1) {\n         if (ability.freeze.activated == true) {\n            freeze(playeR);\n         }\n      }\n   } else if (I == 2) {\n      if (J == 0) {\n         if (ability.neutralize.activated == true) {\n            neutralize(playeR);\n         }\n      } else if (J == 1) {\n         if (ability.toxin.activated == true) {\n            toxin(playeR);\n         }\n      }\n   } else if (I == 3) {\n      if (J == 0) {\n         if (ability.spore.activated == true) {\n            spore(playeR);\n         }\n      } else if (J == 1) {\n         if (ability.secrete.activated == true) {\n            secrete(playeR);\n         }\n      }\n   }\n}\n\nfunction tag(playeR) {\n   socket.emit('Tag', playeR);\n   ability.tag.can = false;\n   ability.tag.start = new Date();\n   socket.emit('Ability', ability);\n   setTimeout(() => {\n      ability.tag.end = new Date();\n      ability.tag.cooling = true;\n   }, ability.tag.time);\n}\n\nfunction extend(playeR) {\n   ability.extend.can = false;\n   socket.emit('Extend', playeR);\n}\n\nfunction compress(playeR) {\n   let src = getSrc();\n   if (src.src == 'tutorial') { // Since orgs are locally grown in tutorial, abilities must be locally applied\n      for (let i = 0; i < src.abilities.length; i++) {\n         if (src.abilities[i].player == playeR) {\n            src.abilities[i].compress.value = true;\n            clearTimeout(src.abilities[i].compress.timeout);\n            src.abilities[i].compress.timeout = setTimeout(() => {\n               src.abilities[i].compress.value = false;\n            }, src.abilities[i].compress.time);\n         }\n      }\n   } else {\n      socket.emit('Compress', playeR);\n   }\n   ability.compress.applied = true;\n   ability.compress.can = false; // Redundancy\n   ability.compress.start = new Date();\n   socket.emit('Ability', ability);\n   setTimeout(() => {\n      ability.compress.end = new Date();\n      ability.compress.applied = false;\n      ability.compress.cooling = true;\n   }, ability.compress.time);\n}\n\n// function speed(playeR) {\n// \tsocket.emit('Speed', playeR);\n// }\n\n// function slow(playeR) {\n// \tsocket.emit('Slow', playeR);\n// }\n\nfunction immortality(playeR) {\n   ability.immortality.can = false;\n   socket.emit('Immortality', playeR);\n}\n\nfunction freeze(playeR) {\n   let src = getSrc();\n   if (src.src == 'tutorial') { // Since orgs are locally grown in tutorial, abilities must be locally applied\n      for (let i = 0; i < src.abilities.length; i++) {\n         if (src.abilities[i].player == playeR) {\n            src.abilities[i].freeze.value = true;\n            clearTimeout(src.abilities[i].freeze.timeout);\n            src.abilities[i].freeze.timeout = setTimeout(() => {\n               src.abilities[i].freeze.value = false;\n            }, src.abilities[i].freeze.time);\n         }\n      }\n   } else {\n      socket.emit('Freeze', playeR);\n   }\n   ability.freeze.applied = true;\n   ability.freeze.can = false; // Redundancy\n   ability.freeze.start = new Date();\n   socket.emit('Ability', ability);\n   setTimeout(() => {\n      ability.freeze.end = new Date();\n      ability.freeze.applied = false;\n      ability.freeze.cooling = true;\n   }, ability.freeze.time);\n}\n\n// function stimulate(playeR) {\n// \tability.stimulate.can = false;\n// \tsocket.emit('Stimulate', playeR);\n// }\n\n// function poison(playeR) {\n// \tsocket.emit('Poison', playeR);\n// \tability.poison.can = false; // Redundancy\n// \tability.poison.start = new Date();\n// \tsocket.emit('Ability', ability);\n// \tsetTimeout(() => {\n// \t\tability.poison.end = new Date();\n// \t\tability.poison.cooling = true;\n// \t}, ability.poison.time);\n// }\n\nfunction neutralize(playeR) {\n   socket.emit('Neutralize', playeR);\n   ability.neutralize.can = false;\n}\n\nfunction toxin(playeR) {\n   socket.emit('Toxin', playeR);\n   ability.toxin.can = false;\n}\n\nfunction spore() {\n   if (ability.spore.can == true) { // If spore is allowed\n      ability.spore.value = true;\n      clearTimeout(ability.spore.timeout);\n      ability.spore.can = false;\n      ability.secrete.can = true;\n      ability.spore.start = new Date();\n      var regions = getRegionInfo(org);\n      ability.spore.spores = regions.exposed; // All exposed cells become spores\n      ability.spore.count = ability.spore.spores.length;\n      for (let i = 0; i < ability.spore.count; i++) {\n         ability.spore.spores[i].color = org.color;\n         ability.spore.spores[i].theta = atan((ability.spore.spores[i].y - org.y()) / (ability.spore.spores[i].x - org.x())); // Generate angle value\n         if (ability.spore.spores[i].x < org.x()) {\n            ability.spore.spores[i].theta += 180;\n         }\n         ability.spore.spores[i].speed = ability.spore.speed; // Set spore speed to constant (subject to change)\n         for (let j = 0; j < org.count; j++) {\n            if (ability.spore.spores[i].x == org.cells[j].x && ability.spore.spores[i].y == org.cells[j].y) { // Find corresponding cell to spore\n               org.cells.splice(j, 1); // Remove spore cells from org\n               org.count--;\n               j--;\n            }\n         }\n      }\n      ability.spore.interval = () => {\n         for (let i = 0; i < ability.spore.count; i++) {\n            ability.spore.spores[i].x += ability.spore.spores[i].speed * cos(ability.spore.spores[i].theta);\n            ability.spore.spores[i].y += ability.spore.spores[i].speed * sin(ability.spore.spores[i].theta);\n         }\n         socket.emit('Ability', ability);\n      };\n      ability.spore.timeout = setTimeout(() => { // End Spore\n         if (ability.spore.value == true && ability.secrete.value == false) { // If secrete() has not been called\n            ability.spore.spores = []; // Clear spores array\n            ability.spore.value = false;\n            ability.spore.end = new Date();\n            ability.spore.cooling = true;\n            socket.emit('Ability', ability);\n         }\n      }, ability.spore.time);\n   }\n}\n\nfunction secrete() {\n   if (ability.secrete.can == true) { // If not already secreting and spores are activated\n      ability.secrete.value = true;\n      ability.secrete.can = false;\n      ability.spore.value = false;\n      ability.spore.end = new Date(); // Set spore end date for secrete timer calculations\n      clearTimeout(ability.secrete.timeout);\n      ability.secrete.start = new Date();\n      ability.secrete.color = org.color;\n      socket.emit('Ability', ability);\n      ability.secrete.timeout = setTimeout(() => { // End Secrete\n         ability.secrete.value = false;\n         ability.secrete.can = true; { // Copy of spore timeout so spore ends when secrete ends\n            ability.spore.spores = []; // Clear spores array\n            ability.spore.end = new Date(); // Overwrite actual end date for cooldown purposes\n            ability.spore.cooling = true;\n         }\n         ability.secrete.end = new Date();\n         socket.emit('Ability', ability);\n      }, ability.secrete.time);\n   }\n}\n\nfunction renderSpores(abilitY) {\n   let src = getSrc();\n   if (abilitY.spore.value == true) {\n      for (let i = 0; i < abilitY.spore.count; i++) {\n         let cell = abilitY.spore.spores[i];\n         for (let j = 0; j < src.orgs.length; j++) {\n            if (src.orgs[j].player == abilitY.player) {\n               if (src.orgs[j].skin == 'circles') {\n                  fill(cell.color.r, cell.color.g, cell.color.b);\n                  noStroke();\n                  ellipse(cell.x, cell.y, cell.width / 2, cell.height / 2);\n               } else if (src.orgs[j].skin == 'ghost') {\n                  noFill();\n                  stroke(cell.color.r, cell.color.g, cell.color.b);\n                  strokeWeight(1);\n                  rect(cell.x, cell.y, cell.width, cell.height);\n               } else {\n                  fill(cell.color.r, cell.color.g, cell.color.b);\n                  noStroke();\n                  rect(cell.x, cell.y, cell.width, cell.height);\n               }\n            }\n         }\n      }\n   }\n   for (let i = 0; i < 3; i++) {\n      if (abilitY.shoot.value[i] == true) {\n         let cell = abilitY.shoot.spore[i];\n         for (let j = 0; j < src.orgs.length; j++) {\n            if (src.orgs[j].player == abilitY.player) {\n               if (src.orgs[j].skin == 'circles') {\n                  fill(cell.color.r, cell.color.g, cell.color.b);\n                  noStroke();\n                  ellipse(cell.x, cell.y, cell.width / 2 * .8, cell.height / 2 * .8); // .8 (default) size of spore (so as to differentiate between the two)\n               } else if (src.orgs[j].skin == 'ghost') {\n                  noFill();\n                  stroke(cell.color.r, cell.color.g, cell.color.b);\n                  strokeWeight(1);\n                  rect(cell.x, cell.y, cell.width * .8, cell.height * .8);\n               } else {\n                  fill(cell.color.r, cell.color.g, cell.color.b);\n                  noStroke();\n                  rect(cell.x, cell.y, cell.width * .8, cell.height * .8);\n               }\n            }\n         }\n      }\n   }\n}\n\nfunction renderSecretions(abilitY) { // abilitY is src.abilities[x]\n   let src = getSrc();\n   for (let i = 0; i < src.orgs.length; i++) {\n      if (abilitY.player == src.orgs[i].player) { // Identify org of abilitY\n         if (abilitY.secrete.value == true) {\n            for (let j = 0; j < abilitY.spore.count; j++) {\n               let spore = abilitY.spore.spores[j];\n               if (src.orgs[i].skin == 'ghost') {\n                  noFill();\n                  stroke(abilitY.secrete.color.r, abilitY.secrete.color.g, abilitY.secrete.color.b);\n                  strokeWeight(2);\n                  ellipse(spore.x, spore.y, abilitY.secrete.radius);\n               } else {\n                  fill(abilitY.secrete.color.r, abilitY.secrete.color.g, abilitY.secrete.color.b);\n                  noStroke();\n                  ellipse(spore.x, spore.y, abilitY.secrete.radius);\n               }\n            }\n         }\n         for (let j = 0; j < abilitY.shoot.value.length; j++) {\n            if (abilitY.shoot.secrete[j].value == true) {\n               let spore = abilitY.shoot.spore[j];\n               if (src.orgs[i].skin == 'ghost') {\n                  noFill();\n                  stroke(abilitY.shoot.secrete[j].color.r, abilitY.shoot.secrete[j].color.g, abilitY.shoot.secrete[j].color.b);\n                  strokeWeight(2);\n                  ellipse(spore.x, spore.y, abilitY.shoot.secrete[j].radius);\n               } else {\n                  fill(abilitY.shoot.secrete[j].color.r, abilitY.shoot.secrete[j].color.g, abilitY.shoot.secrete[j].color.b);\n                  noStroke();\n                  ellipse(spore.x, spore.y, abilitY.shoot.secrete[j].radius);\n               }\n            }\n         }\n         break;\n      }\n   }\n}\n\nfunction renderNeutralize(abilitY) {\n   if (abilitY.neutralize.value == true) { // Render neutralize (not toxin) over shoots, spores, and secretes of opponents\n      fill(100);\n      stroke(abilitY.neutralize.color.r, abilitY.neutralize.color.g, abilitY.neutralize.color.b);\n      strokeWeight(abilitY.neutralize.weight);\n      ellipse(abilitY.neutralize.x, abilitY.neutralize.y, abilitY.neutralize.radius);\n   }\n}\n\nfunction renderToxin(abilitY) {\n   if (abilitY.toxin.value == true) { // Toxin renders at bottom\n      fill(100);\n      stroke(abilitY.toxin.color.r, abilitY.toxin.color.g, abilitY.toxin.color.b);\n      strokeWeight(abilitY.toxin.weight);\n      ellipse(abilitY.toxin.x, abilitY.toxin.y, abilitY.toxin.radius);\n   }\n}\n\nfunction cooldown(abilitY) { // abilitY is ability.xxxxx, not (games[i].)ability\n   if (typeof abilitY.value != 'object') { // If is not shoot (typeof [] == 'object')\n      if (abilitY.cooling == true) { // If abilitY is cooling down\n         let current = new Date(); // Get current time\n         if (current - abilitY.end >= abilitY.cooldown) { // If cooldown has passed\n            abilitY.can = true; // Re-enable abilitY\n            abilitY.cooling = false;\n            socket.emit('Ability', ability); // Update server\n         }\n      }\n   } else { // If is shoot\n      for (let i = 0; i < abilitY.value.length; i++) {\n         if (abilitY.cooling[i] == true) { // If abilitY is cooling down\n            let current = new Date(); // Get current time\n            if (current - abilitY.end[i] >= abilitY.cooldown[i]) { // If cooldown has passed\n               abilitY.can[i] = true; // Re-enable abilitY\n               abilitY.cooling[i] = false;\n               socket.emit('Ability', ability); // Update server\n            }\n         }\n      }\n   }\n}","var Board = function(datA) {\n   let data = datA;\n   this.host = socket.id; // Cannot call game.info.host since game is not fully constructed yet; World() can only be called by host, so socket.id is ok\n   this.list = [\n         // {\n         // \tplayer: undefined, // ID of player\n         // \tname: undefined, // Screen name of player\n         // \tkills: undefined, // Kills as defined by number of enemy cells killed\n         // \tdeaths: undefined, // Deaths as defined by number of org deaths\n         // \tratio: undefined, // Ratio of kills to deaths\n         // \tscore: undefined, // Flag captures (ctf), time score (kth)\n         // \twins: undefined // Round wins (srv, ctf, inf, kth)\n         // }\n      ],\n      this.count = undefined;\n   if (data.mode == 'skm' || data.mode == 'ctf') { // If is a team game\n      this.show = data.teamCount; // Maximum number of players shown in leaderboard (Top __)\n   } else {\n      this.show = data.show;\n   }\n   this.x = undefined; // width - (nameWidth + oneWidth + twoWidth) / 2 - marginRight\n   this.y = undefined; // marginTop\n   this.marginRight = 15;\n   this.marginTop = 13;\n   this.text = {\n      marginLeft: 5,\n      marginTop: 15,\n      size: 11,\n      font: 'Helvetica',\n      boldFont: 'Verdana',\n      color: { r: 0, g: 0, b: 0 }\n   };\n   this.nameWidth = 170;\n   this.oneWidth = 46;\n   this.twoWidth = 46;\n   this.threeWidth = 46;\n   this.rowHeight = 22;\n   this.tableWeight = 1;\n   this.headWeight = 1;\n   this.cellWeight = 1;\n   this.headColor = { r: 200, g: 200, b: 200 };\n   this.cellColor = { r: 245, g: 245, b: 245 };\n   this.stroke = { r: 0, g: 0, b: 0 };\n};\n\nfunction orderBoard(lisT) {\n   lisT.sort(function(a, b) { // Sorts in descending order of K:D ratio\n      let N;\n      if (game.info.mode == 'ffa' || game.info.mode == 'skm') {\n         N = b.kills - a.kills; // If a.kills is greater than b.kills, value will be negative, so will sort a before b\n         if (N == 0) {\n            N = a.deaths - b.deaths; // If b.deaths is greater than a.deaths, value will be positive, so will sort b before a\n         }\n      } else if (game.info.mode == 'srv') {\n         N = b.kills - a.kills;\n         if (N == 0) {\n            N = b.wins - a.wins;\n         }\n      } else if (game.info.mode == 'ctf' || game.info.mode == 'kth') {\n         N = b.score - a.score;\n         if (N == 0) {\n            N = b.wins - a.wins;\n         }\n      } else if (game.info.mode == 'inf') {\n         N = b.wins - a.wins;\n      }\n      return N;\n   });\n   return lisT;\n}\n\nfunction renderLeaderboard() {\n   // Leaderboard\n   translate(org.off.x, org.off.y); // Settings for entire board\n   rectMode(CORNER);\n   game.board.y = game.board.marginTop;\n   noFill();\n   stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\n   strokeWeight(game.board.tableWeight);\n   textSize(game.board.text.size);\n   textFont(game.board.text.font);\n   textStyle(BOLD);\n   if (game.info.mode == 'ffa') {\n      game.board.x = width - (game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.threeWidth) - game.board.marginRight;\n      fill(game.board.headColor.r, game.board.headColor.g, game.board.headColor.b); // Header\n      stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\n      strokeWeight(game.board.headWeight);\n      rect(game.board.x, game.board.y, game.board.nameWidth, game.board.rowHeight); // Names Header\n      rect(game.board.x + game.board.nameWidth, game.board.y, game.board.oneWidth, game.board.rowHeight); // Kills Header\n      rect(game.board.x + game.board.nameWidth + game.board.oneWidth, game.board.y, game.board.twoWidth, game.board.rowHeight); // Deaths Header\n      rect(game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.twoWidth, game.board.y, game.board.threeWidth, game.board.rowHeight); // Ratios Header\n      fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b); // Header Text\n      noStroke();\n      text('Player', game.board.x + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\n      text('Kills', game.board.x + game.board.nameWidth + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\n      text('Deaths', game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\n      text('K:D', game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\n      game.board.count = min(game.board.show, game.board.list.length);\n   } else if (game.info.mode == 'skm') {\n      game.board.x = width - (game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.threeWidth) - game.board.marginRight;\n      fill(game.board.headColor.r, game.board.headColor.g, game.board.headColor.b); // Header\n      stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\n      strokeWeight(game.board.headWeight);\n      rect(game.board.x, game.board.y, game.board.nameWidth, game.board.rowHeight); // Team Color Header\n      rect(game.board.x + game.board.nameWidth, game.board.y, game.board.oneWidth, game.board.rowHeight); // Team Kills Header\n      rect(game.board.x + game.board.nameWidth + game.board.oneWidth, game.board.y, game.board.twoWidth, game.board.rowHeight); // Team Deaths Header\n      rect(game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.twoWidth, game.board.y, game.board.threeWidth, game.board.rowHeight); // Team Ratio Header\n      fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b); // Header Text\n      noStroke();\n      text('Team', game.board.x + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\n      text('Kills', game.board.x + game.board.nameWidth + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\n      text('Deaths', game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\n      text('K:D', game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\n      game.board.count = game.teams.length;\n   } else if (game.info.mode == 'srv') {\n      game.board.x = width - (game.board.nameWidth + game.board.oneWidth + game.board.twoWidth) - game.board.marginRight;\n      fill(game.board.headColor.r, game.board.headColor.g, game.board.headColor.b); // Header\n      stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\n      strokeWeight(game.board.headWeight);\n      rect(game.board.x, game.board.y, game.board.nameWidth, game.board.rowHeight); // Names Header\n      rect(game.board.x + game.board.nameWidth, game.board.y, game.board.oneWidth, game.board.rowHeight); // Wins Header\n      rect(game.board.x + game.board.nameWidth + game.board.oneWidth, game.board.y, game.board.twoWidth, game.board.rowHeight); // Kills Header\n      fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b); // Header Text\n      noStroke();\n      text('Player', game.board.x + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\n      text('Wins', game.board.x + game.board.nameWidth + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\n      text('Kills', game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\n      game.board.count = min(game.board.show, game.board.list.length);\n   } else if (game.info.mode == 'ctf') {\n      game.board.x = width - (game.board.nameWidth + game.board.oneWidth + game.board.twoWidth) - game.board.marginRight;\n      fill(game.board.headColor.r, game.board.headColor.g, game.board.headColor.b); // Header\n      stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\n      strokeWeight(game.board.headWeight);\n      rect(game.board.x, game.board.y, game.board.nameWidth, game.board.rowHeight); // Team Color Header\n      rect(game.board.x + game.board.nameWidth, game.board.y, game.board.oneWidth, game.board.rowHeight); // Wins Header\n      rect(game.board.x + game.board.nameWidth + game.board.oneWidth, game.board.y, game.board.oneWidth, game.board.rowHeight); // Captures Header\n      fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b); // Header Text\n      noStroke();\n      text('Team', game.board.x + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\n      text('Wins', game.board.x + game.board.nameWidth + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\n      text('Score', game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\n      game.board.count = game.teams.length;\n   } else if (game.info.mode == 'inf') {\n      game.board.x = width - (game.board.nameWidth + game.board.oneWidth) - game.board.marginRight;\n      fill(game.board.headColor.r, game.board.headColor.g, game.board.headColor.b); // Header\n      stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\n      strokeWeight(game.board.headWeight);\n      rect(game.board.x, game.board.y, game.board.nameWidth, game.board.rowHeight); // Names Header\n      rect(game.board.x + game.board.nameWidth, game.board.y, game.board.oneWidth, game.board.rowHeight); // Wins Header\n      fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b); // Header Text\n      noStroke();\n      text('Player', game.board.x + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\n      text('Wins', game.board.x + game.board.nameWidth + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\n      game.board.count = min(game.board.show, game.board.list.length);\n   } else if (game.info.mode == 'kth') {\n      game.board.x = width - (game.board.nameWidth + game.board.oneWidth + game.board.twoWidth) - game.board.marginRight;\n      fill(game.board.headColor.r, game.board.headColor.g, game.board.headColor.b); // Header\n      stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\n      strokeWeight(game.board.headWeight);\n      rect(game.board.x, game.board.y, game.board.nameWidth, game.board.rowHeight); // Names Header\n      rect(game.board.x + game.board.nameWidth, game.board.y, game.board.oneWidth, game.board.rowHeight); // Wins Header\n      rect(game.board.x + game.board.nameWidth + game.board.oneWidth, game.board.y, game.board.oneWidth, game.board.rowHeight); // Score Header\n      fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b); // Header Text\n      noStroke();\n      text('Player', game.board.x + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\n      text('Wins', game.board.x + game.board.nameWidth + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\n      text('Score', game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.text.marginLeft, game.board.y + game.board.text.marginTop);\n      game.board.count = min(game.board.show, game.board.list.length);\n   }\n   var a = 0;\n   for (let i = 0; i < game.board.count; i++) { // Body\n      if (game.info.mode != 'skm' && game.info.mode != 'ctf') { // If not a team mode\n         var spectator = false;\n         for (let j = 0; j < game.spectators.length; j++) {\n            if (game.board.list[i].player == game.spectators[j]) {\n               spectator = true;\n               break;\n            }\n         }\n         if (spectator == true) {\n            if (i < game.board.count) {\n               if (game.board.count < game.info.count) {\n                  game.board.count++; // Extend leaderboard length to include the next player\n                  i++; // Do not render leaderboard status if player is a spectator\n               } else {\n                  continue;\n               }\n            }\n         }\n      }\n      // Cell Boxes\n      if (game.info.mode == 'ffa') {\n         fill(game.board.cellColor.r, game.board.cellColor.g, game.board.cellColor.b);\n         stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\n         strokeWeight(game.board.cellWeight);\n         rect(game.board.x, game.board.y + (a + 1) * game.board.rowHeight, game.board.nameWidth, game.board.rowHeight); // Names Body\n         fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b);\n         noStroke();\n         if (game.board.list[i].player == socket.id) {\n            textFont(game.board.text.boldFont);\n            textStyle(BOLD);\n         } else {\n            textFont(game.board.text.font);\n            textStyle(NORMAL);\n         }\n         text(game.board.list[i].name, game.board.x + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop); // Screen name renders under kills box\n         fill(game.board.cellColor.r, game.board.cellColor.g, game.board.cellColor.b); // Body\n         stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\n         strokeWeight(game.board.cellWeight);\n         rect(game.board.x + game.board.nameWidth, game.board.y + (a + 1) * game.board.rowHeight, game.board.oneWidth, game.board.rowHeight); // Kills Body\n         rect(game.board.x + game.board.nameWidth + game.board.oneWidth, game.board.y + (a + 1) * game.board.rowHeight, game.board.twoWidth, game.board.rowHeight); // Deaths Body\n         rect(game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.twoWidth, game.board.y + (a + 1) * game.board.rowHeight, game.board.threeWidth, game.board.rowHeight); // Ratios Body\n         // Text\n         fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b);\n         noStroke();\n         text(game.board.list[i].kills, game.board.x + game.board.nameWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop);\n         text(game.board.list[i].deaths, game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop);\n         game.board.list[i].ratio = game.board.list[i].kills / game.board.list[i].deaths;\n         if (game.board.list[i].ratio == Infinity) { // n / 0, n != 0 (Divide by Zero)\n            text('∞', game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop); // K:D Ratio (Rounded to two decimal places)\n         } else if (game.board.list[i].kills == 0 && game.board.list[i].deaths == 0) { // 0 / 0 (Indeterminate Form) (Ratio is NaN)\n            text('0', game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop); // K:D Ratio (Rounded to two decimal places)\n         } else { // n / m, m != 0 (Rational Number)\n            text(round(game.board.list[i].ratio * 100) / 100, game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop); // K:D Ratio (Rounded to two decimal places)\n         }\n      } else if (game.info.mode == 'skm') {\n         // fill(game.world.backdrop.r - 20, game.world.backdrop.g - 20, game.world.backdrop.b - 20);\n         // noStroke();\n         // rect(game.board.x + 4, game.board.y + 3 + (a + 1) * game.board.rowHeight, game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.threeWidth, game.board.rowHeight);\n         fill(game.board.cellColor.r, game.board.cellColor.g, game.board.cellColor.b);\n         stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\n         strokeWeight(game.board.cellWeight);\n         rect(game.board.x, game.board.y + (a + 1) * game.board.rowHeight, game.board.nameWidth, game.board.rowHeight); // Team Color Body\n         fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b);\n         noStroke();\n         if (game.teams[i].indexOf(org.player) != -1) { // If player is on given team\n            textFont(game.board.text.boldFont);\n            textStyle(BOLD);\n         } else {\n            textFont(game.board.text.font);\n            textStyle(NORMAL);\n         }\n         text(teamColors[i][0].toUpperCase() + teamColors[i].slice(1), game.board.x + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop); // Screen name is above so it renders under kills box\n         fill(game.board.cellColor.r, game.board.cellColor.g, game.board.cellColor.b); // Body\n         stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\n         strokeWeight(game.board.cellWeight);\n         rect(game.board.x + game.board.nameWidth, game.board.y + (a + 1) * game.board.rowHeight, game.board.oneWidth, game.board.rowHeight); // Team Kills Body\n         rect(game.board.x + game.board.nameWidth + game.board.oneWidth, game.board.y + (a + 1) * game.board.rowHeight, game.board.twoWidth, game.board.rowHeight); // Team Deaths Body\n         rect(game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.twoWidth, game.board.y + (a + 1) * game.board.rowHeight, game.board.threeWidth, game.board.rowHeight); // Team Ratios Body\n         // Text\n         fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b);\n         noStroke();\n         var teamKills = 0;\n         var teamDeaths = 0;\n         for (let j = 0; j < game.teams[i].length; j++) {\n            for (let k = 0; k < game.board.list.length; k++) {\n               if (game.teams[i][j] == game.board.list[k].player) {\n                  teamKills += game.board.list[k].kills;\n                  teamDeaths += game.board.list[k].deaths;\n                  break;\n               }\n            }\n         }\n         var teamRatio = teamKills / teamDeaths;\n         text(teamKills, game.board.x + game.board.nameWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop);\n         text(teamDeaths, game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop);\n         if (teamRatio == Infinity) { // n / 0, n != 0 (Divide by Zero)\n            text('∞', game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop); // K:D Ratio (Rounded to two decimal places)\n         } else if (teamKills == 0 && teamDeaths == 0) { // 0 / 0 (Indeterminate Form) (Ratio is NaN)\n            text('0', game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop); // K:D Ratio (Rounded to two decimal places)\n         } else { // n / m, m != 0 (Rational Number)\n            text(round(teamRatio * 100) / 100, game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop); // K:D Ratio (Rounded to two decimal places)\n         }\n      } else if (game.info.mode == 'srv') {\n         // fill(game.world.backdrop.r - 20, game.world.backdrop.g - 20, game.world.backdrop.b - 20);\n         // noStroke();\n         // rect(game.board.x + 4, game.board.y + 3 + (a + 1) * game.board.rowHeight, game.board.nameWidth + game.board.oneWidth + game.board.twoWidth, game.board.rowHeight);\n         fill(game.board.cellColor.r, game.board.cellColor.g, game.board.cellColor.b);\n         stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\n         strokeWeight(game.board.cellWeight);\n         rect(game.board.x, game.board.y + (a + 1) * game.board.rowHeight, game.board.nameWidth, game.board.rowHeight); // Names Body\n         fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b);\n         noStroke();\n         if (game.board.list[i].player == socket.id) {\n            textFont(game.board.text.boldFont);\n            textStyle(BOLD);\n         } else {\n            textFont(game.board.text.font);\n            textStyle(NORMAL);\n         }\n         text(game.board.list[i].name, game.board.x + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop); // Screen name renders under kills box\n         fill(game.board.cellColor.r, game.board.cellColor.g, game.board.cellColor.b); // Body\n         stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\n         strokeWeight(game.board.cellWeight);\n         rect(game.board.x + game.board.nameWidth, game.board.y + (a + 1) * game.board.rowHeight, game.board.oneWidth, game.board.rowHeight); // Kills Body\n         rect(game.board.x + game.board.nameWidth + game.board.oneWidth, game.board.y + (a + 1) * game.board.rowHeight, game.board.twoWidth, game.board.rowHeight); // Deaths Body\n         // Text\n         fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b);\n         noStroke();\n         text(game.board.list[i].wins, game.board.x + game.board.nameWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop);\n         text(game.board.list[i].kills, game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop);\n      } else if (game.info.mode == 'ctf') {\n         // fill(game.world.backdrop.r - 20, game.world.backdrop.g - 20, game.world.backdrop.b - 20);\n         // noStroke();\n         // rect(game.board.x + 4, game.board.y + 3 + (a + 1) * game.board.rowHeight, game.board.nameWidth + game.board.oneWidth, game.board.rowHeight);\n         fill(game.board.cellColor.r, game.board.cellColor.g, game.board.cellColor.b);\n         stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\n         strokeWeight(game.board.cellWeight);\n         rect(game.board.x, game.board.y + (a + 1) * game.board.rowHeight, game.board.nameWidth, game.board.rowHeight); // Team Color Body\n         fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b);\n         noStroke();\n         if (game.teams[i].indexOf(org.player) != -1) { // If player is on given team\n            textFont(game.board.text.boldFont);\n            textStyle(BOLD);\n         } else {\n            textFont(game.board.text.font);\n            textStyle(NORMAL);\n         }\n         text(teamColors[i][0].toUpperCase() + teamColors[i].slice(1), game.board.x + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop); // Screen name is above so it renders under kills box\n         fill(game.board.cellColor.r, game.board.cellColor.g, game.board.cellColor.b); // Body\n         stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\n         strokeWeight(game.board.cellWeight);\n         rect(game.board.x + game.board.nameWidth, game.board.y + (a + 1) * game.board.rowHeight, game.board.oneWidth, game.board.rowHeight); // Team Kills\n         rect(game.board.x + game.board.nameWidth + game.board.oneWidth, game.board.y + (a + 1) * game.board.rowHeight, game.board.twoWidth, game.board.rowHeight); // Round Wins\n         // Text\n         var wins = 0;\n         let done = false;\n         for (let j = 0; j < game.teams[i].length; j++) {\n            for (let k = 0; k < game.board.list.length; k++) {\n               if (game.teams[i][j] == game.board.list[k].player) { // Find player in board list\n                  wins = game.board.list[k].wins; // Team wins saved to each player; Copy wins from one player to represent the team\n                  done = true;\n                  break;\n               }\n            }\n            if (done == true) {\n               break;\n            }\n         }\n         var captures = 0;\n         for (let j = 0; j < game.teams[i].length; j++) {\n            for (let k = 0; k < game.board.list.length; k++) {\n               if (game.teams[i][j] == game.board.list[k].player) {\n                  captures += game.board.list[k].score;\n                  break;\n               }\n            }\n         }\n         fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b);\n         noStroke();\n         text(wins, game.board.x + game.board.nameWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop);\n         text(captures, game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop);\n      } else if (game.info.mode == 'inf') {\n         // fill(game.world.backdrop.r - 20, game.world.backdrop.g - 20, game.world.backdrop.b - 20);\n         // noStroke();\n         // rect(game.board.x + 4, game.board.y + 3 + (a + 1) * game.board.rowHeight, game.board.nameWidth + game.board.oneWidth, game.board.rowHeight);\n         fill(game.board.cellColor.r, game.board.cellColor.g, game.board.cellColor.b);\n         stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\n         strokeWeight(game.board.cellWeight);\n         rect(game.board.x, game.board.y + (a + 1) * game.board.rowHeight, game.board.nameWidth, game.board.rowHeight); // Names Body\n         fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b);\n         noStroke();\n         if (game.board.list[i].player == socket.id) {\n            textFont(game.board.text.boldFont);\n            textStyle(BOLD);\n         } else {\n            textFont(game.board.text.font);\n            textStyle(NORMAL);\n         }\n         text(game.board.list[i].name, game.board.x + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop); // Screen name renders under kills box\n         fill(game.board.cellColor.r, game.board.cellColor.g, game.board.cellColor.b); // Body\n         stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\n         strokeWeight(game.board.cellWeight);\n         rect(game.board.x + game.board.nameWidth, game.board.y + (a + 1) * game.board.rowHeight, game.board.oneWidth, game.board.rowHeight); // Kills Body\n         // Text\n         fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b);\n         noStroke();\n         text(game.board.list[i].wins, game.board.x + game.board.nameWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop);\n      } else if (game.info.mode == 'kth') {\n         // fill(game.world.backdrop.r - 20, game.world.backdrop.g - 20, game.world.backdrop.b - 20);\n         // noStroke();\n         // rect(game.board.x + 4, game.board.y + 3 + (a + 1) * game.board.rowHeight, game.board.nameWidth + game.board.oneWidth, game.board.rowHeight);\n         fill(game.board.cellColor.r, game.board.cellColor.g, game.board.cellColor.b);\n         stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\n         strokeWeight(game.board.cellWeight);\n         rect(game.board.x, game.board.y + (a + 1) * game.board.rowHeight, game.board.nameWidth, game.board.rowHeight); // Names Body\n         fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b);\n         noStroke();\n         if (game.board.list[i].player == socket.id) {\n            textFont(game.board.text.boldFont);\n            textStyle(BOLD);\n         } else {\n            textFont(game.board.text.font);\n            textStyle(NORMAL);\n         }\n         text(game.board.list[i].name, game.board.x + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop); // Screen name renders under kills box\n         fill(game.board.cellColor.r, game.board.cellColor.g, game.board.cellColor.b); // Body\n         stroke(game.board.stroke.r, game.board.stroke.g, game.board.stroke.b);\n         strokeWeight(game.board.cellWeight);\n         rect(game.board.x + game.board.nameWidth, game.board.y + (a + 1) * game.board.rowHeight, game.board.oneWidth, game.board.rowHeight); // Score\n         rect(game.board.x + game.board.nameWidth + game.board.oneWidth, game.board.y + (a + 1) * game.board.rowHeight, game.board.twoWidth, game.board.rowHeight); // Wins\n         // Text\n         fill(game.board.text.color.r, game.board.text.color.g, game.board.text.color.b);\n         noStroke();\n         text(game.board.list[i].wins, game.board.x + game.board.nameWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop);\n         text(game.board.list[i].score, game.board.x + game.board.nameWidth + game.board.oneWidth + game.board.text.marginLeft, game.board.y + (a + 1) * game.board.rowHeight + game.board.text.marginTop);\n      }\n      a++;\n   }\n   rectMode(CENTER); // Reset Mode\n   translate(-org.off.x, -org.off.y);\n}","var connections;\n\nclass Browser extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         games: props.games\n      };\n   }\n\n   componentWillReceiveProps(next) {\n      if (next.games) this.setState({ games: next.games });\n   }\n   render() {\n      let gamerows = [];\n      for (let i = 0; i < this.state.games.length; i++) {\n         if (this.state.games[i].players.length == 0 && this.state.games[i].spectators.length == 0 && this.state.games[i].info.count == 0) { // If host has not yet joined the game\n            continue;\n         }\n         gamerows.push( <GameRow key={i} game={this.state.games[i]} row={i} forceUp={!mouseDown} /> );\n      }\n\n      return (\n         <div id='browsercont'>\n            <Shade />\n            <CanvasCont />\n            <div id='content'>\n               <table id='browser'>\n                  <thead>\n                     <tr id='head'>\n                        <th id='title' colSpan='1'>Title</th>\n                        <th id='mode' colSpan='1'>Mode</th>\n                        <th id='players' colSpan='1'>Players</th>\n                        <th id='spectators' colSpan='1'>Spectators</th>\n                        <th id='playercap' colSpan='1'>Player Cap</th>\n                        <th id='join-spectate' colSpan='2'>Bacter</th>\n                     </tr>\n                  </thead>\n                  <tbody id='browserBody'>\n                     {gamerows}\n                  </tbody>\n               </table>\n            </div>\n            <div className='backfooter'>\n               <footer onClick={ renderTitle }>\n                  <p id='back'>&larr; Back</p>\n                  <p id='displayconnections'>{ 'Online Clients: ' + (connections ? connections : 0) }</p>\n               </footer>\n            </div>\n         </div>\n      );\n   }\n}\n\nclass GameRow extends React.Component {\n   constructor(props) {\n      super(props);\n      this.row = props.row;\n   }\n\n   render() {\n      let game = this.props.game;\n      return (\n         <tr>\n            <td className='title'>{game.info.title}</td>\n            <td className='mode'>{modes[game.info.mode]}</td>\n            <td className='players'>{game.players.length}</td>\n            <td className='spectators'>{game.spectators.length}</td>\n            <td className='playercap'>{game.info.cap}</td>\n            <TableButton forceUp={this.props.forceUp} row={this.row} inner='Join' />\n            <TableButton forceUp={this.props.forceUp} row={this.row} inner='Spectate' />\n         </tr>\n      );\n   }\n}\n\nclass TableButton extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         down: false,\n         backgroundColor: 'rgb(255, 255, 255)'\n      };\n      this.row = props.row;\n\n      this.handleMouseDown = this.handleMouseDown.bind(this); // Preserve this reference value in handler functions\n      this.handleMouseUp = this.handleMouseUp.bind(this);\n      this.handleMouseOver = this.handleMouseOver.bind(this);\n      this.handleMouseOut = this.handleMouseOut.bind(this);\n      this.handleClick = this.handleClick.bind(this);\n   }\n\n   handleMouseDown(e) {\n      this.setState({ down: true, backgroundColor: 'rgb(210, 210, 210)' });\n   }\n   handleMouseUp(e) {\n      this.setState({ down: false, backgroundColor: 'rgb(230, 230, 230)' });\n   }\n   handleMouseOver(e) {\n      this.setState({ backgroundColor: this.state.down ? 'rgb(210, 210, 210)' : 'rgb(230, 230, 230)' });\n   }\n   handleMouseOut(e) {\n      this.setState({ backgroundColor: 'rgb(255, 255, 255)' });\n   }\n   handleClick(e) {\n      switch (this.props.inner) {\n         case 'Join':\n            renderMenu('join', games[this.row]);\n            break;\n         case 'Spectate':\n            renderMenu('spectate', games[this.row]);\n            break;\n      }\n   }\n\n   render() {\n      return (\n         <td \n            className='TableButton' \n            onMouseDown={this.handleMouseDown} \n            onMouseUp={this.handleMouseUp} \n            onMouseOver={this.handleMouseOver} \n            onMouseOut={this.handleMouseOut} \n            onClick={this.handleClick} \n            style={{ backgroundColor: this.state.backgroundColor }}\n         >{this.props.inner}</td>\n      );\n   }\n}\n\nfunction renderBrowser() {\n   state = 'browser';\n   ReactDOM.render(<Browser games={games} />, eid('cont'));\n}","var cnv;\nvar center = {\n   x: undefined,\n   y: undefined\n};\n\nclass CanvasCont extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         width: props.width ? props.width : window.innerWidth, // Width defaults to window width but can be set by props.width\n         height: props.height ? props.height : window.innerHeight // Height defaults to window height but can be set by props.height\n      };\n      this.style = {\n         zIndex: '-2' // Canvas is furthest back (-2); Shade is -1; UI is 1\n      };\n      let body = document.body; // Set body style for canvas to fill screen\n      body.style.overflow = 'hidden';\n      body.style.margin = 'none';\n      body.style.padding = 'none';\n      body.style.border = 'none';\n      body.style.outline = 'none';\n   }\n\n   componentDidMount() { // Runs only after initial mount\n      cnv = createCanvas(this.state.width, this.state.height); // Create p5 canvas\n      cnv.parent('#canvascont'); // Set CanvasCont as p5 canvas parent\n   }\n   componentWillReceiveProps(next) {\n      let nextWidth = next.width ? next.width : window.innerWidth;\n      let nextHeight = next.height ? next.height : window.innerHeight\n      if (nextWidth !== this.state.width || nextHeight !== this.state.height) { // If new dimensions are inequal, create new canvas element\n         cnv = createCanvas(nextWidth, nextHeight); // Create p5 canvas\n         cnv.parent('#canvascont'); // Set CanvasCont as p5 canvas parent\n      }\n      this.setState({ // Resize when re-rendered\n         width: nextWidth, // Width defaults to window width but can be set by props.width\n         height: nextHeight // Height defaults to window height but can be set by props.height\n      });\n   }\n   render() {\n      let style = {};\n      for (let i in this.props.style) {\n         style[i] = this.props.style[i];\n      }\n      style.zIndex = this.style.zIndex;\n      return (\n         <div id='canvascont' className='canvas' style={style}></div> // Container for p5's (createCanvas(), parent())\n      );\n   }\n};","// Socket Settings\nconst DEV = true;\nconst HEROKU = false;\n\n// Repertoires\nconst worldColors = {\n\tblack:            { r: 0,     g: 0,    b: 0   }, // Only black is currently in use\n\twhite:            { r: 230,   g: 230,  b: 230 }, \n\tblue:             { r: 247,   g: 250,  b: 255 }\n};\nconst orgColors = {\n\tblack: {\n\t\tfire:          { r: 255,   g: 90,   b: 81  }, \n\t\tcamel:         { r: 232,   g: 183,  b: 155 }, \n\t\tclay:          { r: 232,   g: 145,  b: 95  }, \n\t\tsun:           { r: 255,   g: 246,  b: 86  }, \n\t\tleaf:          { r: 125,   g: 255,  b: 200 }, \n\t\tlime:          { r: 57,    g: 249,  b: 86  }, \n\t\tsky:           { r: 48,    g: 210,  b: 255 }, \n\t\tlake:          { r: 142,   g: 182,  b: 255 }, \n\t\tocean:         { r: 102,   g: 136,  b: 244 }, \n\t\troyal:         { r: 175,   g: 132,  b: 255 }, \n\t\tpetal:         { r: 250,   g: 122,  b: 255 }, \n\t\thot:           { r: 232,   g: 2,    b: 216 }\n\t}, \n\twhite: {\n\t\tfire:          { r: 240,   g: 75,   b: 66  }, \n\t\tcamel:         { r: 232,   g: 183,  b: 155 }, \n\t\tclay:          { r: 232,   g: 145,  b: 95  }, \n\t\tburnt:         { r: 196,   g: 99,   b: 19  }, \n\t\tlime:          { r: 57,    g: 249,  b: 86  }, \n\t\tforest:        { r: 0, \t   g: 114,  b: 38  }, \n\t\tpeacock:       { r: 16,    g: 143,  b: 147 }, \n\t\tsky:           { r: 48,    g: 210,  b: 255 }, \n\t\tlake:          { r: 104,   g: 157,  b: 255 }, \n\t\tocean:         { r: 102,   g: 136,  b: 244 }, \n\t\troyal:         { r: 175,   g: 132,  b: 255 }, \n\t\tpetal:         { r: 250,   g: 122,  b: 255 }, \n\t\thot:           { r: 232,   g: 2,    b: 216 }\n\t}\n};\nconst skins = [ 'grid', 'circles', 'ghost' ];\nconst modes = {\n\tffa: 'Free for All', \n\tskm: 'Skirmish', \n\tsrv: 'Survival', \n\tctf: 'Capture the Flag', \n\tinf: 'Infection', \n\tkth: 'King of the Hill'\n};\nconst teamColors = [ 'red', 'blue', 'green', 'pink' ];\nconst teamColorDef = { // Conversion between team name to color name\n\tred: 'fire', \n\tblue: 'sky', \n\tgreen: 'lime', \n\tpink: 'petal'\n};\nconst firsts =  [ 'Extend',      'Compress' ];\nconst seconds = [ 'Immortality', 'Freeze'   ];\nconst thirds =  [ 'Neutralize' , 'Toxin'    ];\n\n// Math\nconst cos45 = 0.70710678118;\nconst root2 = 1.41421356;\n\n// Configurations\nconst _ofrequency      = 70; // Org update frequency\nconst _renderfrequency = 40; // Rendering update frequency\nconst _range           = 50; // Org default maximum size\nconst _cellwidth       = 6; // Width of single cell (pixels)\nconst _movespeed       = 1.7; // Crosshair movement speed\nconst _spectatespeed   = 2.5; // Crosshair movement speed in spectate mode\nconst _delaytime       = 10000;\nconst _dummies         = 10; // Number of dummy orgs in title screen\nconst _margin          = 25; // Title screen margin\n\n// Settings\nlet Labels = true;\nlet Messages = true;\nlet Controls = {\n\tleft1:    { key: 'A',   code: 65 }, \n\tleft2:    { key: '←',   code: 37 }, \n\tup1:      { key: 'W',   code: 87 }, \n\tup2:      { key: '↑',   code: 38 }, \n\tright1:   { key: 'D',   code: 68 }, \n\tright2:   { key: '→',   code: 39 }, \n\tdown1:    { key: 'S',   code: 83 }, \n\tdown2:    { key: '↓',   code: 40 }, \n\tability1: { key: 'X',   code: 88 }, \n\tability2: { key: 'C',   code: 67 }, \n\tability3: { key: 'V',   code: 86 }, \n\tability4: { key: ' ',   code: 32 }, \n\trespawn:  { key: 'R',   code: 82 }, \n\tpause:    { key: 'ESC', code: 27 }, \n};\nconst Defaults = {\n\tworldwidth:  800,\n\tworldheight: 800,\n\tplayercap:   16 ,\n\tplayermin:   4  ,\n\tboardlength: 10 ,\n\tteamcount:   2\n};","var Flag = function(X, Y, coloR) {\n   this.x = X;\n   this.y = Y;\n   this.color = coloR;\n   this.carried = false; // True: flag is being carried by a player; False: flag is dropped\n   this.carrier = undefined;\n   this.height = 20;\n   this.width = 9;\n};","var game; // Initialize in global scope\nvar Game = function(datA) {\n   let data = datA;\n   this.src = 'game';\n   this.players = []; { // Info\n      this.info = {\n         host: socket.id,\n         title: data.title,\n         protected: undefined,\n         count: 0,\n         cap: data.cap,\n         mode: data.mode,\n         teamCount: data.teamCount\n      };\n      if (!data.password) // If there is no password\n         this.info.protected = false;\n      else // If there is a password\n         this.info.protected = true;\n   } { // Teams\n      this.teams = [];\n      if (this.info.mode === 'skm' || this.info.mode === 'ctf') {\n         for (let i = 0; i < this.info.teamCount; i++) {\n            this.teams.push([]); // Outer array contains teams, inner arrays contain player ids\n         }\n      } else if (this.info.mode === 'inf') {\n         for (let i = 0; i < 2; i++) { // Only can be two teams in infection (healthy/infected)\n            this.teams.push([]); // Outer array contains teams, inner arrays contain player ids\n         }\n      }\n   } { // Rounds\n      this.rounds = {\n         host: undefined, // Identification purposes\n         util: false, // If game utilizes rounds\n         waiting: true,\n         delayed: false,\n         delaystart: undefined,\n         delaytime: _delaytime,\n         start: undefined,\n         min: undefined, // Min players\n         winner: undefined\n      };\n      if (this.info.mode === 'srv' || this.info.mode === 'ctf' || this.info.mode === 'inf' || this.info.mode === 'kth') { // If game mode utilizes round system\n         this.rounds.util = true;\n         this.rounds.host = this.info.host;\n         this.rounds.min = data.min;\n         this.rounds.waiting = true;\n      }\n   }\n   this.board = new Board(data);\n   this.world = new World(data);\n   if (this.info.mode === 'ctf')\n      this.flag = new Flag(this.world.x + this.world.width / 2, this.world.y + this.world.height / 2, this.world.border.color);\n   this.players = [];\n   this.spectators = [];\n   this.orgs = [];\n   this.abilities = [];\n};\n\nfunction createGame(datA) {\n   game = new Game(datA);\n   socket.emit('Game Created', game);\n   if (game.info.protected) // If game is password protected\n      socket.emit('Password Created', { pass: datA.password, info: game.info });\n}","var games = [];\nvar state;\nvar mouseDown = false;\n\nfunction setup() {\n   state = 'setup';\n   noCanvas(); // Canvas settings\n   rectMode(CENTER); // \"\n   ellipseMode(RADIUS); // \"\n   angleMode(DEGREES); // \"\n   textAlign(LEFT); // \"\n\n   connectSocket();\n   let page = document.body.parentNode; // Edit global variable mouseDown to determine if mouse is down or up anywhere on the page\n   let md = () => mouseDown = true; // \"\n   page.removeEventListener('mousedown', md); // \"\n   page.addEventListener('mousedown', md); // \"\n   let mu = () => mouseDown = false; // \"\n   page.removeEventListener('mouseup', mu); // \"\n   page.addEventListener('mouseup', mu); // \"\n   var socketInterval = setInterval(() => { // Create instance of Ability, but socket object must exist first, so loop until socket exists\n      ability = new Ability({ player: socket.id }); // Create new instance of Ability\n      if (socket.id) { // If socket.id has loaded\n         clearInterval(socketInterval); // End the loop\n      }\n   }, 50);\n   center = { // Set coordinates of center of window (and canvas)\n      x: window.innerWidth / 2,\n      y: window.innerHeight / 2\n   };\n   renderTitle();\n   title = new Title();\n}\n\nfunction initialize(gamE, datA) {\n   ReactDOM.render(<CanvasCont />, eid('cont'));\n   game = gamE;\n   if (datA.spectate != true) { // Field can be left undefined\n      spawn({ color: datA.color, skin: datA.skin, team: datA.team });\n   } else if (datA.spectate == true) {\n      spectate({ color: datA.color, skin: datA.skin, team: datA.team });\n   }\n}\n\nfunction keyPressed() {\n   switch (keyCode) {\n      case Controls.ability1.code: // X by default\n         if ((state == 'game' || state == 'tutorial') && org.alive == true) {\n            if (ability.extend.activated == true && ability.extend.can == true) {\n               extend(org.player); // Extend self\n            } else if (ability.compress.activated == true && ability.compress.can == true) {\n               shoot(0, 1);\n               // for (let i = 0; i < game.info.count; i++) {\n               //    if (org.target == game.players[i]) { // Find targeted org\n               //       compress(org.target); // Compress targeted org\n               //       break;\n               //    }\n               // }\n            } else if (ability.tag.activated == true && ability.tag.can == true) {\n               shoot(0, 1);\n            }\n            // if (ability.speed.activated == true) { // Speed/Slow; OLD\n            //    speed(org.player);\n            // } else if (ability.slow.activated == true) {\n            //    slow(org.target);\n            // }\n         }\n         break;\n      case Controls.ability2.code: // C by default\n         if ((state == 'game' || state == 'tutorial') && org.alive == true) {\n            if (ability.immortality.activated == true && ability.immortality.can == true) {\n               immortality(org.player); // Immortalize self\n            } else if (ability.freeze.activated == true && ability.freeze.can == true) {\n               shoot(1, 1);\n               // for (let i = 0; i < game.info.count; i++) {\n               //    if (org.target == game.players[i]) { // Find targeted org\n               //       freeze(org.target); // Freeze targeted org\n               //       break;\n               //    }\n               // }\n            }\n         }\n         break;\n      case Controls.ability3.code: // V by default\n         if ((state == 'game' || state == 'tutorial') && org.alive == true) {\n            // if (ability.stimulate.activated == true && ability.stimulate.can == true) { // Stimulate/Poison OLD\n            //    stimulate(org.player); // Stimulate self\n            // } else if (ability.poison.activated == true && ability.poison.can == true) {\n            //    shoot(2, 1);\n            //    // for (let i = 0; i < game.info.count; i++) {\n            //    //    if (org.target == game.players[i]) { // Find targeted org\n            //    //       poison(org.target); // Poison targeted org\n            //    //       break;\n            //    //    }\n            //    // }\n            // }\n            if (ability.neutralize.activated == true && ability.neutralize.can == true) {\n               neutralize(org.player);\n            } else if (ability.toxin.activated == true && ability.toxin.can == true) {\n               toxin(org.player);\n            }\n         }\n         break;\n      case Controls.ability4.code: // SPACE by default\n         if ((state === 'game' || state === 'tutorial') && org.alive) {\n            if (ability.spore.value == false && ability.secrete.value == false) {\n               spore();\n            } else if (ability.spore.value == true && ability.secrete.value == false) {\n               secrete();\n            }\n         }\n         break;\n      case Controls.respawn.code: // R by default\n         if (state == 'spectate' && org.alive == false && org.spawn == true) {\n            if (game.players.length < game.info.cap) {\n               socket.emit('Spectator Left', game.info);\n               renderMenu('respawn', game); // Load respawn menu\n            } else {\n               alert('Game is at maximum player capacity');\n               // Return to spectate mode\n            }\n         }\n         break;\n      case Controls.pause.code: { // ESC by default\n         switch (state) { // Used as the back key for menus (variable pause key may be used as well)\n            case 'createMenu':\n            case 'browser':\n               renderTitle(); // unmountComponentAtNode() is unnecessary since ReactDOM.render() clears container before rendering\n               break;\n            case 'joinMenu':\n               if (game.info.host === socket.id) { // If player is host (If player is joining directly after creating the game)\n                  socket.emit('Game Ended', game);\n                  renderTitle();\n               } else {\n                  renderBrowser();\n               }\n               break;\n            case 'spectateMenu':\n               renderBrowser();\n               break;\n            case 'game':\n               renderMenu('pauseGame', game);\n               break;\n            case 'spectate':\n               renderMenu('pauseSpectate', game);\n               break;\n            case 'tutorial':\n               renderMenu('pauseTutorial', tutorial);\n               break;\n            case 'pauseSpectateMenu': // Cannot access instance of <Menu> component class to bind as this keyword in submit()\n            case 'respawnMenu': // Respawn is included because 'back' for respawn should return to spectate\n               state = 'spectate';\n               ReactDOM.render(<CanvasCont />, eid('cont'));\n               break;\n            case 'pauseGameMenu':\n               let skip = false;\n               for (let i = 0; i < game.players.length; i++) {\n                  if (game.players[i] === socket.id) { // If still is a player\n                     state = 'game';\n                     skip = true;\n                     break;\n                  }\n               }\n               if (!skip) {\n                  for (let i = 0; i < game.spectators.length; i++) {\n                     if (game.spectators[i] === socket.id) {\n                        state = 'spectate'; // Must include spectate possibility in pause game; even though a spectator could never open pause game menu, he could be killed while in menu\n                        break;\n                     }\n                  }\n               }\n               ReactDOM.render(<CanvasCont />, eid('cont'));\n               break;\n            case 'pauseTutorialMenu':\n               state = 'tutorial';\n               ReactDOM.render(<CanvasCont />, eid('cont'));\n               break;\n         }\n         break;\n      }\n   }\n   // Hard key codes are separate from variable codes, so in the case of overlap, hard codes will always run\n   switch (keyCode) {\n      case 27 !== Controls.pause.code ? 27 : '': // ESCAPE only if variable pause key is not ESCAPE (keyCode cannot be a string)\n         switch (state) { // Used as the back key for menus (variable pause key may be used as well)\n            case 'createMenu':\n            case 'browser':\n               renderTitle(); // unmountComponentAtNode() is unnecessary since ReactDOM.render() clears container before rendering\n               break;\n            case 'joinMenu':\n               if (game.info.host === socket.id) { // If player is host (If player is joining directly after creating the game)\n                  socket.emit('Game Ended', game);\n                  renderTitle();\n               } else {\n                  renderBrowser();\n               }\n               break;\n            case 'spectate':\n               renderBrowser();\n               break;\n            case 'pauseSpectateMenu': // Cannot access instance of <Menu> component class to bind as this keyword in submit()\n            case 'respawnMenu': // Respawn is included because 'back' for respawn should return to spectate\n               state = 'spectate';\n               ReactDOM.render(<CanvasCont />, eid('cont'));\n               break;\n            case 'pauseGameMenu':\n               let skip = false;\n               for (let i = 0; i < game.players.length; i++) {\n                  if (game.players[i] === socket.id) { // If still is a player\n                     state = 'game';\n                     skip = true;\n                     break;\n                  }\n               }\n               if (!skip) {\n                  for (let i = 0; i < game.spectators.length; i++) {\n                     if (game.spectators[i] === socket.id) {\n                        state = 'spectate'; // Must include spectate possibility in pause game; even though a spectator could never open pause game menu, he could be killed while in menu\n                        break;\n                     }\n                  }\n               }\n               ReactDOM.render(<CanvasCont />, eid('cont'));\n               break;\n            case 'pauseTutorialMenu':\n               state = 'tutorial';\n               ReactDOM.render(<CanvasCont />, eid('cont'));\n               break;\n         }\n         break;\n   }\n}\n\nfunction mouseClicked() {\n   if (mouseButton == LEFT) {\n      // if (state == 'game') { // DO NOT DELETE (Click detection is very long)\n      //    { // Targeting\n      //       org.target = undefined; // Clear target if click not on opponent org\n      //       for (let i = 0; i < game.info.count; i++) {\n      //          if (game.orgs[i].player == org.player) { // If org is player's org\n      //             continue; // Cannot target oneself\n      //          }\n      //          if (mouseX + org.off.x >= game.orgs[i].clickbox.left && mouseX + org.off.x <= game.orgs[i].clickbox.right && mouseY + org.off.y >= game.orgs[i].clickbox.top && mouseY + org.off.y <= game.orgs[i].clickbox.bottom) { // If clicked another org\n      //             org.target = game.orgs[i].player;\n      //             break;\n      //          }\n      //       }\n      //    }\n      // }\n      return false; // Supposedly negates default behavior\n   } else if (mouseButton == RIGHT) {\n      return false; // Supposedly negates default behavior\n   } else if (mouseButton == CENTER) {\n      return false; // Supposedly negates default behavior\n   }\n}\n\nfunction windowResized() {\n   center = {\n      x: window.innerWidth / 2,\n      y: window.innerHeight / 2\n   };\n   let src = getSrc();\n   if (state === 'title' || state === 'browser' || state === 'tutorial') {\n      src.resize(0, 0, window.innerWidth, window.innerHeight);\n   } else if (state === 'game' || state === 'spectate') {\n      org.off.x = org.pos.x - center.x; // Reposition org (camera) correctly\n      org.off.y = org.pos.y - center.y;\n      ReactDOM.render(<CanvasCont />, eid('cont'));\n   } else if (state.indexOf('Menu') !== -1) {\n      let type = state.slice(0, -4); // To make state string, 'Menu' is concatenated to the end of menu type, remove 'Menu' from state to get menu type\n      let data = (type === 'join' || type === 'spectate' || type === 'respawn') ? game : null; // Only join, spectate, and respawn menus use game variable as data\n      renderMenu(type, data); // <div id='cont'><Menu type={} data={} /></div>\n      if (src.src === 'title') { // ^^ Cut out Menu at end of state string for menu type; Send game as data if src is 'game'; Send tutorial as data is src is 'tutorial'\n         src.resize(0, 0, window.innerWidth, window.innerHeight);\n      } else if (src.src === 'game') { // If menu during game (player or spectator)\n         org.off.x = org.pos.x - center.x; // Reposition org (camera) correctly\n         org.off.y = org.pos.y - center.y;\n      } else if (src.src === 'tutorial') {\n         src.resize(0, 0, window.innerWidth, window.innerHeight);\n      } // Resize the content of the canvas in the background of menus\n   }\n}","function itemize(iteM, widtH, coloR, X, Y) {\n   let item = iteM; // Directional array\n   let count = item.length; // Number of squares\n   let width = widtH; // Width of one square\n   let color = coloR; // Object containing r, g, and b values\n   let x = X; // Starting x\n   let y = Y; // Starting y\n   fill(color.r, color.g, color.b);\n   noStroke();\n   rect(x, y, width, width);\n   for (let i = 0; i < count; i++) {\n      if (item[i] == 'l') {\n         x -= width;\n      } else if (item[i] == 'u') {\n         y -= width;\n      } else if (item[i] == 'r') {\n         x += width;\n      } else if (item[i] == 'd') {\n         y += width;\n      }\n      rect(x, y, width, width);\n   }\n}\n\nvar items = {\n   tag: ['u', 'l', 'd', 'l', 'l', 'r', 'r', 'd', 'r', 'd', 'd', 'u', 'u', 'r', 'u', 'r', 'r', 'l', 'l', 'u', 'l', 'u', 'u', 'u', 'u', 'u', 'u', 'l', 'l', 'l', 'r', 'r', 'r', 'r', 'r', 'r', 'd', 'r', 'r', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'd', 'l', 'd', 'r', 'u', 'r', 'd', 'r', 'u', 'r', 'd', 'r', 'u', 'r', 'd', 'r', 'u', 'r', 'd', 'r', 'u', 'r', 'd', 'r', 'u', 'r', 'd', 'd', 'r', 'd', 'd', 'd', 'd', 'd', 'd', 'l', 'd', 'l', 'l', 'l', 'u', 'r', 'u', 'u', 'u', 'u', 'u', 'u', 'l', 'r', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'r', 'd', 'd', 'l', 'l', 'd', 'l', 'u', 'l', 'd', 'l', 'u', 'l', 'd', 'l', 'u', 'l', 'd', 'u', 'l', 'l', 'u', 'l', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'u', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'u', 'l', 'u', 'u', 'u', 'u', 'u', 'u', 'r', 'u', 'r', 'r', 'r', 'd', 'l', 'd', 'd', 'd', 'd', 'd', 'd', 'r'],\n   extend: ['d', 'd', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'd', 'd', 'd', 'd', 'l', 'u', 'u', 'u', 'u', 'u', 'r', 'u', 'l', 'u', 'r', 'u', 'l', 'u', 'r', 'u', 'l', 'u', 'r', 'u', 'l', 'd', 'l', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'u', 'l', 'u', 'u', 'u', 'u', 'u', 'u', 'u', 'u', 'd', 'l', 'd', 'd', 'd', 'd', 'd', 'd', 'u', 'l', 'u', 'u', 'u', 'u', 'd', 'l', 'd', 'd', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'u', 'u', 'u', 'r', 'd', 'd', 'd', 'r', 'u', 'u', 'u', 'r', 'd', 'd', 'd', 'r', 'u', 'u', 'u', 'r', 'd', 'd', 'd', 'r', 'u', 'u', 'u', 'r', 'd', 'r', 'u', 'd', 'd', 'd', 'd', 'r', 'u', 'u', 'u', 'u', 'r', 'd', 'd', 'd', 'd', 'r', 'u', 'u', 'u', 'u', 'r', 'd', 'd', 'd', 'd', 'r', 'u', 'u', 'u', 'u', 'r', 'd', 'd', 'd', 'd', 'r', 'd', 'd', 'd', 'd', 'r', 'u', 'u', 'u', 'u', 'u', 'l', 'u', 'r', 'u', 'l', 'u', 'r', 'u', 'l', 'u', 'r', 'u', 'l', 'u', 'r', 'd', 'r', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'u', 'r', 'u', 'u', 'u', 'u', 'u', 'u', 'u', 'u', 'd', 'r', 'd', 'd', 'd', 'd', 'd', 'd', 'u', 'r', 'u', 'u', 'u', 'u', 'd', 'r', 'd', 'd'],\n   compress: ['l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'u', 'u', 'd', 'd', 'd', 'd', 'r', 'u', 'u', 'u', 'u', 'r', 'd', 'd', 'd', 'd', 'r', 'u', 'u', 'u', 'u', 'r', 'd', 'd', 'd', 'd', 'r', 'u', 'u', 'u', 'u', 'r', 'd', 'd', 'd', 'd', 'r', 'd', 'd', 'd', 'd', 'r', 'u', 'u', 'u', 'u', 'u', 'l', 'u', 'r', 'u', 'l', 'u', 'r', 'u', 'l', 'u', 'r', 'u', 'l', 'u', 'r', 'd', 'r', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'u', 'r', 'u', 'u', 'u', 'u', 'u', 'u', 'u', 'u', 'd', 'r', 'd', 'd', 'd', 'd', 'd', 'd', 'u', 'r', 'u', 'u', 'u', 'u', 'd', 'r', 'd', 'd', 'r', 'd', 'u', 'u', 'u', 'u', 'r', 'u', 'd', 'd', 'd', 'd', 'd', 'd', 'r', 'd', 'u', 'u', 'u', 'u', 'u', 'u', 'u', 'u', 'r', 'u', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'r', 'd', 'r', 'u', 'u', 'l', 'u', 'r', 'u', 'l', 'u', 'r', 'u', 'l', 'u', 'r', 'u', 'l', 'u', 'r', 'u', 'l', 'u', 'r', 'u', 'l', 'r', 'd', 'd', 'd', 'd', 'r', 'd', 'd', 'd', 'd', 'r', 'u', 'u', 'u', 'u', 'r', 'd', 'd', 'd', 'd', 'r', 'u', 'u', 'u', 'u', 'r', 'd', 'd', 'd', 'd', 'r', 'u', 'u', 'u', 'u', 'r', 'd', 'd', 'd', 'd', 'r', 'u', 'u', 'u', 'u'],\n   // speed: [], \n   // slow: [], \n   immortality: ['d', 'd', 'l', 'u', 'd', 'd', 'l', 'u', 'd', 'd', 'l', 'u', 'd', 'd', 'l', 'u', 'l', 'd', 'd', 'r', 'l', 'l', 'd', 'l', 'l', 'u', 'r', 'r', 'u', 'l', 'l', 'l', 'd', 'l', 'u', 'r', 'u', 'l', 'l', 'd', 'u', 'l', 'u', 'r', 'l', 'l', 'u', 'r', 'l', 'l', 'u', 'r', 'u', 'l', 'u', 'r', 'u', 'l', 'r', 'r', 'u', 'l', 'r', 'r', 'u', 'l', 'r', 'r', 'r', 'u', 'l', 'l', 'r', 'u', 'r', 'r', 'u', 'd', 'd', 'r', 'u', 'u', 'r', 'd', 'd', 'r', 'u', 'r', 'd', 'd', 'l', 'r', 'r', 'u', 'd', 'r', 'd', 'l', 'r', 'r', 'd', 'l', 'r', 'd', 'r', 'u', 'r', 'd', 'u', 'r', 'u', 'l', 'r', 'u', 'r', 'd', 'u', 'u', 'r', 'u', 'r', 'd', 'd', 'l', 'r', 'u', 'r', 'u', 'u', 'r', 'd', 'd', 'r', 'u', 'u', 'd', 'r', 'r', 'd', 'l', 'd', 'r', 'r', 'u', 'd', 'd', 'r', 'u', 'd', 'r', 'd', 'l', 'r', 'r', 'd', 'l', 'd', 'r', 'd', 'l', 'd', 'r', 'l', 'd', 'l', 'u', 'd', 'd', 'l', 'u', 'd', 'd', 'l', 'u', 'd', 'd', 'l', 'u', 'u', 'd', 'l', 'd', 'd', 'l', 'u', 'u', 'l', 'd', 'd', 'u', 'l', 'u', 'u', 'l', 'd', 'd', 'u', 'l', 'u', 'u', 'l', 'd', 'u', 'u', 'l', 'd', 'u', 'u'],\n   freeze: ['r', 'r', 'l', 'l', 'l', 'l', 'l', 'u', 'l', 'r', 'r', 'r', 'r', 'r', 'l', 'u', 'l', 'l', 'l', 'l', 'l', 'u', 'l', 'r', 'r', 'r', 'r', 'r', 'l', 'u', 'l', 'l', 'l', 'l', 'l', 'u', 'l', 'l', 'l', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'l', 'u', 'l', 'l', 'l', 'l', 'l', 'u', 'r', 'r', 'r', 'r', 'u', 'l', 'l', 'l', 'r', 'u', 'r', 'r', 'r', 'r', 'r', 'u', 'l', 'l', 'l', 'r', 'r', 'r', 'u', 'r', 'd', 'r', 'u', 'r', 'd', 'r', 'u', 'd', 'd', 'r', 'u', 'r', 'd', 'r', 'u', 'd', 'd', 'r', 'u', 'r', 'd', 'r', 'd', 'l', 'r', 'r', 'd', 'l', 'd', 'r', 'r', 'd', 'l', 'd', 'r', 'd', 'r', 'd', 'l', 'd', 'r', 'd', 'l', 'd', 'r', 'l', 'd', 'l', 'd', 'r', 'd', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'u', 'l', 'r', 'r', 'r', 'r', 'r', 'l', 'u', 'l', 'l', 'l', 'l', 'l', 'u', 'l', 'r', 'r', 'r', 'r', 'r', 'l', 'u', 'l', 'l', 'l', 'l', 'l', 'r', 'd', 'r', 'd', 'r', 'd', 'r', 'd', 'r', 'd', 'r', 'r', 'r', 'r', 'r', 'r', 'd', 'l', 'l', 'l', 'l', 'l', 'r', 'r', 'r', 'r', 'd', 'l', 'l', 'l', 'd', 'r', 'r', 'l', 'l', 'l', 'l', 'l', 'd', 'r', 'r', 'r', 'l', 'l', 'l', 'd', 'l', 'u', 'l', 'd', 'l', 'u', 'l', 'd', 'u', 'u', 'l', 'd', 'l', 'u', 'l', 'd', 'u', 'u', 'l', 'd', 'l', 'u', 'l', 'u', 'r', 'l', 'l', 'u', 'r', 'u', 'l', 'l', 'u', 'r', 'u', 'l', 'u', 'r', 'l', 'l', 'u', 'r', 'u', 'l', 'u', 'r', 'u', 'l', 'r', 'u', 'r', 'u', 'l', 'u', 'r'],\n   // stimulate: ['r', 'r', 'u', 'u', 'u', 'u', 'u', 'r', 'r', 'r', 'r', 'r', 'r', 'u', 'u', 'u', 'u', 'r', 'u', 'u', 'l', 'u', 'l', 'r', 'd', 'r', 'd', 'r', 'd', 'r', 'd', 'r', 'd', 'r', 'd', 'u', 'l', 'u', 'l', 'u', 'l', 'l', 'l', 'd', 'l', 'r', 'r', 'r', 'd', 'l', 'l', 'l', 'l', 'd', 'r', 'r', 'r', 'l', 'l', 'l', 'l', 'l', 'u', 'd', 'l', 'd', 'l', 'r', 'r', 'r', 'r', 'r', 'r', 'l', 'd', 'l', 'l', 'l', 'l', 'l', 'l', 'd', 'l', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'l', 'd', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'd', 'l', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'l', 'd', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'd', 'l', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'l', 'd', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'd', 'l', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'l', 'd', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'd', 'l', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'l', 'd', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'r', 'd', 'r', 'r', 'r', 'r', 'r', 'l', 'd', 'l', 'd', 'l', 'u', 'l', 'l', 'd', 'l', 'd', 'l', 'd', 'd', 'l', 'u'], \n   // poison: ['l', 'l', 'l', 'l', 'l', 'l', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'l', 'd', 'l', 'l', 'l', 'u', 'l', 'r', 'r', 'r', 'r', 'r', 'u', 'l', 'l', 'l', 'l', 'l', 'l', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'd', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'd', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'l', 'd', 'l', 'l', 'l', 'l', 'l', 'l', 'u', 'u', 'u', 'u', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'u', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'u', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'r', 'u', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'u', 'r', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'r', 'u', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'u', 'r', 'r', 'r', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'r', 'r', 'u', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'u', 'r', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'u', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'u', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'u', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'l', 'u', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'u', 'l', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'l', 'l', 'u', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'u', 'l', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'l', 'u', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'u', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'u', 'r', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'u', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'u', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'd', 'l', 'l', 'l', 'l', 'u', 'l', 'l', 'l', 'l', 'r', 'r', 'r', 'r', 'd', 'r', 'r', 'r', 'r', 'u', 'u', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'l', 'l', 'u', 'l', 'l', 'l', 'l', 'l'], \n   neutralize: ['r', 'r', 'u', 'u', 'u', 'u', 'u', 'r', 'r', 'r', 'r', 'r', 'r', 'u', 'u', 'u', 'u', 'r', 'u', 'u', 'l', 'u', 'l', 'r', 'd', 'r', 'd', 'r', 'd', 'r', 'd', 'r', 'd', 'r', 'd', 'u', 'l', 'u', 'l', 'u', 'l', 'l', 'l', 'd', 'l', 'r', 'r', 'r', 'd', 'l', 'l', 'l', 'l', 'd', 'r', 'r', 'r', 'l', 'l', 'l', 'l', 'l', 'u', 'd', 'l', 'd', 'l', 'r', 'r', 'r', 'r', 'r', 'r', 'l', 'd', 'l', 'l', 'l', 'l', 'l', 'l', 'd', 'l', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'l', 'd', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'd', 'l', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'l', 'd', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'd', 'l', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'l', 'd', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'd', 'l', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'l', 'd', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'd', 'l', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'l', 'd', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'r', 'd', 'r', 'r', 'r', 'r', 'r', 'l', 'd', 'l', 'd', 'l', 'u', 'l', 'l', 'd', 'l', 'd', 'l', 'd', 'd', 'l', 'u'],\n   toxin: ['l', 'l', 'l', 'l', 'l', 'l', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'd', 'l', 'd', 'l', 'l', 'l', 'u', 'l', 'r', 'r', 'r', 'r', 'r', 'u', 'l', 'l', 'l', 'l', 'l', 'l', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'd', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'd', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'l', 'd', 'l', 'l', 'l', 'l', 'l', 'l', 'u', 'u', 'u', 'u', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'u', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'u', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'r', 'u', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'u', 'r', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'r', 'u', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'u', 'r', 'r', 'r', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'r', 'r', 'u', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'u', 'r', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'u', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'u', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'u', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'l', 'u', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'u', 'l', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'l', 'l', 'u', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'u', 'l', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'l', 'u', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'u', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'u', 'r', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'u', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'u', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'd', 'l', 'l', 'l', 'l', 'u', 'l', 'l', 'l', 'l', 'r', 'r', 'r', 'r', 'd', 'r', 'r', 'r', 'r', 'u', 'u', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'r', 'l', 'l', 'u', 'l', 'l', 'l', 'l', 'l'], // Same as stimulate\n   spore: ['u', 'l', 'u', 'u', 'l', 'u', 'l', 'u', 'u', 'u', 'u', 'r', 'u', 'r', 'r', 'r', 'r', 'd', 'r', 'r', 'r', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'd', 'l', 'r', 'r', 'r', 'l', 'l', 'd', 'l', 'l', 'd', 'r', 'l', 'l', 'd', 'r', 'd', 'l', 'd', 'l', 'd', 'r', 'd', 'l', 'd', 'r', 'd', 'l', 'r', 'd', 'r', 'd', 'l', 'd', 'r', 'r', 'd', 'l', 'r', 'r', 'd', 'l', 'r', 'r', 'r', 'd', 'l', 'l', 'r', 'r', 'r', 'd', 'r', 'u', 'r', 'd', 'r', 'u', 'r', 'd', 'u', 'r', 'r', 'r', 'u', 'l', 'l', 'r', 'r', 'r', 'u', 'l', 'r', 'r', 'u', 'l', 'r', 'r', 'u', 'l', 'u', 'r', 'u', 'r', 'u', 'l', 'u', 'r', 'u', 'l', 'u', 'r', 'l', 'u', 'l', 'u', 'r', 'u', 'l', 'l', 'u', 'r', 'l', 'l', 'u', 'r', 'l', 'l', 'l', 'u', 'l', 'l', 'l', 'd', 'd', 'd', 'd', 'u', 'u', 'u', 'u', 'r', 'r', 'r', 'd', 'd', 'd', 'd', 'l', 'd', 'l', 'd', 'd', 'r', 'r', 'u', 'r', 'u', 'r', 'r', 'r', 'r', 'd', 'd', 'd', 'l', 'l', 'l', 'l', 'r', 'r', 'r', 'r', 'd', 'd', 'd', 'l', 'l', 'l', 'l', 'u', 'l', 'u', 'l', 'l', 'd', 'd', 'r', 'd', 'r', 'd', 'd', 'd', 'd', 'l', 'l', 'l', 'u', 'u', 'u', 'u', 'd', 'd', 'd', 'd', 'l', 'l', 'l', 'u', 'u', 'u', 'u', 'r', 'u', 'r', 'u', 'u', 'l', 'l', 'd', 'l', 'd', 'l', 'l', 'l', 'l', 'u', 'u', 'u', 'r', 'r', 'r', 'r', 'l', 'l', 'l', 'l', 'u', 'u', 'u', 'r', 'r', 'r', 'r', 'd', 'r', 'd', 'r', 'r', 'd', 'd', 'r', 'r', 'u', 'u', 'l'],\n   secrete: ['u', 'l', 'u', 'u', 'l', 'u', 'l', 'u', 'u', 'u', 'u', 'r', 'u', 'r', 'r', 'r', 'r', 'd', 'r', 'r', 'r', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'l', 'd', 'l', 'r', 'r', 'r', 'l', 'l', 'd', 'l', 'l', 'd', 'r', 'l', 'l', 'd', 'r', 'd', 'l', 'd', 'l', 'd', 'r', 'd', 'l', 'd', 'r', 'd', 'l', 'r', 'd', 'r', 'd', 'l', 'd', 'r', 'r', 'd', 'l', 'r', 'r', 'd', 'l', 'r', 'r', 'r', 'd', 'l', 'l', 'r', 'r', 'r', 'd', 'r', 'u', 'r', 'd', 'r', 'u', 'r', 'd', 'u', 'r', 'r', 'r', 'u', 'l', 'l', 'r', 'r', 'r', 'u', 'l', 'r', 'r', 'u', 'l', 'r', 'r', 'u', 'l', 'u', 'r', 'u', 'r', 'u', 'l', 'u', 'r', 'u', 'l', 'u', 'r', 'l', 'u', 'l', 'u', 'r', 'u', 'l', 'l', 'u', 'r', 'l', 'l', 'u', 'r', 'l', 'l', 'l', 'u', 'l', 'l', 'l', 'd', 'd', 'd', 'd', 'u', 'u', 'u', 'u', 'r', 'r', 'r', 'd', 'd', 'd', 'd', 'l', 'd', 'l', 'd', 'd', 'r', 'r', 'u', 'r', 'u', 'r', 'r', 'r', 'r', 'd', 'd', 'd', 'l', 'l', 'l', 'l', 'r', 'r', 'r', 'r', 'd', 'd', 'd', 'l', 'l', 'l', 'l', 'u', 'l', 'u', 'l', 'l', 'd', 'd', 'r', 'd', 'r', 'd', 'd', 'd', 'd', 'l', 'l', 'l', 'u', 'u', 'u', 'u', 'd', 'd', 'd', 'd', 'l', 'l', 'l', 'u', 'u', 'u', 'u', 'r', 'u', 'r', 'u', 'u', 'l', 'l', 'd', 'l', 'd', 'l', 'l', 'l', 'l', 'u', 'u', 'u', 'r', 'r', 'r', 'r', 'l', 'l', 'l', 'l', 'u', 'u', 'u', 'r', 'r', 'r', 'r', 'd', 'r', 'd', 'r', 'r', 'd', 'd', 'r', 'r', 'u', 'u', 'l'] // Same as spore (Should not differ)\n};","class Button extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         down: false, // Is mouse down?\n         backgroundColor: 'rgb(240, 240, 240)' // Initialize backgroundColor style in state so it can be edited and re-rendered with React\n      };\n      this.style = {};\n      this.menuType = props.menuType;\n      this.instance = props.instance;\n      // this.index = menus[this.menuType].options.indexOf(capitalize(this.instance)); // Not currently in use\n\n      this.handleClick = this.handleClick.bind(this); // Bind this. reference value to class functions\n      this.handleMouseOver = this.handleMouseOver.bind(this);\n      this.handleMouseOut = this.handleMouseOut.bind(this);\n      this.handleMouseUp = this.handleMouseUp.bind(this);\n      this.handleMouseDown = this.handleMouseDown.bind(this);\n   }\n\n   handleClick() {\n      switch (this.instance) {\n         case 'leave game':\n         case 'leave tutorial':\n            org.clearIntervals(); // Copied from die()\n            ability = new Ability({ player: socket.id }); // Reset ability object\n            if (getSrc().src === 'game') { // No game object in pause tutorial menu\n               socket.emit('Leave Game', game);\n               for (let i = 0; i < game.board.list.length; i++) {\n                  if (game.board.list[i].player == socket.id) { // Find player in leaderboard\n                     game.board.list.splice(i, 1); // Remove player from leaderboard\n                     orderBoard(game.board.list); // Sort the list\n                     socket.emit('Board', game.board); // Send updated board to server\n                     break;\n                  }\n               }\n            }\n            if (getSrc().src === 'tutorial') {\n               tutorial.clear(); // Clear tutorial intervals\n            }\n            org = undefined; // Clear org variable\n            renderTitle();\n            title = new Title();\n            break;\n      }\n   }\n   handleMouseOver() {\n      let page = document.body.parentNode;\n      if (!mouseDown || !this.state.down) { // If the mouse was lifted not over the button, state should not be down, but won't be detected as such by the button, hence mouseDown defined elsewhere\n         this.setState({\n            down: false,\n            backgroundColor: 'rgb(220, 220, 220)'\n         });\n      } else {\n         if (this.state.down) {\n            this.setState({ backgroundColor: 'rgb(200, 200, 200)' });\n            mouseDown = true;\n         }\n      }\n   }\n   handleMouseOut() {\n      this.setState({ backgroundColor: 'rgb(240, 240, 240)' });\n   }\n   handleMouseUp() {\n      this.style.backgroundColor = 'rgb(220, 220, 220)';\n      this.setState({ down: false });\n   }\n   handleMouseDown() {\n      this.setState({ backgroundColor: 'rgb(200, 200, 200)' });\n      this.setState({ down: true });\n   }\n\n   componentWillMount() {\n      let page = document.body.parentNode;\n      if (!mouseDown) this.setState({ down: false });\n   }\n   render() {\n      let style = {};\n      for (let i in this.style) {\n         style[i] = this.style[i];\n      }\n      style.backgroundColor = this.state.backgroundColor;\n\n      return (\n         <button\n            id={this.instance + ' input'} \n            className='menubutton' \n            type='button' \n            style={style} \n            onMouseOver={this.handleMouseOver} \n            onMouseOut={this.handleMouseOut} \n            onMouseDown={this.handleMouseDown} \n            onMouseUp={this.handleMouseUp} \n            onClick={this.handleClick}\n         ></button>\n      );\n   }\n}\n","class List extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         value: props.value, // Currently selected list item\n         options: [],\n         focused: false, // focused by cursor\n         backgroundColor: 'rgb(255, 255, 255)'\n      };\n      this.style = {};\n      this.menuType = props.menuType;\n      this.instance = props.instance;\n      // this.index = menus[this.menuType].options.indexOf(capitalize(this.instance)); // Gets index of input within menu - Not currently in use\n\n      this.applyInstance = this.applyInstance.bind(this);\n      this.handleChange = this.handleChange.bind(this);\n      this.handleFocus = this.handleFocus.bind(this);\n      this.handleKeyDown = this.handleKeyDown.bind(this);\n   }\n\n   applyInstance() {\n      let info = []; // Info array holds config data for option elements to be created later\n      let unset = true; // If value is unset initially, will set value to first in list\n      switch (this.instance) {\n         case 'world type':\n            info = [\n               { value: 'rectangle', inner: 'Square' },\n               { value: 'ellipse',   inner: 'Circle' }\n            ];\n            break;\n         case 'game mode':\n            for (let i in modes) {\n               let mode = modes[i];\n               let disabled = false;\n               if (i === 'ctf' || i === 'inf' || i === 'kth') disabled = true; // CTF, INF, and KTH modes are currently not available\n               info.push({ value: i, inner: modes[i], disabled: disabled });\n            }\n            break;\n         case 'color':\n            for (let i in orgColors[game.world.color]) { // Renders all colors as a ffa game; If it is a team mode, rendering should be blocked in Menu.render()\n               let color = i; // Key: Color name: String\n               let rgb = orgColors[game.world.color][i]; // Value: RGB: Object\n               info.push({ value: color, inner: color[0].toUpperCase() + color.slice(1), \n                  style: { backgroundColor: 'rgb(' + rgb.r + ',' + rgb.g + ',' + rgb.b + ')' }\n               });\n            }\n            if (this.menuType === 'respawn' || this.menuType === 'pauseGame') {\n               for (let i = 0; i < info.length; i++) {\n                  let color;\n                  for (let j in orgColors[game.world.color]) {\n                     if (orgColors[game.world.color][j] === org.color) {\n                        color = j;\n                        break;\n                     }\n                  }\n                  if (color === info[i].value) {\n                     this.setState({ value: info[i].value });\n                     unset = false;\n                     break;\n                  }\n               }\n            }\n            break;\n         case 'team':\n            if (getSrc().src === 'title') { // If in title, set game value to game in games array\n               for (let i = 0; i < games.length; i++) { // Update game on-load (Normally occurs in socket.js @ socket.on('Game')); Used for team option updates\n                  if (games[i].info.host === game.info.host) { // Identify game\n                     game = games[i]; // Set game to updated game from server array\n                     break;\n                  }\n               }\n            }\n            for (let i = 0; i < game.teams.length; i++) { // If is not a team mode, rendering should be blocked in Menu.render()\n               info.push({ value: teamColors[i], inner: teamColors[i][0].toUpperCase() + teamColors[i].slice(1) + ': ' + game.teams[i].length });\n            }\n            if (this.menuType === 'join') { // Team auto-selection in join menu\n               let lengths = game.teams.map((team) => team.length); // Array which records the number of players on each team\n               let min = { [0]: lengths[0] }; // min is an object whose only key is the index of the smallest team and whose value is the size of that team (start with first team by default)\n               for (let i = 0; i < info.length; i++) { // Must keep track of index of minimum team within teams array, so index is key within min\n                  if (min[i] > lengths[i+1]) {\n                     delete min[i]; // Remove previous team key-value pair (it is not minimum size)\n                     min[i+1] = lengths[i+1];\n                  }\n               }\n               for (let i in min) { // For-in loop only used so key in min object can be accessed\n                  this.setState({ value: info[parseInt(i)].value }); // i is of type string, so parseInt must be used to make type number\n                  unset = false;\n               }\n            } else if (this.menuType === 'respawn' || this.menuType === 'pauseGame') { // Team auto-selection in respawn menu\n               for (let i = 0; i < info.length; i++) {\n                  if (org.team === teamColors[i]) {\n                     this.setState({ value: info[i].value });\n                     unset = false;\n                     break;\n                  }\n               }\n            }\n            break;\n      }\n      if (unset) this.setState({ value: info[0].value }); // If no value has been set, set first option to select element's value\n      let ops = info.map((inf) => <option key={inf.value} value={inf.value} disabled={inf.disabled} style={inf.style}>{inf.inner}</option>); // Create option elements from info\n      this.setState({ options: ops });\n   }\n\n   handleChange(e) {\n      this.props.update(this.instance, e.target.value); // Update local value and menu based on current instance and value\n   }\n   handleFocus(e) {\n      if (e.type === 'focus') { // e.type: the type of event (focus or blur); typeof e.type is DOMString:\n         this.setState({ focused: true,  backgroundColor: 'rgb(230, 230, 230)' });\n      } else if (e.type === 'blur') {\n         this.setState({ focused: false, backgroundColor: 'rgb(255, 255, 255)' });\n      }\n   }\n   handleKeyDown(e) {\n      if (e.keyCode === 13) // If ENTER key is down\n         this.props.submit(this.menuType);\n   }\n\n   componentWillMount() { // Does not run when component is merely changed, only on initial mount\n      this.applyInstance();\n   }\n   componentDidMount() {\n      this.props.update(this.instance, this.state.value); // Update internal values of this and other inputs\n   }\n   componentWillReceiveProps(next) {\n      this.setState({ value: next.value });\n   }\n   render() {\n      let style = {};\n      for (let i in this.style) {\n         style[i] = this.style[i];\n      }\n      style.backgroundColor = this.state.backgroundColor;\n\n      return (\n         <select\n            id={this.instance + ' input'} \n            className='menuinput' \n            value={this.state.value} \n            style={style} \n            onChange={this.handleChange} \n            onFocus={this.handleFocus} \n            onBlur={this.handleFocus} \n            onKeyDown={this.handleKeyDown}\n            >{this.state.options}\n         </select>\n      );\n   }\n}\n","class Menu extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         instances: [], // Array of instances which should be displayed\n         values: Array(menus[props.type].options.length).fill(''), // Array of input values; includes all possible inputs, not just those rendered\n         issues: Array(menus[props.type].options.length + 1).fill([]) // +1 because issues includes issues which do not apply to any one instance\n      }; // Component state - not game state\n      this.type = props.type;\n      this.data = props.data;\n\n      this.instantiate = this.instantiate.bind(this);\n      this.update = this.update.bind(this);\n      this.issue = this.issue.bind(this);\n      if (this.type === 'join' || this.type === 'spectate' || this.type === 'respawn') {\n         game = props.data;\n      } // join, spectate, and respawn are the only menu types which use the data property\n      this.instantiate(); // Set initial instances\n   }\n\n   instantiate() { // Set initial instances of menus; called only inside constructor (do not use setState(), change state literally)\n      let insts = menus[this.type].options.map(op => op.toLowerCase()); // Set instances to all possible options to start\n      switch (this.type) {\n         case 'create':\n            insts.splice(insts.indexOf('player minimum'), 1); // Remove player min (ffa is selected by default)\n            insts.splice(insts.indexOf('team count'), 1); // Remove team count (ffa is selected by default)\n            break;\n         case 'join':\n            if (!this.data.info.protected || this.data.info.host === socket.id) // If the game is not password-protected; If player is host (If player just created the game and is now joining his own game)\n               insts.splice(insts.indexOf('password'), 1); // Remove the password input (there is no password necessary) (may be confusing if not removed)\n            switch (this.data.info.mode) { // Data is game object; instances of join menu are determined by game mode\n               case 'ffa':\n                  insts.splice(insts.indexOf('team'), 1); // Remove team selection (not team mode)\n                  insts.splice(insts.indexOf('auto assign'), 1); // Remove auto assign to team (not team mode)\n                  break;\n               case 'skm':\n                  insts.splice(insts.indexOf('color'), 1); // Remove color selection (color set by team selection)\n                  break;\n               case 'srv':\n                  insts.splice(insts.indexOf('team'), 1); // Remove team selection (not team mode)\n                  insts.splice(insts.indexOf('auto assign'), 1); // Remove auto assign to team (not team mode)\n                  break;\n               case 'ctf':\n                  insts.splice(insts.indexOf('color'), 1); // Remove color selection (color set by team selection)\n                  break;\n               case 'inf':\n                  insts.splice(insts.indexOf('color'), 1); // Remove color selection (color set by assigned infected status)\n                  insts.splice(insts.indexOf('team'), 1); // Remove team selection (not team mode)\n                  insts.splice(insts.indexOf('auto assign'), 1); // Remove auto assign to team (not team mode)\n                  break;\n               case 'kth':\n                  insts.splice(insts.indexOf('team'), 1); // Remove team selection (not team mode)\n                  insts.splice(insts.indexOf('auto assign'), 1); // Remove auto assign to team (not team mode)\n                  break;\n            }\n            break;\n         case 'spectate':\n            if (!this.data.info.protected || this.data.info.host === socket.id) // If the game is not password-protected; If player is host (If player just created the game and is now joining his own game)\n               insts.splice(insts.indexOf('password'), 1); // Remove the password input (there is no password necessary) (may be confusing if not removed)\n            break;\n         case 'respawn':\n            switch (this.data.info.mode) { // Data is game object; instances of join menu are determined by game mode\n               case 'ffa':\n                  insts.splice(insts.indexOf('team'), 1); // Remove team selection (not team mode)\n                  insts.splice(insts.indexOf('auto assign'), 1); // Remove auto assign to team (not team mode)\n                  break;\n               case 'skm':\n                  insts.splice(insts.indexOf('color'), 1); // Remove color selection (color set by team selection)\n                  break;\n               case 'srv':\n                  insts.splice(insts.indexOf('team'), 1); // Remove team selection (not team mode)\n                  insts.splice(insts.indexOf('auto assign'), 1); // Remove auto assign to team (not team mode)\n                  break;\n               case 'ctf':\n                  insts.splice(insts.indexOf('color'), 1); // Remove color selection (color set by team selection)\n                  break;\n               case 'inf':\n                  insts.splice(insts.indexOf('color'), 1); // Remove color selection (color set by assigned infected status)\n                  insts.splice(insts.indexOf('team'), 1); // Remove team selection (not team mode)\n                  insts.splice(insts.indexOf('auto assign'), 1); // Remove auto assign to team (not team mode)\n                  break;\n               case 'kth':\n                  insts.splice(insts.indexOf('team'), 1); // Remove team selection (not team mode)\n                  insts.splice(insts.indexOf('auto assign'), 1); // Remove auto assign to team (not team mode)\n                  break;\n            }\n            break;\n         case 'pauseGame':\n            switch (this.data.info.mode) { // Data is game object; instances of join menu are determined by game mode\n               case 'skm': // If players are sorted into teams/groups\n               case 'ctf':\n               case 'inf':\n                  insts.splice(insts.indexOf('color'), 1); // Remove color selection (color set automatically)\n                  break;\n            }\n            break;\n         // case 'pauseSpectate': break; // All possible optons are always used in pause spectate menu\n         // case 'pauseTutorial': break; // All possible optons are always used in pause tutorial menu\n      }\n      this.state.instances = insts; // Only set state value literally in constructor, else use setState()\n   }\n   update(instance, valuE) { // The purpose of update is to update the state of the menu depending on input values\n      let value = valuE;\n      let insts = menus[this.type].options.map(op => op.toLowerCase()); // Set local instances to lowercase options\n      let vals = this.state.values;\n      let index = menus[this.type].options.indexOf(capitalize(instance));\n      let elt = eid(instance + ' input'); // DOM node of instance input\n      let wInput = eid('world width input'); // Width input DOM node\n      let hInput = eid('world height input'); // Height input DOM node\n      let pmInput = eid('player minimum input'); // Player minimum input DOM node\n      let tcInput = eid('team count input'); // Team count input DOM node\n      let teamInput = eid('team input'); // Team selections input DOM node\n      let wI = menus[this.type].options.indexOf('World Width'); // Width input index (options and state values)\n      let hI = menus[this.type].options.indexOf('World Height'); // Height input index (options and state values)\n      let pmI = menus[this.type].options.indexOf('Player Minimum'); // Player minimum input index (options and state values)\n      let tcI = menus[this.type].options.indexOf('Team Count'); // Team count input index (options and state values)\n      if (menus[this.type].values[index] === 'number') { // Special editorial actions for number inputs only\n         value = parseFloat(value) ? parseFloat(value) : 0;\n         if (value % 1 !== 0) { // If value is not an integer, set it to the greatest integer\n            value = floor(value);\n         }\n      }\n      vals[index] = value; // Update input value\n      switch (instance) {\n         case 'world width':\n            vals[hI] = value; // Set world height value to given world width value (hI is hInput index in options array)\n            break;\n         case 'world height':\n            vals[wI] = value; // Set world width value to given world height value (wI is wInput index in options array)\n            break;\n         case 'player minimum':\n            if (tcInput && parseFloat(vals[tcI]) > value) // If team count is greater than player minimum\n               vals[tcI] = value; // Reduce team count to player minimum value (tcI is tcInput index in options array)\n            break;\n         case 'team count':\n            if (pmInput && parseFloat(vals[pmI]) > value) // If player minimum is greater than team count\n               vals[pmI] = value; // Reduce player minimum to team count (pmI is pmInput index in options array)\n            break;\n         case 'game mode': // Updates based upon game mode input changes\n            // Set displayed instances and special attributes\n            if (wInput) wInput.min = 300; // Set default width minimum value\n            if (hInput) hInput.min = 300; // Set default height minimum value\n            switch (value) {\n               case 'ffa':\n                  insts.splice(insts.indexOf('player minimum'), 1); // Remove player min\n                  insts.splice(insts.indexOf('team count'), 1); // Remove team count\n                  break;\n               case 'skm':\n                  insts.splice(insts.indexOf('player minimum'), 1); // Remove player min\n                  insts.splice(insts.indexOf('leaderboard length'), 1); // Remove leaderboard length\n                  break;\n               case 'srv':\n                  insts.splice(insts.indexOf('team count'), 1); // Remove team count\n                  break;\n               case 'ctf':\n                  insts.splice(insts.indexOf('leaderboard length'), 1); // Remove leaderboard length\n                  if (wInput) wInput.min = 700; // Dimensional minimums increase in ctf mode\n                  if (hInput) hInput.min = 700;\n                  break;\n               case 'inf':\n                  insts.splice(insts.indexOf('team count'), 1); // Remove team count\n                  break;\n               case 'kth':\n                  insts.splice(insts.indexOf('team count'), 1); // Remove team count\n                  break;\n            }\n            this.setState({ instances: insts });\n            break;\n         case 'auto assign':\n            if (value) teamInput.disabled = true; // If auto assign is selected, disable team selection input\n            else teamInput.disabled = false;\n            break;\n      }\n      for (let i = 0; i < vals.length; i++) {\n         if (vals[i] === 0) // If number (only number because of type comparison in ===) input value is 0 or empty (if empty would have already converted to 0)\n            vals[i] = ''; // Replace with an empty string so placeholder is rendered instead of 0\n      }\n      this.setState({ values: vals }); // Update values in state\n   }\n   issue(issues) { // issues: Array[ { instance: 'message' } ]\n      let count = issues.length;\n      let stateIssues = []; // Issues array to be stored in state: Array1[ Array2[ 'message0', ..., 'messageN' ] ] (index of Array1 refers to instance as in options array) (different format than incoming issues)\n      for (let i = 0; i < menus[this.type].options.length; i++) {\n         let instance = menus[this.type].options[i].toLowerCase(); // Save instance value from options into instance variable\n         stateIssues.push([]); // There exists an issues array for each possible option\n         for (let j = 0; j < count; j++) {\n            if (getKeys(issues[j])[0] === instance) { // If instance of issue is instance from options array\n               stateIssues[i].push(issues[j][instance]); // Add issue to messages array within instance index of state issues array\n               issues.splice(j, 1); // Remove issue from inputted issues array so it is not unnecessarily looped through\n               count--; // count must be reduced since length of issues is reduced\n               j--; // j must be reduced since the entire array is shifted back after splicing, so j need not be incremented (always do this after splicing iterated array)\n            }\n         }\n      }\n      if (issues.length) { // If there are any remaining issues (issues with instance '' which do not apply to any single input)\n         stateIssues.push([]); // Add an option non-specific array to the end of state issues to be rendered at the end of the menu\n         for (let i = 0; i < count; i++) { // count is the number of remaining issues\n            let key = getKeys(issues[i])[0];\n            stateIssues[stateIssues.length - 1].push(issues[i][key]); // Add reamining issues to last index of state issues array because they are displayed after all other issues at the bottom of the menu\n         }\n      }\n      this.setState({ issues: stateIssues });\n   }\n\n   render() {\n      let rows = [];\n      for (let i = 0; i < menus[this.type].options.length; i++) {\n         let instance = menus[this.type].options[i].toLowerCase(); // instance: name of input for identification purposes\n         if (this.state.instances.indexOf(instance) === -1) { // If local instance is not found within stated instances of the menu\n            continue; // it should not be rendered in the menu\n         } // Allows menus[type].xxxx[i] to be used in this loop without having to check if it should exist within the menu\n         let input;\n         if (menus[this.type].values[i] === 'text') {\n            input = <Text   key={instance} menuType={this.type} instance={instance} value={this.state.values[i]} update={this.update} submit={submit.bind(this)} />; // menuType: which menu is to be rendered\n         } else if (menus[this.type].values[i] === 'number') {\n            input = <Num    key={instance} menuType={this.type} instance={instance} value={this.state.values[i]} update={this.update} submit={submit.bind(this)} />;\n         } else if (menus[this.type].values[i] === 'list') {\n            input = <List   key={instance} menuType={this.type} instance={instance} value={this.state.values[i]} update={this.update} submit={submit.bind(this)} />; // instance: name of list to tell what to render\n         } else if (menus[this.type].values[i].indexOf('radio') !== -1) { // If 'radio' is anywhere within string\n            input = <Radios key={instance} menuType={this.type} instance={instance} value={this.state.values[i]} update={this.update} submit={submit.bind(this)} count={parseInt(menus[this.type].values[i])} />;\n         } else if (menus[this.type].values[i] === 'button') {\n            input = <Button key={instance} menuType={this.type} instance={instance} />; // Button does not need update since it has no internal value\n         } else {\n            input = menus[this.type].values[i];\n         }\n         let issues = this.state.issues[i].map((issues, ix) => (\n            <p key={ix} \n            style={ { \n               color: 'red', \n               display: (this.state.issues[i].length ? 'block' : 'none'), \n               margin: '5px 0px 3px 0px'\n            } }>{issues}</p>\n         ));\n         let row = (\n            <tr className='menurow' key={instance}>\n               <td className='menucell' key={0} style={ { textAlign: 'right' } }>{menus[this.type].options[i]}</td>\n               <td className='menucell' key={1} style={ { textAlign: 'left' } }>\n                  {input}\n                  {issues}\n               </td>\n            </tr>\n         );\n         rows.push(row);\n      }\n      if (this.state.issues[this.state.issues.length - 1].length) { // If there are non-specific issues, display them in an additional row at the bottom of the menu\n         let row = (\n            <tr className='menurow' key={'nonspecissues'}>\n               <td className='menucell' key={0}></td>\n               <td className='menucell' key={1} style={ { textAlign: 'left' } }>\n                  {this.state.issues[this.state.issues.length - 1].map((issues, ix) => (\n                     <p key={ix} \n                     style={ { \n                        color: 'red', \n                        display: 'block', \n                        margin: '5px 0px 3px 0px'\n                     } }>{issues}</p>\n                  ))}\n               </td>\n            </tr>\n         );\n         rows.push(row);\n      }\n\n      return ( // CanvasCont: zIndex = '-2'; Shade: z-index = '-1'; Menu: zIndex = '1'; (Unpredictable behavior if shade is 0)\n         <div id='menu'>\n            <Shade />\n            <CanvasCont />\n            <div id={this.type + 'Header'} className='header' style={ { zIndex: '1', opacity: '.95' } }>\n               <h2 className='headertext'>{menus[this.type].header}</h2>\n            </div>\n            <div className='content' style={ { zIndex: '1' } }>\n               <table id={this.type + 'Table'} className='menutable'>\n                  <tbody id='Menu Body'>\n                     {rows}\n                  </tbody>\n               </table>\n               <MenuSubmit menuType={this.type} values={this.state.values} submit={submit.bind(this)} />\n            </div>\n            <MenuFooter menuType={this.type} submit={submit.bind(this)} />\n         </div>\n      );\n   }\n}\n","class MenuFooter extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {};\n      this.style = {\n         zIndex: '1',\n         position: 'absolute',\n         opacity: '.95'\n      };\n      this.menuType = props.menuType;\n\n      this.handleClick = this.handleClick.bind(this);\n   }\n\n   handleClick() { // Click is handled on footer rather than back text so click applies to entire footer\n      switch (this.menuType) {\n         case 'create':\n            renderTitle();\n            break;\n         case 'join':\n            if (game.info.host == socket.id) { // If player is host (If player is joining directly after creating the game)\n               socket.emit('Game Ended', game);\n               renderTitle();\n            } else {\n               renderBrowser();\n            }\n            break;\n         case 'spectate':\n            renderBrowser();\n            break;\n         case 'pauseSpectate': // Do not use submit() so changes are not saved when using back button\n         case 'respawn':\n            state = 'spectate';\n            ReactDOM.render(<CanvasCont />, eid('cont'));\n            break;\n         case 'pauseGame': {\n            let skip = false;\n            for (let i = 0; i < game.players.length; i++) {\n               if (game.players[i] === socket.id) { // If still is a player\n                  state = 'game';\n                  skip = true;\n                  break;\n               }\n            }\n            if (!skip) {\n               for (let i = 0; i < game.spectators.length; i++) {\n                  if (game.spectators[i] === socket.id) {\n                     state = 'spectate'; // Must include spectate possibility in pause game; even though a spectator could never open pause game menu, he could be killed while in menu\n                     break;\n                  }\n               }\n            }\n            ReactDOM.render(<CanvasCont />, eid('cont'));\n            break;\n         }\n         case 'pauseTutorial':\n            state = 'tutorial';\n            ReactDOM.render(<CanvasCont />, eid('cont'));\n            break;\n      }\n   }\n\n   render() {\n      let style = {};\n      for (let i in this.style) {\n         style[i] = this.style[i];\n      }\n\n      return (\n         <div id='footerDiv' style={style} onClick={this.handleClick}>\n            <footer id='footer' className='menufooter'>\n               <p className='menufootertext'>&larr; Back</p>\n            </footer>\n         </div>\n      );\n   }\n}\n","class MenuSubmit extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         down: false, // Is mouse down?\n         backgroundColor: 'rgb(240, 240, 240)', // Initialize backgroundColor style in state so it can be edited and re-rendered with React\n         left: (window.innerWidth - 95) / 2 + 'px' // Submit width is 95px\n      };\n      this.menuType = props.menuType;\n\n      this.handleClick = this.handleClick.bind(this);\n      this.handleMouseOver = this.handleMouseOver.bind(this);\n      this.handleMouseOut = this.handleMouseOut.bind(this);\n      this.handleMouseDown = this.handleMouseDown.bind(this);\n      this.handleMouseUp = this.handleMouseUp.bind(this);\n   }\n\n   handleClick(e) { // Submit functions based upon menu type\n      this.props.submit(this.menuType);\n   }\n   handleMouseOver(e) {\n      let page = document.body.parentNode;\n      if (!mouseDown || !this.state.down) { // If the mouse was lifted not over the button, state should not be down, but won't be detected as such by the button, hence mouseDown defined elsewhere\n         this.setState({ down: false, backgroundColor: 'rgb(220, 220, 220)' });\n      } else {\n         if (this.state.down) {\n            this.setState({ backgroundColor: 'rgb(200, 200, 200)' });\n            mouseDown = true;\n         }\n      }\n   }\n   handleMouseOut(e) {\n      this.setState({ backgroundColor: 'rgb(240, 240, 240)' });\n   }\n   handleMouseDown(e) {\n      this.setState({\n         down: true,\n         backgroundColor: 'rgb(200, 200, 200)'\n      });\n   }\n   handleMouseUp(e) {\n      this.setState({\n         down: false,\n         backgroundColor: 'rgb(240, 240, 240)'\n      });\n   }\n\n   componentWillMount() {\n      let page = document.body.parentNode;\n      if (!mouseDown) this.setState({ down: false });\n   }\n   componentWillReceiveProps(next) {\n      this.setState({ left: (window.innerWidth - 95) / 2 + 'px' }); // Center submit button on the screen\n   }\n   render() {\n      let style = {};\n      style.backgroundColor = this.state.backgroundColor;\n      style.left = this.state.left;\n\n      return (\n         <button \n            id={this.menuType + 'Button'} \n            className='menusubmit' \n            type='button' \n            style={style} \n            onClick={this.handleClick} \n            onMouseOver={this.handleMouseOver} \n            onMouseOut={this.handleMouseOut} \n            onMouseDown={this.handleMouseDown} \n            onMouseUp={this.handleMouseUp}\n         ><p style={ { margin: 0 } }>{menus[this.menuType].button}</p>\n         </button>\n      );\n   }\n}\n","class Num extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         value: props.value, // Actuall value of the input field\n         focused: false, // If the user is focused on the field\n         backgroundColor: 'rgb(255, 255, 255)',\n         display: 'table-row' // Indicates whether 'display: none' property will be set on the container table row\n      };\n      this.style = {};\n      this.menuType = props.menuType; // Type of menu rendered inside\n      this.instance = props.instance; // Name of input\n      // this.index = menus[this.menuType].options.indexOf(capitalize(this.instance)); // Not currently in use\n      this.placeholder = null;\n\n      this.applyInstance = this.applyInstance.bind(this);\n      this.handleFocus = this.handleFocus.bind(this);\n      this.handleChange = this.handleChange.bind(this);\n      this.handleKeyDown = this.handleKeyDown.bind(this);\n   }\n   applyInstance() {\n      switch (this.instance) {\n         case 'world width':\n            this.placeholder = Defaults.worldwidth;\n            this.min = 300;\n            this.max = 100000;\n            break;\n         case 'world height':\n            this.placeholder = Defaults.worldheight;\n            this.min = 300;\n            this.max = 100000;\n            break;\n         case 'player minimum':\n            this.placeholder = Defaults.playermin;\n            this.min = 2;\n            break;\n         case 'player cap':\n            this.placeholder = Defaults.playercap;\n            this.min = 2;\n            break;\n         case 'leaderboard length':\n            this.placeholder = Defaults.boardlength;\n            this.min = 1;\n            this.max = 20;\n            break;\n         case 'team count':\n            this.placeholder = Defaults.teamcount;\n            this.min = 2;\n            this.max = teamColors.length;\n            break;\n      }\n   }\n\n   handleFocus(e) {\n      if (e.type === 'focus') { // If focus in\n         this.setState({ focused: true, backgroundColor: 'rgb(230, 230, 230)' }); // Darken\n      } else if (e.type === 'blur') { // If focus out\n         this.setState({ focused: false, backgroundColor: 'rgb(255, 255, 255)' }); // Lighten\n      }\n   }\n   handleChange(e) {\n      let val = e.target.value; // Create local, editable value\n      if (e.target.value % 1 !== 0) // If value is not an integer\n         val = floor(val); // Set value to greatest integer\n      this.props.update(this.instance, val); // Update local value and rest of menu if applicable\n   }\n   handleKeyDown(e) {\n      if (e.keyCode === 13) // If ENTER key is down\n         this.props.submit(this.menuType);\n   }\n\n   componentWillMount() { // Runs on initial mount, not every update\n      this.applyInstance();\n   }\n   componentDidMount() {\n      this.props.update(this.instance, this.state.value);\n   }\n   componentWillReceiveProps(next) {\n      this.setState({ value: next.value });\n   }\n   render() {\n      let style = {};\n      for (let i in this.style) {\n         style[i] = this.style[i];\n      }\n      style.backgroundColor = this.state.backgroundColor;\n\n      return (\n         <input \n            id={this.instance + ' input'} \n            className='menuinput' \n            type='number' \n            value={this.state.value} \n            placeholder={this.placeholder} \n            min={this.min} \n            max={this.max} \n            autoComplete='off' \n            style={style} \n            onFocus={this.handleFocus} \n            onBlur={this.handleFocus} \n            onChange={this.handleChange} \n            onKeyDown={this.handleKeyDown}\n         ></input>\n      );\n   }\n}\n","class Radio extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         value: props.value\n      };\n      this.style = {};\n      this.instance = props.instance;\n      this.order = props.order; // Index of radio within radio group (for identification purposes)\n   }\n\n   componentWillReceiveProps(next) {\n      this.setState({ value: next.value });\n   }\n   render() {\n      let style = {};\n      if (this.state.value)\n         style.backgroundColor = 'rgb(190, 190, 190)';\n      else\n         style.backgroundColor = 'rgb(255, 255, 255)';\n      return (\n         <div\n            id={this.instance + ' input ' + this.order} \n            className='menuradio' \n            type='radio' \n            style={style} \n            onClick={this.props.onClick}\n         ></div>\n      );\n   }\n}\n","class Radios extends React.Component {\n   constructor(props) {\n      super(props);\n      this.state = {\n         value: props.value, // Value is represented as index of radio which is selected (only one is selected at once) (null if none are selected)\n         selections: Array(props.count).fill(false) // Boolean array to show selection state of radios\n      };\n      this.count = props.count;\n      this.menuType = props.menuType;\n      this.instance = props.instance;\n      // this.index = menus[this.menuType].options.indexOf(capitalize(this.instance)); // Not currently in use\n\n      this.applyInstance = this.applyInstance.bind(this);\n   }\n\n   applyInstance() { // this.props.update should not be run within applyInstance since component is not yet mounted\n      switch (this.instance) {\n         case 'skin':\n            this.set = skins; // Set is an array of text to be displayed next to the radio inputs\n            if (this.menuType === 'respawn' || this.menuType === 'pauseGame') { // Placed outside and after above for loop so the above will occur by defualt and this will overwrite if applicable\n               for (let i = 0; i < skins.length; i++) {\n                  if (org && org.skin === skins[i]) {\n                     let sels = this.state.selections; // Create copy of state selections array\n                     sels.fill(false); // Set entire array to false\n                     sels[i] = true; // Set current skin to value true\n                     this.setState({ value: org.skin, selections: sels });\n                     break;\n                  }\n               }\n            }\n            break;\n         case '1st ability':\n            this.set = firsts; // Defined in config.js\n            if (this.menuType === 'respawn') {\n               let index;\n               let sels = this.state.selections; // Create copy of state selections array\n               sels.fill(false);\n               if (ability.extend.activated)\n                  index = 0; // Set index value of selected radio in radios\n               else if (ability.compress.activated)\n                  index = 1; // Set index value of selected radio in radios\n               sels[index] = true;\n               this.setState({ value: this.set[index], selections: sels });\n            }\n            break;\n         case '2nd ability':\n            this.set = seconds; // Defined in config.js\n            if (this.menuType === 'respawn') {\n               let index;\n               let sels = this.state.selections; // Create copy of state selections array\n               sels.fill(false);\n               if (ability.immortality.activated)\n                  index = 0; // Set index value of selected radio in radios\n               else if (ability.freeze.activated)\n                  index = 1; // Set index value of selected radio in radios\n               sels[index] = true;\n               this.setState({ value: this.set[index], selections: sels });\n            }\n            break;\n         case '3rd ability':\n            this.set = thirds; // Defined in config.js\n            if (this.menuType === 'respawn') {\n               let index;\n               let sels = this.state.selections; // Create copy of state selections array\n               sels.fill(false);\n               if (ability.neutralize.activated)\n                  index = 0; // Set index value of selected radio in radios\n               else if (ability.toxin.activated)\n                  index = 1; // Set index value of selected radio in radios\n               sels[index] = true;\n               this.setState({ value: this.set[index], selections: sels });\n            }\n            break;\n         case 'auto assign':\n            this.set = ['']; // Do not display any text adjacent to name label radio\n            if (this.menuType === 'respawn') {\n               if (ability.auto)\n                  this.setState({ value: 'auto assign', selections: [true] });\n               else\n                  this.setState({ value: '', selections: [false] });\n            }\n            break;\n         case 'name labels':\n            this.set = ['']; // Do not display any text adjacent to name label radio\n            if (Labels) // If name labels setting is on\n               this.setState({ value: this.instance, selections: [true] }); // Set value of Radios to instance value ('name labels') and select the radio\n            else\n               this.setState({ value: '', selections: [false] }); // Set value of Radios to '' (no value) and deselect the radio\n            break;\n         case 'messages':\n            this.set = ['']; // Do not display any text adjacent to name label radio\n            if (Messages) // If messages setting is on\n               this.setState({ value: this.instance, selections: [true] }); // Set value of Radios to instance value ('messages') and select the radio\n            else\n               this.setState({ value: '', selections: [false] }); // Set value of Radios to '' (no value) and deselect the radio\n            break;\n      }\n   }\n\n   handleClick(index) {\n      let selections = this.state.selections.slice(); // Copy state selections array into selections\n      let newValue = !selections[index]; // Flip selected radio value\n      selections.fill(false); // Set all selections to false\n      selections[index] = newValue; // Apply new value to selections array\n      let val;\n      if (this.set.length === 1 && this.set[0] === '') // If there is no text labeling radio, and there is only one radio in a set, set value to instance\n         val = selections[index] ? this.instance : ''; // If radio is selected, set value to instance; If deselected, value is empty string\n      else\n         val = selections[index] ? this.set[index] : ''; // If radio is selected, set value to radio label; If deselected, value is empty string\n      this.props.update(this.instance, val); // Update state value\n      this.setState({ selections: selections }); // Update selections\n   }\n\n   componentWillMount() {\n      this.applyInstance();\n   }\n   componentDidMount() { // Does not run when component is merely changed\n      this.props.update(this.instance, this.state.value);\n   }\n   componentWillReceiveProps(next) {\n      this.setState({ value: next.value });\n   }\n   render() {\n      let radios = [];\n      for (let i = 0; i < this.count; i++) {\n         radios.push(<Radio key={i} instance={this.instance} order={i} value={this.state.selections[i]} onClick={() => this.handleClick(i)} />); // Uses arrow function syntax so 'i' can be passed rather than event parameter\n      }\n      let elts = radios.map((radio, index) => ( // Add spacers under radio buttons; Last spacer is twice as high\n         <div key={index} onKeyDown={this.handleKeyDown}>\n            {radio}\n            <p className='menuradiotext'>{this.set[index] ? (this.set[index][0].toUpperCase() + this.set[index].slice(1)) : null}</p>\n            <div style={ { display: 'block', height: ((index === radios.length - 1) ? '6px' : '3px') } }></div>\n         </div>\n      )); // If this.set[index] is empty, do not render text (inner HTML of <p> is null)\n\n      return (\n         <div id={this.instance + ' input'} value={this.state.value}>\n            {elts}\n         </div>\n      );\n   }\n}\n","class Text extends React.Component { // Each input-type component renders a table row containing the input type\n   constructor(props) {\n      super(props);\n      this.state = {\n         value: props.value,\n         focused: false, // If the user is focused on the field\n         backgroundColor: 'rgb(255, 255, 255)' // Initialize backgroundColor style in state so it can be edited and re-rendered with React\n      };\n      this.style = {};\n      this.menuType = props.menuType;\n      this.instance = props.instance;\n      // this.index = menus[this.menuType].options.indexOf(capitalize(this.instance)); // Not currently in use\n\n      this.applyInstance = this.applyInstance.bind(this);\n      this.handleFocus = this.handleFocus.bind(this);\n      this.handleChange = this.handleChange.bind(this);\n      this.handleKeyDown = this.handleKeyDown.bind(this);\n   }\n   applyInstance() {\n      switch (this.instance) {\n         case 'password':\n            if (this.menuType === 'join') // Caution: password instance exists in create and join menus\n               socket.emit('Ask Permission', { pass: this.state.value, info: game.info }); // Add player to permissed list on server (if there is no password for game)\n            break;\n      }\n   }\n\n   handleFocus(e) {\n      if (e.type === 'focus') {\n         this.setState({ focused: true, backgroundColor: 'rgb(230, 230, 230)' });\n      } else if (e.type === 'blur') {\n         this.setState({ focused: false, backgroundColor: 'rgb(255, 255, 255)' });\n      }\n   }\n   handleChange(e) { // e.target is dom element of target\n      this.props.update(this.instance, e.target.value);\n      if (this.instance === 'password' && this.menuType === 'join') {\n         socket.emit('Ask Permission', { pass: e.target.value, info: game.info }); // Add player to permissed list on server (if correct password)\n      }\n   }\n   handleKeyDown(e) {\n      if (e.keyCode === 13) // If ENTER key is down\n         this.props.submit(this.menuType);\n   }\n\n   componentWillMount() {\n      this.applyInstance();\n   }\n   componentDidMount() {\n      this.props.update(this.instance, this.state.value);\n   }\n   componentWillReceiveProps(next) {\n      this.setState({ value: next.value });\n   }\n   render() {\n      let style = {};\n      for (let i in this.style) {\n         style[i] = this.style[i];\n      }\n      style.backgroundColor = this.state.backgroundColor;\n\n      return (\n         <input \n            id={this.instance + ' input'} \n            className='menuinput' \n            type='text' \n            value={this.state.value} \n            autoComplete='off' \n            style={style} \n            onFocus={this.handleFocus} \n            onBlur={this.handleFocus} \n            onChange={this.handleChange} \n            onKeyDown={this.handleKeyDown}\n         ></input>\n      );\n   }\n}\n","var menus = {\n   create: {\n      header: 'Game Creation Options',\n      button: 'Create',\n      options: [ 'Game Title', 'Password', 'World Type', 'World Width', 'World Height', 'Player Minimum', 'Player Cap', 'Team Count', 'Leaderboard Length', 'Game Mode' ],\n      values:  [ 'text',       'text',     'list',       'number',      'number',       'number',         'number',     'number',     'number',             'list'      ]\n   },\n   join: {\n      header: 'Join Game Options',\n      button: 'Join',\n      options: [ 'Screen Name', 'Password', 'Color', 'Skin',    '1st Ability', '2nd Ability', '3rd Ability', 'Team', 'Auto Assign' ],\n      values:  [ 'text',        'text',     'list',  '3 radio', '2 radio',     '2 radio',     '2 radio',     'list', '1 radio'     ]\n   },\n   spectate: {\n      header: 'Spectate Game Options',\n      button: 'Spectate',\n      options: [ 'Screen Name', 'Password' ],\n      values:  [ 'text',        'text'     ]\n   },\n   respawn: {\n      header: 'Spawn Options',\n      button: 'Spawn',\n      options: [ 'Color', 'Skin',    '1st Ability', '2nd Ability', '3rd Ability', 'Team', 'Auto Assign', 'Leave Game' ],\n      values:  [ 'list',  '3 radio', '2 radio',     '2 radio',     '2 radio',     'list', '1 radio'    , 'button'     ]\n   },\n   pauseGame: {\n      header: 'Pause Options',\n      button: 'Apply',\n      options: [ 'Color', 'Skin',    'Name Labels', 'Messages', 'Leave Game' ],\n      values:  [ 'list',  '3 radio', '1 radio',     '1 radio',  'button'     ]\n   },\n   pauseSpectate: {\n      header: 'Pause Options',\n      button: 'Apply',\n      options: [ 'Name Labels', 'Messages', 'Leave Game' ],\n      values:  [ '1 radio',     '1 radio',  'button'     ]\n   },\n   pauseTutorial: {\n      header: 'Pause Options',\n      button: 'Back',\n      options: [ 'Leave Tutorial' ],\n      values:  [ 'button'     ]\n   }\n};\n\nfunction renderMenu(type, data) {\n   if (state.indexOf('Menu') !== -1 && type !== state.slice(0, -4)) { // If current state is a menu and menu to be rendered is a different menu, unmount menu and re-render\n      ReactDOM.unmountComponentAtNode(eid('cont')); // Must first unmount component so Menu() will construct new instance rather than re-rendering (easier than re-constructing in componentWillReceiveProps() when rendering a menu from another menu)\n   }\n   ReactDOM.render(<Menu type={type} data={data} />, eid('cont')); // Render instance of Menu component class in container with id 'cont'\n   state = type + 'Menu'; // Game state - not component state\n}\n","function submit(menuType) {\n   let issues = []; // Array of objects [ { [instance]: 'error message' } ] (instance of input to render error message next to)\n   let ok = true; // Check for inputs' validities\n   let tInput = eid('game title input');\n   let pInput = eid('password input');\n   let typeInput = eid('world type input');\n   let widthInput = eid('world width input');\n   let heightInput = eid('world height input');\n   let pcInput = eid('player cap input');\n   let pmInput = eid('player minimum input');\n   let boardLengthInput = eid('leaderboard length input');\n   let tcInput = eid('team count input');\n   let modeInput = eid('game mode input');\n   let snInput = eid('screen name input');\n   let cInput = eid('color input');\n   let teamInput = eid('team input');\n   let gametitle = tInput ? tInput.value : null; // Reading values is ok, but do not edit direct to the DOM\n   let password = pInput ? pInput.value : null;\n   let type = typeInput ? typeInput.value.toLowerCase() : null;\n   let width = widthInput ? parseFloat(widthInput.value) : null;\n   let height = heightInput ? parseFloat(heightInput.value) : null;\n   let cap = pcInput ? parseFloat(pcInput.value) : null;\n   let minimum = pmInput ? parseFloat(pmInput.value) : null;\n   let show = boardLengthInput ? parseFloat(boardLengthInput.value) : null;\n   let teamCount = tcInput ? parseFloat(tcInput.value) : null;\n   let mode = modeInput ? modeInput.value : null;\n   let name = snInput ? snInput.value : null;\n   let color = cInput ? cInput.value.toLowerCase() : null;\n   let first = this.state.values[menus[this.type].options.indexOf('1st Ability')]; // this value must be instance of Menu component (bind this in submit property in menuSubmit rendering)\n   let second = this.state.values[menus[this.type].options.indexOf('2nd Ability')]; // Value of second ability input\n   let third = this.state.values[menus[this.type].options.indexOf('3rd Ability')]; // Valeu of third ability input\n   first = first ? first.toLowerCase() : ''; // toLowerCase() is separated so entire getting of first value need not be repeated in ternary expression\n   second = second ? second.toLowerCase() : '';\n   third = third ? third.toLowerCase() : '';\n   let skin = this.state.values[menus[this.type].options.indexOf('Skin')]; // this value must be instance of Menu component (bind this in submit property in menuSubmit rendering)\n   skin = skin || 'none'; // If no skin is selected, set value of skin to 'none'\n   let team = teamInput ? teamInput.value.toLowerCase() : null;\n   let auto = this.state.values[menus[this.type].options.indexOf('Auto Assign')]; // this value must be instance of Menu component (bind this in submit property in menuSubmit rendering)\n   auto = auto ? true : false; // Set auto assign to Boolean value\n   let label = this.state.values[menus[this.type].options.indexOf('Name Labels')]; // this value must be instance of Menu component (bind this in submit property in menuSubmit rendering)\n   label = label === 'name labels' ? true : false; // Set label to Boolean value\n   let message = this.state.values[menus[this.type].options.indexOf('Messages')]; // this value must be instance of Menu component (bind this in submit property in menuSubmit rendering)\n   message = message === 'messages' ? true : false; // Set messages to Boolean value\n   switch (menuType) {\n      case 'create':\n         { // Game Title\n            if (tInput) { // If title input exists\n               if (!gametitle) { // If empty\n                  ok = false;\n                  issues.push({ ['game title']: 'Title cannot be left blank' });\n                  // alert('Title cannot be left blank');\n               } else {\n                  for (let i = 0; i < games.length; i++) {\n                     if (gametitle === games[i].info.title) { // Find matching title to another game\n                        ok = false;\n                        issues.push({ ['game title']: 'Title matches that of another game' });\n                        // alert('Title matches that of another game');\n                        break;\n                     }\n                  }\n               }\n            }\n         } { // World Width and Height\n            if (widthInput && heightInput) { // If width and height inputs exist\n               if (!width && width !== 0) { // If width input is empty\n                  width = parseFloat(widthInput.placeholder); // Set width to default (rendered in placeholder)\n               }\n               if (!height && height !== 0) { // If height input is empty\n                  height = parseFloat(heightInput.placeholder); // Set height to default (rendered in placeholder)\n               }\n               if (width < parseFloat(widthInput.min) || height < parseFloat(heightInput.min)) {\n                  ok = false;\n                  issues.push({ ['world width']: 'Dimensions must be at least ' + widthInput.min + ' x ' + heightInput.min + ' px' });\n                  issues.push({ ['world height']: 'Dimensions must be at least ' + widthInput.min + ' x ' + heightInput.min + ' px' });\n                  // alert('Dimensions must be at least ' + widthInput.min + ' x ' + heightInput.min + ' px');\n               } else if (width > parseFloat(widthInput.max) || height > parseFloat(heightInput.max)) {\n                  ok = false;\n                  issues.push({ ['world width']: 'Dimensions can be at most ' + widthInput.max + ' x ' + heightInput.max + ' px' });\n                  issues.push({ ['world height']: 'Dimensions can be at most ' + widthInput.max + ' x ' + heightInput.max + ' px' });\n                  // alert('Dimensions can be at most ' + widthInput.max + ' x ' + heightInput.max + ' px');\n               }\n               if (width % 1 !== 0 || height % 1 !== 0) {\n                  ok = false;\n                  issues.push({ ['world width']: 'Width and height must be whole numbers' });\n                  issues.push({ ['world height']: 'Width and height must be whole numbers' });\n                  // alert('Width and height must be whole numbers');\n               }\n               if (width != height) {\n                  ok = false;\n                  issues.push({ ['world width']: 'Width and height must be equivalent' });\n                  issues.push({ ['world height']: 'Width and height must be equivalent' });\n                  // alert('Width and height must be equivalent');\n               }\n            }\n         } { // Player Cap\n            if (pcInput) { // If player cap input exists\n               if (!cap && cap !== 0) { // If player cap input is left empty\n                  cap = parseFloat(pcInput.placeholder); // Set cap to default as rendered as placeholder\n               } else if (cap < parseFloat(pcInput.min)) {\n                  ok = false;\n                  issues.push({ ['player cap']: 'Player cap must be at least ' + parseFloat(pcInput.min) });\n                  // alert('Player cap must be at least ' + parseFloat(pcInput.min));\n               } else if (cap % 1 !== 0) {\n                  ok = false;\n                  issues.push({ ['player cap']: 'Player cap must be a whole number' });\n                  // alert('Player cap must be a whole number');\n               } else if (pmInput ? cap < parseFloat(pmInput.value) : false) { // If player minimum input exists and player cap is less than player minimum value\n                  ok = false;\n                  issues.push({ ['player cap']: 'Player cap cannot be less than player minimum' });\n                  // alert('Player cap cannot be less than player minimum');\n               }\n            }\n         } { // Player Minimum\n            if (pmInput) { // If player minimum input exists\n               if (!minimum && minimum !== 0) { // If player minimum input is left empty\n                  minimum = parseFloat(pmInput.placeholder); // Set player minimum to default rendered as placeholder\n               } else if (minimum < parseFloat(pmInput.min)) {\n                  ok = false;\n                  issues.push({ ['player minimum']: 'Player minimum must be at least ' + parseFloat(pmInput.min) });\n                  // alert('Player minimum must be at least ' + parseFloat(pmInput.min));\n               } else if (minimum % 1 !== 0) {\n                  ok = false;\n                  issues.push({ ['player minimum']: 'Player minimum must be a whole number' });\n                  // alert('Player minimum must be a whole number');\n               }\n            }\n         } { // Leaderboard Length\n            if (boardLengthInput) { // If leaderboard length input exists\n               if (!show && show !== 0) { // If input is left blank\n                  show = parseFloat(boardLengthInput.placeholder);\n               } else if (show < parseFloat(boardLengthInput.min)) {\n                  ok = false;\n                  issues.push({ ['leaderboard length']: 'Leaderboard length must be at least ' + parseFloat(boardLengthInput.min) });\n                  // alert('Leaderboard length must be at least ' + parseFloat(boardLengthInput.min));\n               } else if (show > parseFloat(boardLengthInput.max)) {\n                  ok = false;\n                  issues.push({ ['leaderboard length']: 'Leaderboard length can be at most ' + parseFloat(boardLengthInput.max) });\n                  // alert('Leaderboard length can be at most ' + parseFloat(boardLengthInput.max));\n               } else if (show % 1 !== 0) {\n                  ok = false;\n                  issues.push({ ['leaderboard length']: 'Leaderboard length must be a whole number' });\n                  // alert('Leaderboard length must be a whole number');\n               }\n            }\n         } { // Team Count\n            if (tcInput) { // If team count input exists\n               if (!teamCount && teamCount !== 0) { // If team count input is left empty\n                  teamCount = parseFloat(tcInput.placeholder); // Set team count to default rendered as placeholder\n               } else if (teamCount < parseFloat(tcInput.min)) {\n                  ok = false;\n                  issues.push({ ['team count']: 'Team count must be at least ' + parseFloat(tcInput.min) });\n                  // alert('Team count must be at least ' + parseFloat(tcInput.min));\n               } else if (teamCount > parseFloat(tcInput.max)) {\n                  ok = false;\n                  issues.push({ ['team count']: 'Team count can be at most ' + parseFloat(tcInput.max) });\n                  // alert('Team count can be at most ' + parseFloat(tcInput.max));\n               } else if (teamCount % 1 !== 0) {\n                  ok = false;\n                  issues.push({ ['team count']: 'Team count must be a whole number' });\n                  // alert('Team count must be a whole number');\n               } else if (teamCount > parseFloat(pcInput.value)) {\n                  ok = false;\n                  issues.push({ ['team count']: 'Player cap cannot be less than the number of teams' });\n                  // alert('Player cap cannot be less than the number of teams');\n               }\n            }\n         }\n         if (ok) {\n            let color = 'black'; // eid('World color input').value.toLowerCase(); // Only black world is enabled\n            createGame({\n               title: gametitle,\n               password: password,\n               type: type,\n               width: width,\n               height: height,\n               color: color,\n               cap: cap,\n               show: show,\n               mode: mode,\n               teamCount: teamCount,\n               min: minimum\n            });\n            renderMenu('join', game); // Pass in game data for certain menu information\n         } else {\n            this.issue(issues);\n         }\n         break;\n      case 'join':\n         { // Screen Name\n            if (!name) { // If screen name input is left empty\n               ok = false;\n               issues.push({ ['screen name']: 'Screen name cannot be left empty' });\n               // alert('Screen name cannot be left empty');\n            }\n            for (let i = 0; i < game.info.count; i++) { // Requires game to be updated (in renderMenu(datA))\n               if (name == game.board.list[i].name) { // Name cannot match another player's name\n                  ok = false;\n                  issues.push({ ['screen name']: 'Name matches that of another player' });\n                  // alert('Name matches that of another player');\n                  break;\n               }\n            }\n         }\n         // Skins\n         if (skins.indexOf(skin) === -1 && skin !== 'none') { // If the skin value is not 'none' or any other possible skin (should never occur)\n            ok = false;\n            issues.push({ skin: 'There is an issue with the skin selection' });\n         }\n         { // Abilities\n            if (game.info.mode === 'ffa' || game.info.mode === 'skm' || game.info.mode === 'srv' || game.info.mode === 'ctf' || game.info.mode === 'kth') { // FFA, SKM, SRV, CTF, and KTH all use standard ability set\n               if (!first) {\n                  ok = false;\n                  issues.push({ ['1st ability']: 'Select a first ability' });\n               } else if (first !== 'extend' && first !== 'compress') {\n                  ok = false;\n                  issues.push({ ['1st ability']: 'There is an issue with the first ability selection' });\n               }\n               if (!second) {\n                  ok = false;\n                  issues.push({ ['2nd ability']: 'Select a second ability' });\n               } else if (second !== 'immortality' && second !== 'freeze') {\n                  ok = false;\n                  issues.push({ ['2nd ability']: 'There is an issue with the second ability selection' });\n               }\n               if (!third) {\n                  ok = false;\n                  issues.push({ ['3rd ability']: 'Select a third ability' });\n               } else if (third !== 'neutralize' && third !== 'toxin') {\n                  ok = false;\n                  issues.push({ ['3rd ability']: 'There is an issue with the third ability selection' });\n               }\n            }\n         } { // Team\n            if (game.info.mode == 'skm' || game.info.mode == 'ctf') { // If is a team game\n               if (!auto) {\n                  for (let i = 0; i < game.teams.length; i++) {\n                     if (i === teamColors.indexOf(team)) { // If i is selected team\n                        continue;\n                     }\n                     if (game.teams[teamColors.indexOf(team)].length > game.teams[i].length) { // If there are more players on selected team than another\n                        if (org && typeof team === 'string' && org.team === team) { // If player is already on selected team\n                           break; // Allow spawn\n                        }\n                        ok = false;\n                        issues.push({ ['auto assign']: 'Cannot join ' + team + ' team because it already has more players than ' + teamColors[i] });\n                        // alert('Cannot join ' + team + ' team because it already has more players than ' + teamColors[i]);\n                        break;\n                     }\n                  }\n                  if (org && org.team !== team && game.teams[teamColors.indexOf(org.team)].length === game.teams[teamColors.indexOf(team)].length) {\n                     ok = false;\n                     issues.push({ ['auto assign']: 'Cannot join ' + team + ' team because it will have more players than ' + org.team });\n                     // alert('Cannot join ' + team + ' team because it will have more players than ' + org.team);\n                  }\n               }\n            }\n         } { // Player Cap\n            if (game.players.length >= game.info.cap) {\n               ok = false;\n               issues.push({ ['player cap']: 'Game is at maximum player capacity' });\n               // alert('Game is at maximum player capacity');\n            }\n         } { // Game Closed\n            let closed = true;\n            for (let i = 0; i < games.length; i++) {\n               if (games[i].info.host == game.info.host) {\n                  closed = false;\n                  break;\n               }\n            }\n            if (closed) {\n               ok = false;\n               // issues.push({ ['']: 'The game has closed' }); // Empty quotes for game closed instance because it is not specific to a single input\n               alert('The game has closed');\n               renderTitle();\n            }\n         } { // Password\n            socket.emit('Check Permission', { title: game.info.title, type: 'join' });\n            socket.on('Permission Denied', deniedJoin.bind(this)); // Call bound function so this.issues() can be called from within\n            socket.on('Permission Granted', grantedJoin.bind(this));\n\n            function deniedJoin() {\n               ok = false;\n               if (password == '' || typeof password != 'string') {\n                  ok = false;\n                  issues.push({ ['password']: 'A password is required for this game' });\n                  // alert('A password is required for this game');\n               } else {\n                  ok = false;\n                  issues.push({ ['password']: 'Password is invalid' });\n                  // alert('Password is invalid');\n               }\n               socket.removeListener('Permission Denied', deniedJoin.bind(this));\n            }\n\n            function grantedJoin() { // Function is defined locally so it cannot be called from the global scope (slightly better security)\n               if (ok) { // Inside 'Permission Granted' so can only be triggered once 'Permission Granted' has been received\n                  // Leaderboard\n                  let already = false;\n                  for (let i = 0; i < game.board.list.length; i++) {\n                     if (game.board.list[i].player == socket.id) {\n                        already = true;\n                        break;\n                     }\n                  }\n                  if (!already) {\n                     game.board.list.push({\n                        player: socket.id,\n                        name: name,\n                        kills: 0,\n                        deaths: 0,\n                        score: 0,\n                        wins: 0\n                     });\n                  }\n                  orderBoard(game.board.list);\n                  socket.emit('Board', game.board); // Must be before spawn because only runs when first entering server, and spawn() runs on respawn as well\n                  // Abilities\n                  if (game.info.mode === 'ffa' || game.info.mode === 'skm' || game.info.mode === 'srv' || game.info.mode === 'ctf' || game.info.mode === 'kth') { // FFA, SKM, SRV, CTF, and KTH all use standard ability set\n                     ability.tag.activated = false;\n                     ability.tag.can = false;\n                     if (first === 'extend') {\n                        ability.extend.activated = true;\n                        ability.extend.can = true;\n                        ability.compress.activated = false;\n                        ability.compress.can = false;\n                     } else if (first === 'compress') {\n                        ability.compress.activated = true;\n                        ability.compress.can = true;\n                        ability.extend.activated = false;\n                        ability.extend.can = false;\n                     }\n                     if (second === 'immortality') {\n                        ability.immortality.activated = true;\n                        ability.immortality.can = true;\n                        ability.freeze.activated = false;\n                        ability.freeze.can = false;\n                     } else if (second === 'freeze') {\n                        ability.freeze.activated = true;\n                        ability.freeze.can = true;\n                        ability.immortality.activated = false;\n                        ability.immortality.can = false;\n                     }\n                     if (third === 'neutralize') {\n                        ability.neutralize.activated = true;\n                        ability.neutralize.can = true;\n                        ability.toxin.activated = false;\n                        ability.toxin.can = false;\n                     } else if (third === 'toxin') {\n                        ability.toxin.activated = true;\n                        ability.toxin.can = true;\n                        ability.neutralize.activated = false;\n                        ability.neutralize.can = false;\n                     }\n                     ability.spore.activated = true;\n                     ability.spore.can = true;\n                     ability.secrete.activated = true;\n                     ability.secrete.can = false;\n                     for (let i = 0; i < ability.shoot.value.length; i++) {\n                        ability.shoot.can[i] = true;\n                        ability.shoot.value[i] = false;\n                     }\n                  } else if (game.info.mode === 'inf') {\n                     ability.tag.activated = true;\n                     ability.tag.can = true;\n                     ability.extend.activated = false;\n                     ability.extend.can = false;\n                     ability.compress.activated = false;\n                     ability.compress.can = false;\n                     ability.immortality.activated = false;\n                     ability.immortality.can = false;\n                     ability.freeze.activated = false;\n                     ability.freeze.can = false;\n                     ability.neutralize.activated = false;\n                     ability.neutralize.can = false;\n                     ability.toxin.activated = false;\n                     ability.toxin.can = false;\n                     ability.spore.activated = false;\n                     ability.spore.can = false;\n                     ability.secrete.activated = false;\n                     ability.secrete.can = false;\n                     for (let i = 0; i < ability.shoot.value.length; i++) {\n                        if (i == ability.tag.i) {\n                           ability.shoot.can[i] = true;\n                        } else {\n                           ability.shoot.can[i] = false;\n                        }\n                        ability.shoot.value[i] = false;\n                     }\n                  }\n                  // Team\n                  if (game.info.mode === 'skm' || game.info.mode === 'ctf') { // If is a team game\n                     ability.auto = auto; // auto variable is Boolean\n                     if (auto) { // If auto assign is selected\n                        let indices = [];\n                        let minimum = Infinity;\n                        for (let i = 0; i < game.teams.length; i++) { // Find team(s) with the fewest players and store their indices within game.teams array into indices array\n                           if (game.teams[i].length < minimum) { // If length is less than minimum\n                              minimum = game.teams[i].length; // Set length as new minimum\n                              indices = [i]; // Clear indices and push i\n                           } else if (game.teams[i].length == minimum) {\n                              indices.push(i);\n                           }\n                        }\n                        team = teamColors[indices[floor(random(0, indices.length))]]; // Set team to the team with the fewest players; If there are multiple, choose one at random\n                     }\n                     for (let i = 0; i < teamColors.length; i++) {\n                        if (team === teamColors[i]) {\n                           game.teams[i].push(socket.id); // Add player to selected team\n                           console.log(state);\n                           socket.emit('Teams', { teams: game.teams, host: game.info.host }); // Update server teams; host is for identification\n                           break;\n                        }\n                     }\n                  }\n                  // Color\n                  var color;\n                  if (game.info.mode === 'inf') { // If inf mode\n                     color = teamColorDef.green; // All players healthy by default\n                  } else if (game.info.mode !== 'skm' && game.info.mode !== 'ctf' && eid('color input')) { // If is not a team game and there is a color input field\n                     color = eid('color input').value.toLowerCase();\n                  } else {\n                     color = teamColorDef[team]; // Color must be after Team\n                  }\n                  // Initialize\n                  clearInterval(title.interval);\n                  if (game.rounds.util) {\n                     if (game.rounds.waiting) {\n                        initialize(game, { spectate: false, color: orgColors[game.world.color][color], skin: skin, team: team });\n                     } else {\n                        initialize(game, { spectate: true, color: orgColors[game.world.color][color], skin: skin, team: team });\n                     }\n                  } else {\n                     initialize(game, { spectate: false, color: orgColors[game.world.color][color], skin: skin, team: team });\n                  }\n               } else {\n                  this.issue(issues);\n               }\n            }\n            socket.removeListener('Permission Granted', grantedJoin.bind(this));\n         }\n         break;\n      case 'spectate':\n         { // Game Closed\n            let closed = true;\n            for (let i = 0; i < games.length; i++) {\n               if (games[i].info.host === game.info.host) {\n                  closed = false;\n                  break;\n               }\n            }\n            if (closed) {\n               ok = false;\n               // issues.push({ ['']: 'The game has closed' });\n               alert('The game has closed');\n               renderTitle();\n            }\n         } { // Screen Name\n            if (!name) {\n               ok = false;\n               issues.push({ ['screen name']: 'Screen name cannot be left empty' });\n               // alert('Screen name cannot be left empty');\n            }\n            for (let i = 0; i < game.info.count; i++) { // Requires game to be updated (in renderMenu(datA))\n               if (name === game.board.list[i].name) { // Name cannot match another player's name\n                  ok = false;\n                  issues.push({ ['screen name']: 'Name matches that of another player' });\n                  // alert('Name matches that of another player');\n                  break;\n               }\n            }\n         } { // Password\n            socket.emit('Check Permission', { title: game.info.title, type: 'spectate' });\n            socket.on('Permission Denied', deniedSpectate.bind(this));\n            socket.on('Permission Granted', grantedSpectate.bind(this));\n\n            function deniedSpectate() {\n               ok = false;\n               if (!password) {\n                  ok = false;\n                  issues.push('A password is required for this game');\n                  // alert('A password is required for this game');\n               } else {\n                  ok = false;\n                  issues.push('Password is invalid');\n                  // alert('Password is invalid');\n               }\n               socket.removeListener('Permission Denied', deniedSpectate.bind(this));\n               this.issue(issues);\n            }\n\n            function grantedSpectate() {\n               if (ok) { // Inside 'Permission Granted' so can only be triggered once 'Permission Granted' has been received\n                  // Leaderboard\n                  let already = false;\n                  for (let i = 0; i < game.board.list.length; i++) {\n                     if (game.board.list[i].player === socket.id) {\n                        already = true;\n                        break;\n                     }\n                  }\n                  if (!already) {\n                     game.board.list.push({ // Add player to leaderboard\n                        player: socket.id,\n                        name: name,\n                        kills: 0,\n                        deaths: 0,\n                        score: 0,\n                        wins: 0\n                     });\n                  }\n                  orderBoard(game.board.list);\n                  socket.emit('Board', game.board); // Must be before spawn because only runs when first entering server, and spawn() runs on respawn as well\n                  // Initialize\n                  clearInterval(title.interval);\n                  initialize(game, { spectate: true, color: undefined, skin: undefined });\n               } else {\n                  this.issue(issues);\n               }\n               socket.removeListener('Permission Granted', grantedSpectate.bind(this));\n            }\n         }\n         break;\n      case 'respawn':\n         if (skins.indexOf(skin) === -1 && skin !== 'none') // Skins\n            ok = false;\n            issues.push({ skin: 'There is an issue with the skin selection' });\n         { // Abilities\n            if (game.info.mode === 'ffa' || game.info.mode === 'skm' || game.info.mode === 'srv' || game.info.mode === 'ctf' || game.info.mode === 'kth') { // FFA, SKM, SRV, CTF, and KTH all use standard ability set\n               if (!first) {\n                  ok = false;\n                  issues.push({ ['1st ability']: 'Select a first ability' });\n               } else if (first !== 'extend' && first !== 'compress') {\n                  ok = false;\n                  issues.push({ ['1st ability']: 'There is an issue with the first ability selection' });\n               }\n               if (!second) {\n                  ok = false;\n                  issues.push({ ['2nd ability']: 'Select a second ability' });\n               } else if (second !== 'immortality' && second !== 'freeze') {\n                  ok = false;\n                  issues.push({ ['2nd ability']: 'There is an issue with the second ability selection' });\n               }\n               if (!third) {\n                  ok = false;\n                  issues.push({ ['3rd ability']: 'Select a third ability' });\n               } else if (third !== 'neutralize' && third !== 'toxin') {\n                  ok = false;\n                  issues.push({ ['3rd ability']: 'There is an issue with the third ability selection' });\n               }\n            }\n         } { // Team\n            if (game.info.mode === 'skm' || game.info.mode === 'ctf') { // If is a team game\n               ability.auto = auto; // auto variable is Boolean\n               if (!auto) { // If auto assign is not selected\n                  for (let i = 0; i < game.teams.length; i++) {\n                     if (i === teamColors.indexOf(team)) {\n                        continue;\n                     }\n                     if (game.teams[teamColors.indexOf(team)].length > game.teams[i].length) { // If chosen team has greater players than another team\n                        if (org && org.team === team && typeof team === 'string') { // If player is already on loaded team\n                           break; // Allow respawn\n                        } else {\n                           ok = false; // Disallow respawn\n                           issues.push({ ['team input']: 'Cannot join ' + team + ' team because it already has more players than ' + teamColors[i] });\n                           // alert('Cannot join ' + team + ' team because it already has more players than ' + teamColors[i]);\n                           break;\n                        }\n                     }\n                     if (org && org.team !== team && game.teams[teamColors.indexOf(org.team)].length === game.teams[teamColors.indexOf(team)].length) { // If chosen team has equal players as current team (and is not current team)\n                        ok = false; // Disallow respawn\n                        issues.push({ ['team input']: 'Cannot join ' + team + ' team because it will have more players than ' + org.team });\n                        // alert('Cannot join ' + team + ' team because it will have more players than ' + org.team);\n                     }\n                  }\n               } else { // If auto assign is selected\n                  let indices = [];\n                  let minimum = Infinity;\n                  for (let i = 0; i < game.teams.length; i++) { // Find team(s) with the fewest players and store their indices within game.teams array into indices array\n                     let l = game.teams[i].length;\n                     if (game.teams[i].indexOf(socket.id) != -1) { // If player is on given team\n                        l--; // Do not include player as part of the team, so if even numbers before, will replace back on the same team and not add extra to other team\n                     }\n                     if (l < minimum) { // If length is less than minimum\n                        minimum = l; // Set length as new minimum\n                        indices = [i]; // Clear indices and push i\n                     } else if (l == minimum) {\n                        indices.push(i);\n                     }\n                  }\n                  team = teamColors[indices[floor(random(0, indices.length))]]; // Set team to the team with the fewest players; If there are multiple, choose one at random\n               }\n            }\n         } { // Game Closed\n            let closed = true;\n            for (let i = 0; i < games.length; i++) {\n               if (games[i].info.host == game.info.host) {\n                  closed = false;\n                  break;\n               }\n            }\n            if (closed == true) {\n               ok = false;\n               // issues.push({ ['']: 'The game has closed' });\n               alert('The game has closed');\n               renderTitle();\n            }\n         }\n         if (ok) {\n            socket.emit('Spectator Spawned', game);\n            // Abilities\n            if (game.info.mode === 'ffa' || game.info.mode === 'skm' || game.info.mode === 'srv' || game.info.mode === 'ctf' || game.info.mode === 'kth') { // FFA, SKM, SRV, CTF, and KTH all use standard ability set\n               if (first === 'extend') {\n                  ability.extend.activated = true;\n                  ability.extend.can = true;\n                  ability.compress.activated = false;\n                  ability.compress.can = false;\n               } else if (first === 'compress') {\n                  ability.compress.activated = true;\n                  ability.compress.can = true;\n                  ability.extend.activated = false;\n                  ability.extend.can = false;\n               }\n               if (second === 'immortality') {\n                  ability.immortality.activated = true;\n                  ability.immortality.can = true;\n                  ability.freeze.activated = false;\n                  ability.freeze.can = false;\n               } else if (second === 'freeze') {\n                  ability.freeze.activated = true;\n                  ability.freeze.can = true;\n                  ability.immortality.activated = false;\n                  ability.immortality.can = false;\n               }\n               if (third === 'neutralize') {\n                  ability.neutralize.activated = true;\n                  ability.neutralize.can = true;\n                  ability.toxin.activated = false;\n                  ability.toxin.can = false;\n               } else if (third === 'toxin') {\n                  ability.toxin.activated = true;\n                  ability.toxin.can = true;\n                  ability.neutralize.activated = false;\n                  ability.neutralize.can = false;\n               }\n               ability.spore.activated = true;\n               ability.spore.can = true;\n               ability.secrete.activated = true;\n               ability.secrete.can = false;\n            } else if (game.info.mode === 'inf') {\n               ability.extend.activated = false;\n               ability.extend.can = false;\n               ability.compress.activated = false;\n               ability.compress.can = false;\n               ability.immortality.activated = false;\n               ability.immortality.can = false;\n               ability.freeze.activated = false;\n               ability.freeze.can = false;\n               ability.neutralize.activated = false;\n               ability.neutralize.can = false;\n               ability.toxin.activated = false;\n               ability.toxin.can = false;\n               ability.spore.activated = false;\n               ability.spore.can = false;\n               ability.secrete.activated = false;\n               ability.secrete.can = false;\n            }\n            // Team\n            if (game.info.mode === 'skm' || game.info.mode === 'ctf') { // If is a team game\n               if (org.team != team) { // Only add player to team if not already on team\n                  game.teams[teamColors.indexOf(team)].push(socket.id); // Add player to selected team\n                  game.teams[teamColors.indexOf(org.team)].splice(game.teams[teamColors.indexOf(org.team)].indexOf(socket.id), 1);\n                  console.log(state);\n                  socket.emit('Teams', { teams: game.teams, host: game.info.host }); // Host is for identification\n               }\n            }\n            // Color\n            if (game.info.mode === 'inf') { // If inf mode\n               color = teamColorDef.green; // All players healthy by default\n            } else if (game.info.mode != 'skm' && game.info.mode != 'ctf') { // If is not a team mode \n               color = eid('color input').value.toLowerCase();\n            } else {\n               color = teamColorDef[team]; // Color must be after Team\n            }\n            // Initialize\n            initialize(game, { spectate: false, color: orgColors[game.world.color][color], skin: skin, team: team });\n         } else {\n            this.issue(issues);\n         }\n         break;\n      case 'pauseGame':\n         if (skins.indexOf(skin) === -1 || skin === 'none') // Skins\n            issues.push({ skin: 'There is an issue with the skin selection' });\n         { // Game Closed\n            let closed = true;\n            for (let i = 0; i < games.length; i++) {\n               if (games[i].info.host === game.info.host) {\n                  closed = false;\n                  break;\n               }\n            }\n            if (closed) {\n               ok = false;\n               // issues.push({ ['']: 'The game has closed' });\n               alert('The game has closed');\n               renderTitle();\n            }\n         }\n         if (ok) {\n            if (game.info.mode !== 'skm' && game.info.mode !== 'ctf') { // If is not a team mode\n               org.color = orgColors[game.world.color][color]; // Set org color\n            } // Cannot change team in pause menu\n            org.skin = skin; // Set org skin\n            Labels = label; // Set labels setting (Boolean)\n            Messages = message; // Set messages setting (Boolean)\n            let skip = false;\n            for (let i = 0; i < game.players.length; i++) {\n               if (game.players[i] === socket.id) { // If still is a player\n                  state = 'game';\n                  skip = true;\n                  break;\n               }\n            }\n            if (!skip) {\n               for (let i = 0; i < game.spectators.length; i++) {\n                  if (game.spectators[i] === socket.id) {\n                     state = 'spectate'; // Must include spectate possibility in pause game; even though a spectator could never open pause game menu, he could be killed while in menu\n                     break;\n                  }\n               }\n            }\n            ReactDOM.render(<CanvasCont />, eid('cont'));\n         } else {\n            this.issue(issues);\n         }\n         break;\n      case 'pauseSpectate':\n         { // Game Closed\n            let closed = true;\n            for (let i = 0; i < games.length; i++) {\n               if (games[i].info.host === game.info.host) {\n                  closed = false;\n                  break;\n               }\n            }\n            if (closed) {\n               ok = false;\n               // issues.push({ ['']: 'The game has closed' });\n               alert('The game has closed');\n               renderTitle();\n            }\n         }\n         if (ok) {\n            Labels = label; // Set name labels setting (Boolean)\n            Messages = message; // Set messages setting (Boolean)\n            state = 'spectate';\n            ReactDOM.render(<CanvasCont />, eid('cont'));\n         } else {\n            this.issue(issues);\n         }\n         break;\n      case 'pauseTutorial':\n         if (ok) {\n            state = 'tutorial';\n            ReactDOM.render(<CanvasCont />, eid('cont'));\n         } else {\n            this.issue(issues);\n         }\n         break;\n   }\n}","let currentMessage = () => {\n   let message;\n   if (state === 'game' || state === 'spectate') {\n      if (org.alive) {\n         if (game.rounds.util) {\n            if (game.rounds.waiting == true && game.rounds.delayed == false) {\n               if (game.rounds.min - game.info.count == 1) {\n                  message = 'Waiting for ' + (game.rounds.min - game.info.count) + ' more player to join';\n               } else {\n                  message = 'Waiting for ' + (game.rounds.min - game.info.count) + ' more players to join';\n               }\n            } else if (game.rounds.waiting == true && game.rounds.delayed == true) { // Delay at round start\n               message = 'Round begins in: ' + (1 + floor((game.rounds.delaytime - (new Date() - game.rounds.delaystart)) / 1000)); // Add 1 to make ceiling function\n            } else if (game.rounds.waiting == false && game.rounds.delayed == true) { // Delay at round end\n               message = 'Round ends in: ' + (1 + floor((game.rounds.delaytime - (new Date() - game.rounds.delaystart)) / 1000)); // Add 1 to make ceiling function\n            }\n         }\n      } else if (!org.alive) {\n         if (game.rounds.util) {\n            if (game.rounds.waiting === true && game.rounds.delayed === false) { // Waiting for more players to join, not counting down yet\n               if (game.rounds.min - game.info.count == 1) {\n                  message = 'Waiting for ' + (game.rounds.min - game.info.count) + ' more player to join';\n               } else {\n                  message = 'Waiting for ' + (game.rounds.min - game.info.count) + ' more players to join';\n               }\n            } else if (game.rounds.waiting === true && game.rounds.delayed === true) { // Enough players have joined, counting down\n               message = 'Round begins in: ' + (1 + floor((game.rounds.delaytime - (new Date() - game.rounds.delaystart)) / 1000)); // Add 1 to make ceiling function\n            } else if (game.rounds.waiting === false && game.rounds.delayed === false) { // Round in progress\n               message = 'Wait for the round to complete';\n            } else if (game.rounds.waiting === false && game.rounds.delayed === true) {\n               message = 'Round ends in: ' + (1 + floor((game.rounds.delaytime - (new Date() - game.rounds.delaystart)) / 1000)); // Add 1 to make ceiling function\n            }\n         } else {\n            message = 'Press \\'' + Controls.respawn.key + '\\' to Spawn';\n         }\n      }\n   } else if (state === 'tutorial') {\n      switch (tutorial.task) {\n         case 'move':\n            message = 'Use W-A-S-D (Recommended) or the arrow keys to move';\n            break;\n         case 'fullscreen':\n            message = 'Press F11 to enter fullscreen mode (Recommended)';\n            break;\n         case 'survive':\n            message = 'If the crosshair is too far from the organism, it will die';\n            break;\n         case 'extend':\n            message = 'Use the EXTEND ability to increase the organism\\'s size';\n            break;\n         case 'immortality':\n            message = 'The IMMORTALITY ability will stop the natural atrophe of cells';\n            break;\n         case 'neutralize':\n            message = 'NEUTRALIZE will create a bubble of safety from enemy attacks';\n            break;\n         case 'shoot':\n            message = 'To COMPRESS or FREEZE an enemy, press the ability key to launch a spore in the direction of the cursor\\nThen press it again to activate the ability';\n            break;\n         case 'compress':\n            message = 'On hit, COMPRESS shrinks the size of the targeted enemy\\nCOMPRESS the bot to progress';\n            break;\n         case 'freeze':\n            message = 'On hit, FREEZE halts all natural processes within the enemy organism\\nFREEZE the bot to progress';\n            break;\n         case 'toxin':\n            message = 'TOXIN creates a localized bubble in which only you can survive';\n            break;\n         case 'spore':\n            if (tutorial.stopped) {\n               message = 'Reactivate the ability to cause all spores to secrete an acid, killing enemy cells';\n            } else {\n               message = 'Use SPORE to jettison outer cells in all directions (Space Bar)';\n            }\n            break;\n         case 'secrete':\n            message = 'Reactivate the ability to cause all spores to secrete an acid, killing enemy cells';\n            break;\n         case 'done':\n            message = 'Now that you\\'re ready, press ESC to return to the menu';\n            break;\n      }\n   }\n   return message;\n};\n\nfunction renderMessages() {\n   if (Messages == true) {\n      let message = currentMessage();\n      if (message != undefined) {\n         let src = getSrc();\n         fill(src.world.background.r, src.world.background.g, src.world.background.b); // Message shadows are rendered in renderWorld()\n         stroke(src.world.border.color.r, src.world.border.color.g, src.world.border.color.b);\n         strokeWeight(1);\n         textFont('Helvetica');\n         textSize(14);\n         if (src.world.color == 'black') {\n            textStyle(NORMAL);\n         } else if (src.world.color == 'white') {\n            textStyle(BOLD);\n         }\n         let breaks = freq(message, '\\n');\n         let width = messageWidth(message);\n         rect(25 + width / 2, 25 + 9 * breaks, 25 + width, 26 + 18 * breaks);\n         fill(src.world.border.color.r, src.world.border.color.g, src.world.border.color.b); // Same color as border to maintain contrast with background\n         noStroke();\n         text(message, 25, 30);\n      }\n   }\n}\n\nlet messageWidth = message => {\n   let lines = message.split('\\n');\n   let count = lines.length;\n   let lengths = [];\n   for (let i = 0; i < count; i++) {\n      lengths.push(lines[i].length);\n   }\n   return textWidth(lines[lengths.indexOf(max(lengths))]);\n};","var org;\nvar Org = function(datA) { // datA: { player: , color: , skin: , team: , spectate: , pos: , title: } (color and skin are required)\n   this.player = datA.player;\n   this.color = datA.color;\n   this.skin = datA.skin;\n   this.team = datA.team;\n   let src = getSrc();\n   if (src != undefined && src.src == 'game') {\n      if (game.rounds.util == true) {\n         this.ready = false; // org.ready ensures that org will only be forcibly respawned once\n      }\n      if (game.info.mode == 'srv' && game.rounds.waiting == false) {\n         this.spawn = false;\n      } else {\n         this.spawn = true; // Allowance to spawn\n      }\n      for (let i = 0; i < game.board.list.length; i++) {\n         if (game.board.list[i].player == this.player) { // Find player name in leaderboard list\n            this.name = game.board.list[i].name;\n         }\n      }\n   }\n   if (datA.spectate == true) {\n      this.speed = _spectatespeed; // Faster movement when spectating\n   } else {\n      this.speed = _movespeed; // Speed of position movement\n   }\n   this.cells = [];\n   this.count = 0;\n   this.x = function() { // The average of all cell x values \n      let sum = 0;\n      for (var i = 0; i < this.count; i++) {\n         sum += this.cells[i].x;\n      }\n      let average = sum / this.count;\n      return average;\n   };\n   this.y = function() { // The average of all cell y values\n      let sum = 0;\n      for (var i = 0; i < this.count; i++) {\n         sum += this.cells[i].y;\n      }\n      let average = sum / this.count;\n      return average;\n   };\n   if (datA.pos != undefined) {\n      this.pos = datA.pos;\n   } else {\n      do {\n         this.pos = { // Position is the target's location in the world\n            x: floor(random(game.world.x + 50 + _cellwidth / 2, game.world.x + game.world.width - 50 - _cellwidth / 2)), // +- 50 acts as buffer\n            y: floor(random(game.world.y + 50 + _cellwidth / 2, game.world.y + game.world.height - 50 - _cellwidth / 2))\n         };\n         var rePos = false;\n         if (game.world.type == 'rectangle') {\n            if (this.pos.x < game.world.x || this.pos.x > game.world.x + game.world.width || this.pos.y < game.world.y || this.pos.y > game.world.y + game.world.height) {\n               rePos = false;\n            }\n         } else if (game.world.type == 'ellipse') {\n            if (sq(this.pos.x - (game.world.x + game.world.width / 2)) / sq(game.world.width / 2) + sq(this.pos.y - (game.world.y + game.world.height / 2)) / sq(game.world.height / 2) >= 1) {\n               rePos = true;\n            }\n         }\n         for (let i = 0; i < game.info.count; i++) { // Org Overlap\n            for (let j = 0; j < game.orgs[i].count; j++) {\n               if (game.orgs[i].cells[j].x - game.orgs[i].cells[j].width <= this.pos.x && game.orgs[i].cells[j].x + game.orgs[i].cells[j].width >= this.pos.x && game.orgs[i].cells[j].y - game.orgs[i].cells[j].height <= this.pos.y && game.orgs[i].cells[j].y + game.orgs[i].cells[j].height >= this.pos.y) { // If position collides with enemy cell (Full width buffer is intended)\n                  rePos = true;\n                  break;\n               }\n            }\n            if (rePos == true) { break; }\n            let abilitY = game.abilities[i];\n            if (abilitY.secrete.value == true) { // Spore Secretions Overlap\n               for (let j = 0; j < abilitY.spore.count; j++) {\n                  let cell = abilitY.spore.spores[j];\n                  if (sqrt(sq(this.pos.x - cell.x) + sq(this.pos.y - cell.y)) <= abilitY.secrete.radius) {\n                     rePos = true;\n                     break;\n                  }\n               }\n            }\n            for (let j = 0; j < 3; j++) { // Shoot Secretions Overlap\n               if (abilitY.shoot.secrete[j].value == true) {\n                  let cell = abilitY.shoot.spore[j];\n                  let sec = abilitY.shoot.secrete[j];\n                  if (sqrt(sq(this.pos.x - cell.x) + sq(this.pos.y - cell.y)) <= sec.radius) {\n                     rePos = true;\n                     break;\n                  }\n               }\n            }\n            if (abilitY.toxin.value == true) { // Toxin Overlap\n               if (sqrt(sq(this.pos.x - abilitY.toxin.x) + sq(this.pos.y - abilitY.toxin.y)) <= abilitY.toxin.radius) {\n                  rePos = true;\n               }\n            }\n            if (rePos == true) { break; }\n         }\n      } while (rePos == true);\n   }\n   this.off = { // Offset is the difference between pos and center\n      x: this.pos.x - center.x,\n      y: this.pos.y - center.y\n   };\n   this.col = 10; // Collision radius (square) for crosshair\n   this.target = undefined; // ID of player which this org is currently targeting\n   this.clickbox = { // Targeting box for other orgs to click\n      width: undefined,\n      height: undefined,\n      x: undefined,\n      y: undefined,\n      left: this.pos.x,\n      right: this.pos.x,\n      top: this.pos.y,\n      bottom: this.pos.y,\n      buffer: _cellwidth / 2,\n      color: this.color\n   };\n   this.coefficient = -27.5;\n   this.range = 50;\n   this.alive = false;\n   this.hit = undefined;\n   this.count = this.cells.length;\n   this.intervals = []; // Store an array of intervals to be pushed to in case multiple intervals are created unintentionally, so they can be cleared\n   this.clearIntervals = () => {\n      for (let i = 0; i < this.intervals.length; i++) {\n         clearInterval(this.intervals[i]);\n      }\n      this.intervals = [];\n   };\n   this.tracker = {\n      start: undefined, \n      end: undefined, \n      elap: undefined\n   };\n};\n\nvar Cell = function(X, Y, orG) {\n   this.player = orG.player;\n   this.width = _cellwidth; // or 3x3\n   this.height = _cellwidth;\n   this.x = X;\n   this.y = Y;\n   this.color = orG.color;\n   this.r = function() { // Distance from org center\n      let distance = sqrt(sq(this.x - org.x()) + sq(this.y - org.y()));\n      return distance;\n   };\n   this.d = function(orG) { // Distance from target (Position in world)\n      let distance = sqrt(sq(this.x - orG.pos.x) + sq(this.y - orG.pos.y));\n      return distance;\n   };\n};\n\nfunction renderOrgs() {\n   let src = getSrc();\n   for (let i = 0; i < src.orgs.length; i++) {\n      for (let j = 0; j < src.orgs[i].count; j++) {\n         let cell = src.orgs[i].cells[j];\n         fill(src.orgs[i].color.r, src.orgs[i].color.g, src.orgs[i].color.b);\n         if (src.orgs[i].skin == 'grid') {\n            stroke(40, 40, 40); // Draw constant grid (natural grid is variable)\n            strokeWeight(.25);\n            rect(cell.x, cell.y, cell.width, cell.height);\n         } else if (src.orgs[i].skin == 'circles') {\n            noStroke();\n            ellipse(cell.x, cell.y, cell.width / 2, cell.height / 2);\n         } else if (src.orgs[i].skin == 'ghost') {\n            noFill();\n            stroke(src.orgs[i].color.r, src.orgs[i].color.g, src.orgs[i].color.b);\n            strokeWeight(1);\n            rect(cell.x, cell.y, cell.width, cell.height);\n         } else if (src.orgs[i].skin == 'none') {\n            stroke(src.orgs[i].color.r, src.orgs[i].color.g, src.orgs[i].color.b); // Stroke over natural grid\n            strokeWeight(1);\n            rect(cell.x, cell.y, cell.width, cell.height);\n         }\n      }\n   }\n}\n\nvar getRegionInfo = function(orG) {\n   var enclosed = [];\n   var exposed = [];\n   var adjacent = [];\n   for (let i = 0; i < orG.count; i++) {\n      let test = { x: undefined, y: undefined };\n      var left = false;\n      var top = false;\n      var right = false;\n      var bottom = false;\n      for (let j = 0; j < orG.count; j++) {\n         if (i != j) {\n            test = { // Left\n               x: orG.cells[i].x - orG.cells[i].width,\n               y: orG.cells[i].y\n            };\n            if (test.x == orG.cells[j].x && test.y == orG.cells[j].y) {\n               left = true; // There is a friendly cell to the left\n            }\n            test = { // Top\n               x: orG.cells[i].x,\n               y: orG.cells[i].y - orG.cells[i].height\n            };\n            if (test.x == orG.cells[j].x && test.y == orG.cells[j].y) {\n               top = true; // There is a friendly cell to the top\n            }\n            test = { // Right\n               x: orG.cells[i].x + orG.cells[i].width,\n               y: orG.cells[i].y\n            };\n            if (test.x == orG.cells[j].x && test.y == orG.cells[j].y) {\n               right = true; // There is a friendly cell to the right\n            }\n            test = { // Bottom\n               x: orG.cells[i].x,\n               y: orG.cells[i].y + orG.cells[i].height\n            };\n            if (test.x == orG.cells[j].x && test.y == orG.cells[j].y) {\n               bottom = true; // There is a friendly cell to the bottom\n            }\n         }\n      }\n      if (left == true && top == true && right == true && bottom == true) { // If cell is enclosed on all sides by friendly cells\n         enclosed.push(orG.cells[i]);\n      } else { // If cell is not enclosed on all sides by friendly cells\n         exposed.push(orG.cells[i]);\n      }\n      if (left == false) { // Push all empty regions adjacent to org\n         adjacent.push({ x: orG.cells[i].x - orG.cells[i].width, y: orG.cells[i].y });\n      }\n      if (top == false) {\n         adjacent.push({ x: orG.cells[i].x, y: orG.cells[i].y - orG.cells[i].height });\n      }\n      if (right == false) {\n         adjacent.push({ x: orG.cells[i].x + orG.cells[i].width, y: orG.cells[i].y });\n      }\n      if (bottom == false) {\n         adjacent.push({ x: orG.cells[i].x, y: orG.cells[i].y + orG.cells[i].height });\n      }\n   }\n   for (var j = 0; j < adjacent.length; j++) { // Splice out empty regions adjacent to multiple cells\n      for (var k = 0; k < adjacent.length; k++) {\n         if (j != k) { // If adjacent[j] and adjacent[k] are different regions\n            if (adjacent[k].x == adjacent[j].x && adjacent[k].y == adjacent[j].y) { // If region is repeated\n               adjacent.splice(k, 1);\n               k--;\n            }\n            if (j >= adjacent.length) {\n               continue;\n            }\n         }\n      }\n   }\n   return {\n      enclosed: enclosed,\n      exposed: exposed,\n      adjacent: adjacent\n   };\n};","function spawn(datA) { // datA: { color: {}, skin: '', team: '' }\n   state = 'game';\n   org = new Org({ player: socket.id, color: datA.color, skin: datA.skin, team: datA.team, spectate: false });\n   org.cells[0] = new Cell(org.pos.x, org.pos.y, org); // Create first cell in org\n   org.count++;\n   socket.emit('Player Joined', { info: game.info, org: org, ability: ability });\n}\n\nfunction spectate(datA) { // datA: { color: {}, pos: {}, skin: '', team: '' }\n   state = 'spectate';\n   socket.emit('Spectator Joined', game);\n   org = new Org( { player: socket.id, color: datA.color, skin: datA.skin, team: datA.team, pos: datA.pos, spectate: true } );\n}\n\nfunction renderUI() {\n   let src = getSrc();\n   // Crosshair\n   if (src.src != 'tutorial') {\n      noFill();\n      stroke(src.world.border.color.r, src.world.border.color.g, src.world.border.color.b);\n      strokeWeight(1);\n      line(org.pos.x - 4, org.pos.y, org.pos.x + 4, org.pos.y);\n      line(org.pos.x, org.pos.y - 4, org.pos.x, org.pos.y + 4);\n   }\n\n   // Targeting\n   if (org.target != undefined) { // If org is targenting a player\n      for (let i = 0; i < src.orgs.length; i++) {\n         if (src.orgs[i].player == org.target) { // Find targeted org\n            noFill();\n            stroke(src.orgs[i].clickbox.color.r, src.orgs[i].clickbox.color.g, src.orgs[i].clickbox.color.b);\n            strokeWeight(1);\n            rect(src.orgs[i].clickbox.x, src.orgs[i].clickbox.y, src.orgs[i].clickbox.width, src.orgs[i].clickbox.height, 2); // Draw Target Box\n         }\n      }\n   }\n\n   // Screen Name Labels\n   if (Labels == true && src.src == 'game') {\n      fill(game.world.border.color.r, game.world.border.color.g, game.world.border.color.b); // Same color as border to maintain contrast with background\n      noStroke();\n      textFont('Helvetica');\n      if (game.world.color == 'black') {\n         textStyle(NORMAL);\n      } else if (game.world.color == 'white') {\n         textStyle(BOLD);\n      }\n      textSize(10);\n      for (let i = 0; i < game.info.count; i++) {\n         for (let j = 0; j < game.board.list.length; j++) {\n            if (game.orgs[i].player == game.board.list[j].player) {\n               let x = function() { // x() and y() cannot be accessed through orgs array, so code is copied and edited from org file\n                  let sum = 0;\n                  for (let k = 0; k < game.orgs[i].count; k++) {\n                     sum += game.orgs[i].cells[k].x;\n                  }\n                  let average = sum / game.orgs[i].count;\n                  return average;\n               };\n               let y = function() {\n                  let sum = 0;\n                  for (let k = 0; k < game.orgs[i].count; k++) {\n                     sum += game.orgs[i].cells[k].y;\n                  }\n                  let average = sum / game.orgs[i].count;\n                  return average;\n               };\n               if (game.board.list[j].name.length <= 30) {\n                  text(game.board.list[j].name, x() - textWidth(game.board.list[j].name) / 2, y() + sqrt(sq(_cellwidth) * game.orgs[i].count / PI) + 2 * _cellwidth + 8); // sqrt expression approximates radius as a circle; 6 is buffer\n               } else {\n                  text(game.board.list[j].name.slice(0, 20) + '...', x() - textWidth(game.board.list[j].name.slice(0, 20)) / 2, y() + sqrt(sq(_cellwidth) * game.orgs[i].count / PI) + 2 * _cellwidth + 8); // sqrt expression approximates radius as a circle; 6 is buffer\n               }\n            }\n         }\n      }\n   }\n\n   // Ability Cooldowns\n   if (src.stopped != true) {\n      for (let i in ability) { // Regular Cooldowns\n         if (typeof ability[i] == 'object' && i !== 'shoot') {\n            if (ability[i].cooling == true) {\n               cooldown(ability[i]);\n            }\n         }\n      }\n      for (let i = 0; i < ability.shoot.value.length; i++) { // Shoot Cooldown\n         if (ability.shoot.cooling[i] == true) {\n            cooldown(ability.shoot);\n            break;\n         }\n      }\n   }\n\n   // Ability Tooltips\n   translate(org.off.x, org.off.y);\n   var current;\n   if (src.stopped == true) {\n      current = src.stopdate;\n   } else {\n      current = new Date(); // Set current time\n   }\n   if (ability.tag.activated == false) {\n      for (let i = 0; i < 4; i++) {\n         for (let j in ability) {\n            if (typeof ability[j] == 'object') {\n               if (ability[j].i == i) { // Find corresponding ability set to tooltip\n                  if (ability[j].activated == true) { // Find corresponding activated ability to tooltip\n                     if (j == 'spore' && ability.secrete.value == true) {\n                        continue; // Do not draw spore\n                     }\n                     if (j == 'secrete' && ability.secrete.value == false) {\n                        continue; // Do not draw secrete\n                     }\n                     fill(215);\n                     stroke(0);\n                     strokeWeight(1);\n                     rect(center.x - 150 + i * 100, height * 9 / 10 + 30, 24, 38, 0, 0, 4, 4); // Letter background box\n                     let letter;\n                     if (i == 0) {\n                        letter = Controls.ability1.key;\n                     } else if (i == 1) {\n                        letter = Controls.ability2.key;\n                     } else if (i == 2) {\n                        letter = Controls.ability3.key;\n                     } else if (i == 3) {\n                        if (Controls.ability4.key == ' ') {\n                           letter = '_'; // Display space bar as underscore\n                        } else {\n                           letter = Controls.ability4.key;\n                        }\n                     }\n                     fill(0);\n                     noStroke();\n                     textSize(14);\n                     textFont('Consolas');\n                     textStyle(BOLD);\n                     text(letter, center.x - 150 + i * 100 - textWidth(letter) / 2, height * 9 / 10 + 30 + 13);\n                     fill(0);\n                     stroke(0);\n                     strokeWeight(1);\n                     ellipse(center.x - 150 + i * 100, height * 9 / 10, 30); // Background ellipse; Necessary to cover the key tip\n                     fill(215);\n                     noStroke();\n                     if (ability[j].j == 0) { // If defensive ability (or spore)\n                        // Ability\n                        if (ability[j].value == true) { // If during ability\n                           arc(center.x - 150 + i * 100, height * 9 / 10, 29, 29, -90, -90 - (current - ability[j].start) / ability[j].time * 360); // Ability timeout timer\n                        } else if (ability[j].value == false && ability[j].can == false) { // If during cooldown\n                           arc(center.x - 150 + i * 100, height * 9 / 10, 29, 29, -90, -90 + (current - ability[j].end) / ability[j].cooldown * 360); // Ability cooldown timer\n                        } else if (ability[j].value == false && ability[j].can == true) { // If idling\n                           ellipse(center.x - 150 + i * 100, height * 9 / 10, 29);\n                        }\n                     } else if (ability[j].j == 1) { // If offensive ability\n                        if (ability[j].i < 3) { // If one of first three abilities (not secrete)\n                           noStroke();\n                           // Ability\n                           if (ability[j].can == true) { // Idle\n                              ellipse(center.x - 150 + i * 100, height * 9 / 10, 29);\n                           } else if (ability[j].can == false && current - ability[j].start <= ability[j].time) { // If during ability\n                              arc(center.x - 150 + i * 100, height * 9 / 10, 29, 29, -90, -90 - (current - ability[j].start) / ability[j].time * 360); // Ability timeout timer\n                           } else if (ability[j].can == false && current - ability[j].start > ability[j].time) { // If during cooldown\n                              arc(center.x - 150 + i * 100, height * 9 / 10, 29, 29, -90, -90 + (current - ability[j].end) / ability[j].cooldown * 360); // Ability cooldown timer\n                           }\n                           // Shoot\n                           if (j != 'toxin') { // Toxin does not shoot\n                              stroke(0);\n                              if (ability.shoot.value[i] == false && ability.shoot.can[i] == true) { // Idle\n                                 ellipse(center.x - 150 + i * 100 - 41, height * 9 / 10, 8);\n                              } else if (ability.shoot.value[i] == true && ability.shoot.can[i] == false) { // If is shooting\n                                 arc(center.x - 150 + i * 100 - 41, height * 9 / 10, 8, 8, -90, -90 - (current - ability.shoot.start[i]) / ability.shoot.time * 360); // Ability timeout timer\n                              } else if (ability.shoot.secrete[i].value == true) { // If is secreting\n                                 arc(center.x - 150 + i * 100 - 41, height * 9 / 10, 8, 8, -90, -90 - ((ability.shoot.end[i] - ability.shoot.start[i]) / ability.shoot.time * 360) - ((current - ability.shoot.secrete[i].start) / ability.secrete.time * (360 - (ability.shoot.end[i] - ability.shoot.start[i]) / ability.shoot.time * 360))); // Secretion timer\n                              } else if (current - ability.shoot.secrete[i].end < ability.shoot.cooldown[i]) {\n                                 arc(center.x - 150 + i * 100 - 41, height * 9 / 10, 8, 8, -90, -90 + ((current - ability.shoot.secrete[i].end) / ability.shoot.cooldown[i] * 360)); // Shoot cooldown timer (if no hit)\n                              }\n                           }\n                        } else if (ability[j].i == 3) { // Secrete\n                           if (ability[j].can == true) { // Idle\n                              ellipse(center.x - 150 + i * 100, height * 9 / 10, 29);\n                           } else if (ability[j].can == false && current - ability[j].start <= ability[j].time) { // If during ability\n                              arc(center.x - 150 + i * 100, height * 9 / 10, 29, 29, -90, -90 - ((ability.spore.end - ability.spore.start) / ability.spore.time * 360) - (current - ability[j].start) / ability[j].time * (360 - ((ability.spore.end - ability.spore.start) / ability.spore.time * 360))); // Ability cooldown timer\n                           }\n                        }\n                     }\n                     itemize(items[j], 1, { r: 0, g: 0, b: 0 }, center.x - 150 + i * 100, height * 9 / 10);\n                  }\n                  if (ability[j].value == true && ability[j].i < 3) { // Ability Activated Tooltip (Not for spore/secrete)\n                     if (ability[j].j == 0 || ability[j].i == 3) { // If defensive ability (+ secrete)\n                        fill(66, 244, 176); // Green\n                        noStroke();\n                        ellipse(center.x - 150 + i * 100 - 9, height * 9 / 10 - 37, 5, 5);\n                     } else if (ability[j].j == 1 && ability[j].i != 3) { // If offensive ability (No secrete)\n                        fill(255, 141, 135); // Red\n                        noStroke();\n                        ellipse(center.x - 150 + i * 100 + 9, height * 9 / 10 - 37, 5, 5);\n                     }\n                  }\n                  // fill(215);\n                  // ellipse(center.x - 150 + 3 * 100, height * 9 / 10, 29);\n               }\n            }\n         }\n      }\n   } else if (ability.tag.activated == true) {\n      fill(215);\n      stroke(0);\n      strokeWeight(1);\n      rect(center.x, height * 9 / 10 + 30, 24, 38, 0, 0, 4, 4); // Letter background box\n      let letter;\n      if (ability.tag.i == 0) {\n         letter = Controls.ability1.key;\n      } else if (ability.tag.i == 1) {\n         letter = Controls.ability2.key;\n      } else if (ability.tag.i == 2) {\n         letter = Controls.ability3.key;\n      } else if (ability.tag.i == 3) {\n         if (Controls.ability4.key == ' ') {\n            letter = '_';\n         } else {\n            letter = Controls.ability4.key;\n         }\n      }\n      fill(0);\n      noStroke();\n      textSize(14);\n      textFont('Consolas');\n      textStyle(BOLD);\n      text(letter, center.x - textWidth(letter) / 2, height * 9 / 10 + 30 + 13); // Letter text\n      // Ability Circles\n      fill(0);\n      stroke(0);\n      strokeWeight(1);\n      ellipse(center.x, height * 9 / 10, 30); // Background ellipse\n      fill(215);\n      noStroke();\n      if (ability.tag.can == true) { // Idle\n         ellipse(center.x, height * 9 / 10, 29);\n      } else if (ability.tag.can == false && current - ability.tag.start <= ability.tag.time) { // If during ability\n         arc(center.x, height * 9 / 10, 29, 29, -90, -90 - (current - ability.tag.start) / ability.tag.time * 360); // Ability timeout timer\n      } else if (ability.tag.can == false && current - ability.tag.start > ability.tag.time) { // If during cooldown\n         arc(center.x, height * 9 / 10, 29, 29, -90, -90 + (current - ability.tag.end) / ability.tag.cooldown * 360); // Ability cooldown timer\n      }\n      itemize(items.tag, 1, { r: 0, g: 0, b: 0 }, center.x, height * 9 / 10);\n      // Shoot\n      fill(215);\n      stroke(0);\n      if (ability.shoot.value[ability.tag.i] == false && ability.shoot.can[ability.tag.i] == true) { // Idle\n         ellipse(center.x - 41, height * 9 / 10, 8);\n      } else if (ability.shoot.value[ability.tag.i] == true && ability.shoot.can[ability.tag.i] == false) { // If is shooting\n         arc(center.x - 41, height * 9 / 10, 8, 8, -90, -90 - (current - ability.shoot.start[ability.tag.i]) / ability.shoot.time * 360); // Ability timeout timer\n      } else if (ability.shoot.secrete[ability.tag.i].value == true) { // If is secreting\n         arc(center.x - 41, height * 9 / 10, 8, 8, -90, -90 - ((ability.shoot.end[ability.tag.i] - ability.shoot.start[ability.tag.i]) / ability.shoot.time * 360) - ((current - ability.shoot.secrete[ability.tag.i].start) / ability.secrete.time * (360 - (ability.shoot.end[ability.tag.i] - ability.shoot.start[ability.tag.i]) / ability.shoot.time * 360))); // Secretion timer\n      } else if (current - ability.shoot.secrete[ability.tag.i].end < ability.shoot.cooldown[ability.tag.i]) {\n         arc(center.x - 41, height * 9 / 10, 8, 8, -90, -90 + ((current - ability.shoot.secrete[ability.tag.i].end) / ability.shoot.cooldown[ability.tag.i] * 360)); // Shoot cooldown timer (if no hit)\n      }\n      if (ability.tag.value == true) { // Ability Activated Tooltip (only green for tag)\n         fill(66, 244, 176); // Green\n         noStroke();\n         ellipse(center.x - 9, height * 9 / 10 - 37, 5, 5);\n      }\n   }\n   translate(-org.off.x, -org.off.y);\n}\n\nvar getSrc = function() {\n   let src;\n   switch (state) {\n      case 'game':\n      case 'spectate':\n      case 'respawnMenu':\n      case 'pauseGameMenu':\n      case 'pauseSpectateMenu':\n         src = game;\n         break;\n      case 'title':\n      case 'browser':\n      case 'createMenu':\n      case 'joinMenu':\n      case 'spectateMenu':\n         src = title;\n         break;\n      case 'tutorial':\n      case 'pauseTutorialMenu':\n         src = tutorial;\n         break;\n   }\n   return src;\n};\n\nfunction move() {\n   let keys = '';\n   if (keyIsDown(Controls.left1.code) || keyIsDown(Controls.left2.code)) {\n      keys += 'l';\n   }\n   if (keyIsDown(Controls.up1.code) || keyIsDown(Controls.up2.code)) {\n      keys += 'u';\n   }\n   if (keyIsDown(Controls.right1.code) || keyIsDown(Controls.right2.code)) {\n      keys += 'r';\n   }\n   if (keyIsDown(Controls.down1.code) || keyIsDown(Controls.down2.code)) {\n      keys += 'd';\n   }\n   switch (keys) {\n      case 'l':\n         org.pos.x -= org.speed;\n         break;\n      case 'u':\n         org.pos.y -= org.speed;\n         break;\n      case 'r':\n         org.pos.x += org.speed;\n         break;\n      case 'd':\n         org.pos.y += org.speed;\n         break;\n      case 'lu':\n         org.pos.x -= org.speed * cos45;\n         org.pos.y -= org.speed * cos45;\n         break;\n      case 'lr':\n         // Net zero\n         break;\n      case 'ld':\n         org.pos.x -= org.speed * cos45;\n         org.pos.y += org.speed * cos45;\n         break;\n      case 'ur':\n         org.pos.x += org.speed * cos45;\n         org.pos.y -= org.speed * cos45;\n         break;\n      case 'ud':\n         // Net zero\n         break;\n      case 'rd':\n         org.pos.x += org.speed * cos45;\n         org.pos.y += org.speed * cos45;\n         break;\n      case 'lur':\n         org.pos.y -= org.speed; // Net up\n         break;\n      case 'lud':\n         org.pos.x -= org.speed; // Net left\n         break;\n      case 'lrd':\n         org.pos.y += org.speed; // Net down\n         break;\n      case 'urd':\n         org.pos.x += org.speed; // Net right\n         break;\n      case 'lurd':\n         // Net zero\n         break;\n   }\n   if (keys != '') {\n      org.off.x = org.pos.x - center.x;\n      org.off.y = org.pos.y - center.y;\n   }\n}\n\nfunction run() {\n   if (!org.intervals.length) { // org.intervals array must be of length 0\n      org.intervals.push(setInterval(() => runLoop(), _ofrequency));\n   }\n}\n\nfunction runLoop() {\n   // Rounds\n   var current = new Date();\n   if (game.rounds.util) {\n      if (game.info.host == socket.id) { // Only if player is host\n         if (game.rounds.waiting == true && game.rounds.delayed == false && game.info.count >= game.rounds.min) { // If waiting, not delayed, and have minimum players\n            socket.emit('Round Delay', game);\n            game.rounds.delayed = true; // game will be overwritten, but this will stop host from emitting redundantly if org.interval is called again before game is updated\n         } else if (game.rounds.waiting == true && game.rounds.delayed == true && current - game.rounds.delaystart >= game.rounds.delaytime - 1000 && org.ready == false) { // Only host; If 1 second left in round-begin delay\n            socket.emit('Force Spawn', game.info);\n         }\n      }\n      if (game.info.mode == 'srv') { // Survival End-Game\n         if (game.rounds.waiting == false && game.rounds.delayed == false && game.info.count == 1 && game.players[0] == socket.id) { // If during game and player is winner\n            for (let i = 0; i < game.board.list.length; i++) {\n               if (game.board.list[i].player == socket.id) {\n                  socket.emit('Round End', game.info);\n                  game.board.list[i].wins++;\n                  orderBoard(game.board.list);\n                  socket.emit('Board', game.board);\n               }\n            }\n         }\n      }\n   }\n\n   grow(org);\n\n   // // Targeting DO NOT DELETE\n   // org.clickbox.left = org.x();\n   // org.clickbox.right = org.clickbox.left;\n   // org.clickbox.top = org.y();\n   // org.clickbox.bottom = org.clickbox.top;\n   // for (let i = 0; i < org.count; i++) { // Set the size of clickbox\n   //    if (org.cells[i].x - org.cells[i].width / 2 < org.clickbox.left) {\n   //       org.clickbox.left = org.cells[i].x - org.cells[i].width / 2;\n   //    }\n   //    if (org.cells[i].x + org.cells[i].width / 2 > org.clickbox.right) {\n   //       org.clickbox.right = org.cells[i].x + org.cells[i].width / 2;\n   //    }\n   //    if (org.cells[i].y - org.cells[i].height / 2 < org.clickbox.top) {\n   //       org.clickbox.top = org.cells[i].y - org.cells[i].height / 2;\n   //    }\n   //    if (org.cells[i].y + org.cells[i].height / 2 > org.clickbox.bottom) {\n   //       org.clickbox.bottom = org.cells[i].y + org.cells[i].height / 2;\n   //    }\n   // }\n   // org.clickbox.left -= org.clickbox.buffer;\n   // org.clickbox.right += org.clickbox.buffer;\n   // org.clickbox.top -= org.clickbox.buffer;\n   // org.clickbox.bottom += org.clickbox.buffer;\n   // org.clickbox.width = org.clickbox.right - org.clickbox.left;\n   // org.clickbox.height = org.clickbox.bottom - org.clickbox.top;\n   // org.clickbox.x = org.clickbox.left + org.clickbox.width / 2;\n   // org.clickbox.y = org.clickbox.top + org.clickbox.height / 2;\n\n   // CTF\n   if (game.info.mode == 'ctf') {\n      if (!game.flag.carried) {\n         if (org.pos.x - org.col > game.flag.x - game.flag.width / 2 && org.pos.x + org.col < game.flag.x + game.flag.width / 2 && org.pos.y - org.col > game.flag.y - game.flag.height / 2 && org.pos.y + org.col < game.flag.y + game.flag.height / 2) {\n            game.flag.carried = true;\n            game.flag.carrier = socket.id;\n            socket.emit('Flag', game);\n         }\n      }\n   }\n\n   socket.emit('Org', org);\n   if (org.count == 0) {\n      for (let i = 0; i < game.board.list.length; i++) {\n         if (game.board.list[i].player == socket.id) { // Add death to leaderboard\n            game.board.list[i].deaths++; // Add 1 to deaths counter\n            orderBoard(game.board.list); // Sort the list by kills then deaths\n            socket.emit('Board', game.board); // Send updated board to server\n         }\n      }\n      if (org.hit != org.player) { // Cannot gain kill for suicide\n         for (let i = 0; i < game.board.list.length; i++) {\n            if (game.board.list[i].player == org.hit) { // Find killer in leaderboard list\n               game.board.list[i].kills++;\n               orderBoard(game.board.list);\n               socket.emit('Board', game.board);\n               break;\n            }\n         }\n      }\n      die(true);\n   }\n}\n\nfunction grow(orG) {\n   let org = orG;\n   // Avoid double intervals\n   if (org.tracker.start) { // If tracker has been started\n      org.tracker.end = Date.now();\n      org.tracker.elap = org.tracker.end - org.tracker.start;\n   }\n   if (org.tracker.elap < _ofrequency * .6) {\n      switch (state) {\n         case 'game': // Only necessary in game, others states may be added\n         case 'pauseGameMenu':\n            org.clearIntervals();\n            org.intervals.push(setInterval(() => runLoop(), _ofrequency));\n            break;\n      }\n   }\n   let src = getSrc();\n   let ability;\n   for (let i = 0; i < src.abilities.length; i++) {\n      if (src.abilities[i].player == org.player) {\n         ability = src.abilities[i];\n         break;\n      }\n   }\n   // Birth\n   var regions = getRegionInfo(org);\n   if (ability.freeze.value == false) { // If org is not Frozen (cannot birth or die naturally)\n      // for (let a = 0; a < ability.stimulate.factor; a++) { // Multiply runs by factor of stimulate OLD\n      // if (ability.poison.value == true) {\n      // \tif (random(0, ability.poison.factor) >= 1) { // Divide runs by factor of poison (Runs 1 / factor)\n      // \t\tcontinue;\n      // \t}\n      // }\n      for (let i = 0; i < regions.adjacent.length; i++) { // Only Adjacent Regions Can Produce New Cells\n         // Don't birth new cell outside world boundary\n         if (src.world != undefined) {\n            if (src.world.type == 'rectangle') {\n               if (regions.adjacent[i].x - _cellwidth / 2 <= src.world.x || regions.adjacent[i].x + _cellwidth / 2 >= src.world.x + src.world.width || regions.adjacent[i].y - _cellwidth / 2 <= src.world.x || regions.adjacent[i].y + _cellwidth / 2 >= src.world.y + src.world.height) { // If new cell would be outside world boundary\n                  continue;\n               }\n            } else if (src.world.type == 'ellipse') {\n               let a = src.world.width / 2;\n               let b = src.world.height / 2;\n               let x = (regions.adjacent[i].x - _cellwidth / 2) - a;\n               let y = (regions.adjacent[i].y - _cellwidth / 2) - b;\n               if (sq(x) / sq(a) + sq(y) / sq(b) >= 1) { // If top-left corner is outside ellipse\n                  continue;\n               }\n               x = (regions.adjacent[i].x + _cellwidth / 2) - a;\n               y = (regions.adjacent[i].y - _cellwidth / 2) - b;\n               if (sq(x) / sq(a) + sq(y) / sq(b) >= 1) { // If top-right corner is outside ellipse\n                  continue;\n               }\n               x = (regions.adjacent[i].x + _cellwidth / 2) - a;\n               y = (regions.adjacent[i].y + _cellwidth / 2) - b;\n               if (sq(x) / sq(a) + sq(y) / sq(b) >= 1) { // If bottom-right corner is outside ellipse\n                  continue;\n               }\n               x = (regions.adjacent[i].x - _cellwidth / 2) - a;\n               y = (regions.adjacent[i].y + _cellwidth / 2) - b;\n               if (sq(x) / sq(a) + sq(y) / sq(b) >= 1) { // If bottom-left corner is outside ellipse\n                  continue;\n               }\n            }\n         }\n         // Don't birth new cell on top of an opponent org\n         var overlap = false;\n         for (let j = 0; j < src.orgs.length; j++) {\n            if (src.orgs[j].player == org.player) { // If org is player's org\n               continue;\n            }\n            for (let k = 0; k < src.orgs[j].count; k++) {\n               if (regions.adjacent[i].x + _cellwidth / 2 >= src.orgs[j].cells[k].x - _cellwidth / 2 && regions.adjacent[i].x + _cellwidth / 2 <= src.orgs[j].cells[k].x + _cellwidth / 2) { // If right side collides\n                  if (regions.adjacent[i].y + _cellwidth / 2 >= src.orgs[j].cells[k].y - _cellwidth / 2 && regions.adjacent[i].y + _cellwidth / 2 <= src.orgs[j].cells[k].y + _cellwidth / 2) { // If bottom side collides\n                     overlap = true;\n                  } else if (regions.adjacent[i].y - _cellwidth / 2 >= src.orgs[j].cells[k].y - _cellwidth / 2 && regions.adjacent[i].y - _cellwidth / 2 <= src.orgs[j].cells[k].y + _cellwidth / 2) { // If top side collides\n                     overlap = true;\n                  }\n               } else if (regions.adjacent[i].x - _cellwidth / 2 >= src.orgs[j].cells[k].x - _cellwidth / 2 && regions.adjacent[i].x - _cellwidth / 2 <= src.orgs[j].cells[k].x + _cellwidth / 2) { // If left side collides\n                  if (regions.adjacent[i].y + _cellwidth / 2 >= src.orgs[j].cells[k].y - _cellwidth / 2 && regions.adjacent[i].y + _cellwidth / 2 <= src.orgs[j].cells[k].y + _cellwidth / 2) { // If bottom side collides\n                     overlap = true;\n                  } else if (regions.adjacent[i].y - _cellwidth / 2 >= src.orgs[j].cells[k].y - _cellwidth / 2 && regions.adjacent[i].y - _cellwidth / 2 <= src.orgs[j].cells[k].y + _cellwidth / 2) { // If top side collides\n                     overlap = true;\n                  }\n               }\n            }\n         }\n         if (overlap == true) {\n            continue;\n         }\n         // Birth new cell accordingly\n         if (ability.compress.value ^ ability.extend.value == 0) { // compress.value NOT XOR extend.value\n            org.coefficient = -27.5;\n            org.range = _range;\n         } else if (ability.compress.value == true) {\n            org.coefficient = -31.5;\n            org.range = _range - 10;\n         } else if (ability.extend.value == true) {\n            org.coefficient = -25.5;\n            org.range = _range + 20;\n         }\n         let chance = org.coefficient * Math.log(sqrt(sq(regions.adjacent[i].x - org.pos.x) + sq(regions.adjacent[i].y - org.pos.y)) + 1) + 100; // -27.5(ln(r + 1)) + 100\n         if (random(0, 100) <= chance) {\n            var repeat = false;\n            for (let j = 0; j < org.count; j++) {\n               if (regions.adjacent[i].x == org.cells[j].x && regions.adjacent[i].y == org.cells[j].y) {\n                  repeat = true;\n                  break;\n               }\n            }\n            if (repeat == false) {\n               org.cells.push(new Cell(regions.adjacent[i].x, regions.adjacent[i].y, org));\n               org.count++;\n            }\n         }\n      }\n   }\n\n   // Natural Death\n   if (ability.freeze.value == false) { // If org is not Frozen (cannot birth or die naturally)\n      if (ability.immortality.value == false) { // If org is not Immortal\n         for (let i = 0; i < regions.exposed.length; i++) { // Only Exposed Cells Can Die\n            let chance = org.coefficient * Math.log(-regions.exposed[i].d(org) + (org.range + 1)) + 100; // -27.5(ln(-(r - 51))) + 100\n            if (regions.exposed[i].d(org) > org.range) { // If exposed cell is outside maximum radius\n               for (let j = 0; j < org.count; j++) {\n                  if (regions.exposed[i].x == org.cells[j].x && regions.exposed[i].y == org.cells[j].y) { // Find exposed cell within org cells array\n                     org.cells.splice(j, 1);\n                     org.count--;\n                     regions.exposed.splice(i, 1);\n                     i--;\n                     j--;\n                     break;\n                  }\n               }\n               continue;\n            }\n            if (src.world.type == 'rectangle' && (regions.exposed[i].x < src.world.x || regions.exposed[i].x > src.world.x + src.world.width || regions.exposed[i].y < src.world.y || regions.exposed[i].y > src.world.y + src.world.height)) { // If cell is outside rectangular world\n               for (let j = 0; j < org.count; j++) {\n                  if (regions.exposed[i].x == org.cells[j].x && regions.exposed[i].y == org.cells[j].y) {\n                     org.cells.splice(j, 1);\n                     org.count--;\n                     regions.exposed.splice(i, 1);\n                     i--;\n                     j--;\n                     break;\n                  }\n               }\n            } else if (src.world.type == 'ellipse' && sq(regions.exposed[i].x - src.world.x - src.world.width / 2) / sq(src.world.width / 2) + sq(regions.exposed[i].y - src.world.y - src.world.height / 2) / sq(src.world.height / 2) > 1) { // If outside elliptical world\n               for (let j = 0; j < org.count; j++) {\n                  if (regions.exposed[i].x == org.cells[j].x && regions.exposed[i].y == org.cells[j].y) { // Identify cell\n                     org.cells.splice(j, 1);\n                     org.count--;\n                     regions.exposed.splice(i, 1);\n                     i--;\n                     j--;\n                     break;\n                  }\n               }\n            }\n            if (random(0, 100) <= chance) {\n               for (let j = 0; j < org.count; j++) {\n                  if (regions.exposed[i].x == org.cells[j].x && regions.exposed[i].y == org.cells[j].y) {\n                     org.cells.splice(j, 1);\n                     org.count--;\n                     regions.exposed.splice(i, 1);\n                     i--;\n                     j--;\n                     break;\n                  }\n               }\n            }\n         }\n      }\n   }\n\n   // Abilities\n   for (let i = 0; i < src.orgs.length; i++) {\n      if ((src.orgs[i].team == org.team && typeof team == 'string') && src.orgs[i].player != socket.id) { // If is friendly org but not own org\n         continue; // No friendly fire but can hurt self\n      }\n      if (src.abilities[i].secrete.value == true) { // Secrete (placed in grow interval so cells will be killed on any overlap with secretion, not just initial impact)\n         for (let j = 0; j < org.count; j++) {\n            for (let k = 0; k < src.abilities[i].spore.count; k++) {\n               if (sqrt(sq(org.cells[j].x - src.abilities[i].spore.spores[k].x) + sq(org.cells[j].y - src.abilities[i].spore.spores[k].y)) <= src.abilities[i].secrete.radius) { // If center of cell is within secrete circle (subject to change)\n                  let skip = false;\n                  for (let l = 0; l < src.abilities.length; l++) {\n                     if (src.abilities[l].neutralize.value == true && sqrt(sq(org.cells[j].x - src.abilities[l].neutralize.x) + sq(org.cells[j].y - src.abilities[l].neutralize.y)) <= src.abilities[l].neutralize.radius) { // If center of cell is within neutralize circle\n                        skip = true;\n                        break;\n                     }\n                  }\n                  if (skip == true) {\n                     continue; // Acid is ineffectual when neutralized\n                  }\n                  org.hit = src.abilities[i].player;\n                  if (src.src === 'game' && org.hit !== org.player) { // Only for game; Only for other player hits\n                     for (let l = 0; l < src.teams.length; l++) { // Search teams\n                        if (src.teams[l].indexOf(org.hit) !== -1 && src.teams[l].indexOf(org.player) !== -1) { // If player and hitter are on same team\n                           skip = true;\n                           break;\n                        }\n                     }\n                  }\n                  if (skip == true) {\n                     continue; // Acid is ineffectual when neutralized\n                  }\n                  org.cells.splice(j, 1);\n                  org.count--;\n                  j--;\n                  break;\n               }\n            }\n         }\n      }\n      for (let j = 0; j < 3; j++) { // Shoot secretion (placed in grow interval so cells will be killed on any overlap with secretion, not just initial impact) (Shoot secretion is smaller than spore secretion)\n         if (src.abilities[i].shoot.secrete[j].value == true) {\n            for (let k = 0; k < org.count; k++) {\n               if (sqrt(sq(org.cells[k].x - src.abilities[i].shoot.spore[j].x) + sq(org.cells[k].y - src.abilities[i].shoot.spore[j].y)) <= src.abilities[i].shoot.secrete[j].radius) { // If center of cell is within shoot circle (subject to change)\n                  let skip = false;\n                  for (let l = 0; l < src.abilities.length; l++) {\n                     if (src.abilities[l].neutralize.value == true && sqrt(sq(org.cells[j].x - src.abilities[l].neutralize.x) + sq(org.cells[j].y - src.abilities[l].neutralize.y)) <= src.abilities[l].neutralize.radius) { // If center of cell is within neutralize circle\n                        skip = true;\n                        break;\n                     }\n                  }\n                  if (skip == true) {\n                     continue; // Acid is ineffectual when neutralized\n                  }\n                  org.hit = src.abilities[i].player;\n                  if (src.src === 'game' && org.hit !== org.player) { // Only for game; Only for other player hits\n                     for (let l = 0; l < src.teams.length; l++) { // Search teams\n                        if (src.teams[l].indexOf(org.hit) !== -1 && src.teams[l].indexOf(org.player) !== -1) { // If player and hitter are on same team\n                           skip = true;\n                           break;\n                        }\n                     }\n                  }\n                  if (skip == true) {\n                     continue; // Acid is ineffectual when neutralized\n                  }\n                  org.cells.splice(k, 1);\n                  org.count--;\n                  k--;\n                  // break; // Break causes cells to die one at a time (not default)\n               }\n            }\n         }\n      }\n      if (src.abilities[i].toxin.value == true) { // Toxin\n         for (let j = 0; j < org.count; j++) {\n            if (org.player == src.abilities[i].player) { // If is own org's toxin\n               continue; // Do not kill own cells\n            }\n            if (sqrt(sq(org.cells[j].x - src.abilities[i].toxin.x) + sq(org.cells[j].y - src.abilities[i].toxin.y)) <= src.abilities[i].toxin.radius) { // If center of cell is within toxin circle\n               let skip = false;\n               for (let l = 0; l < src.abilities.length; l++) {\n                  if (src.abilities[l].neutralize.value == true && sqrt(sq(org.cells[j].x - src.abilities[l].neutralize.x) + sq(org.cells[j].y - src.abilities[l].neutralize.y)) <= src.abilities[l].neutralize.radius) { // If center of cell is within neutralize circle\n                     skip = true;\n                     break;\n                  }\n               }\n               if (skip == true) {\n                  continue; // Acid is ineffectual when neutralized\n               }\n               org.hit = src.abilities[i].player;\n               if (src.src === 'game' && org.hit !== org.player) { // Only for game; Only for other player hits\n                  for (let l = 0; l < src.teams.length; l++) { // Search teams\n                     if (src.teams[l].indexOf(org.hit) !== -1 && src.teams[l].indexOf(org.player) !== -1) { // If player and hitter are on same team\n                        skip = true;\n                        break;\n                     }\n                  }\n               }\n               if (skip == true) {\n                  continue; // Acid is ineffectual when neutralized\n               }\n               org.cells.splice(j, 1); // Kill cell\n               org.count--;\n               j--;\n               // break; // Break causes cells to die one at a time (not default)\n            }\n         }\n      }\n   }\n\n   if (org.count == 0) {\n      org.alive = false;\n   } else {\n      org.alive = true;\n   }\n   org.tracker.start = Date.now();\n}\n\nfunction die(spectatE) {\n   socket.emit('Dead', spectatE);\n   org.clearIntervals();\n   for (let i in ability) { // Reset Ability Cooldowns\n      if (typeof ability[i] === 'object' && i !== 'shoot') { // Avoid reference error\n         if (ability[i].activated != undefined && ability[i].activated == true) { // If is a usable ability\n            clearTimeout(ability[i].timeout);\n            ability[i].value = false;\n            ability[i].can = true;\n            ability[i].cooling = false;\n            ability[i].start = undefined;\n            ability[i].end = undefined;\n         }\n      }\n   }\n   for (let i = 0; i < 3; i++) { // Reset shoots\n      clearTimeout(ability.shoot.timeout[i]);\n      ability.shoot.value[i] = false;\n      ability.shoot.can[i] = true;\n      ability.shoot.spore[i] = undefined;\n      ability.shoot.secrete[i] = {};\n      ability.shoot.start[i] = undefined;\n      ability.shoot.end[i] = undefined;\n   }\n   socket.emit('Ability', ability);\n}","var socket; // Initialize in global scope\nvar gamesInterval; // \"\nvar emitGameInterval; // \"\nfunction connectSocket() {\n   if (DEV) {\n      socket = io.connect('localhost:80'); // Local server (Development only)\n   } else {\n      if (HEROKU) {\n         socket = io.connect('https://bacter.herokuapp.com/'); // Heroku Server\n      } else {\n         socket = io.connect('24.55.26.67:80'); // Local Server\n      }\n   }\n\n   gamesInterval = setInterval(() => {\n      if (state !== 'game' && state !== 'spectate') {\n         socket.emit('Games Request');\n      }\n   }, 250);\n\n   emitGameInterval = setInterval(() => {\n      if (state === 'game' || state === 'spectate') {\n         socket.emit('Game', { game: game });\n      }\n   }, _renderfrequency);\n\n   socket.on('Games', (datA) => { // datA: { games: , connections: }\n      games = datA.games;\n      connections = datA.connections;\n      if (state === 'browser') renderBrowser();\n   });\n\n   socket.on('Enter', () => run()); // Begin growth\n\n   socket.on('Force Spawn', () => {\n      die(false); // 'false' parameter tells server not to emit 'Spectate' back to client\n      for (let i = 0; i < game.spectators.length; i++) {\n         if (game.spectators[i] === socket.id) { // If player is spectator\n            socket.emit('Spectator Left', game.info); // Remove spectator from spectators array\n         }\n      }\n      if (state === 'pauseSpectateMenu') {\n         renderMenu('pauseGame', game); // Move to correct menu if on spectate menu\n      } else if (state === 'respawnMenu') {\n         renderMenu('pauseGame', game);\n         menus.pauseGame.submit();\n      }\n      spawn({ color: org.color, skin: org.skin, team: org.team }); // Respawn all players on round start\n      org.spawn = false;\n      org.ready = true; // org.ready ensures that org will only be forcibly respawned once\n   });\n\n   socket.on('Game', (gamE) => {\n      game = gamE;\n      if (ability.spore.value === true) {\n         ability.spore.interval();\n      }\n      for (let i = 0; i < 3; i++) {\n         if (ability.shoot.value[i] === true) {\n            ability.shoot.interval[i]();\n         }\n      }\n      switch (state) {\n         case 'game':\n         case 'pauseGameMenu':\n            {\n               translate(-org.off.x, -org.off.y);\n               renderWorld();\n               for (let i = 0; i < game.info.count; i++) {\n                  renderToxin(game.abilities[i]);\n               }\n               for (let i = 0; i < game.info.count; i++) {\n                  renderSecretions(game.abilities[i]);\n               }\n               for (let i = 0; i < game.info.count; i++) {\n                  renderNeutralize(game.abilities[i]);\n               }\n               renderOrgs();\n               for (let i = 0; i < game.info.count; i++) {\n                  renderSpores(game.abilities[i]);\n               }\n               renderUI();\n               renderLeaderboard();\n               translate(org.off.x, org.off.y);\n            }\n            renderMessages(); // Render messages outside translation\n            if (state === 'game') {\n               move(); // Move goes at the end so player does not render his movements before others\n            }\n            break;\n         case 'spectate':\n         case 'pauseSpectateMenu':\n         case 'respawnMenu':\n            {\n               translate(-org.off.x, -org.off.y);\n               renderWorld();\n               for (let i = 0; i < game.info.count; i++) {\n                  renderToxin(game.abilities[i]);\n               }\n               for (let i = 0; i < game.info.count; i++) {\n                  renderSecretions(game.abilities[i]);\n               }\n               for (let i = 0; i < game.info.count; i++) {\n                  renderNeutralize(game.abilities[i]);\n               }\n               renderOrgs(); // Orgs render over neutralize and toxin but under other abilities\n               for (let i = 0; i < game.info.count; i++) {\n                  renderSpores(game.abilities[i]);\n               }\n               renderLeaderboard();\n               translate(org.off.x, org.off.y);\n            }\n            renderMessages();\n            if (state === 'spectate') {\n               move(); // Move is after messages so everything has same offset\n            }\n            break;\n      }\n   });\n\n   socket.on('Game Ended', function(gamE) {\n      if (gamE.info.host != socket.id) { // Don't alert host (he already knows)\n         alert('The game has ended');\n      }\n      renderTitle();\n   });\n\n   socket.on('Spectate', () => spectate({ color: org.color, pos: org.pos, skin: org.skin, team: org.team }));\n\n   { // Abilities\n      socket.on('Tag', () => {\n         ability.tag.value = true;\n         clearTimeout(ability.tag.timeout);\n         socket.emit('Ability', ability);\n         if (game.info.mode === '') {\n            ability.tag.timeout = setTimeout(() => {\n               ability.tag.value = false;\n               socket.emit('Ability', ability);\n            }, ability.tag.time);\n         }\n      });\n\n      socket.on('Extend', () => {\n         ability.extend.value = true;\n         clearTimeout(ability.extend.timeout);\n         ability.extend.start = new Date();\n         socket.emit('Ability', ability);\n         ability.extend.timeout = setTimeout(() => { // End ability\n            ability.extend.value = false;\n            ability.extend.end = new Date();\n            ability.extend.cooling = true;\n            socket.emit('Ability', ability);\n         }, ability.extend.time);\n      });\n\n      socket.on('Compress', () => {\n         ability.compress.value = true;\n         clearTimeout(ability.compress.timeout);\n         socket.emit('Ability', ability);\n         ability.compress.timeout = setTimeout(() => {\n            ability.compress.value = false;\n            socket.emit('Ability', ability);\n         }, ability.compress.time);\n      });\n\n      // socket.on('Speed', () => { // Not updated\n      // \tability.speed.value = true;\n      // \torg.speed *= ability.speed.factor;\n      // \tclearTimeout(ability.speed.timeout);\n      // \tsocket.emit('Ability', ability);\n      // \tability.speed.timeout = setTimeout(() => { // End ability\n      // \t\torg.speed /= ability.speed.factor;\n      // \t\tability.speed.value = false;\n      // \t\tsocket.emit('Ability', ability);\n      // \t}, ability.speed.time);\n      // });\n\n      // socket.on('Slow', () => { // Not updated\n      // \tability.slow.value = true;\n      // \torg.speed /= ability.slow.factor; // Divide speed by factor\n      // \tclearTimeout(ability.slow.timeout);\n      // \tsocket.emit('Ability', ability);\n      // \tability.slow.timeout = setTimeout(() => { // End ability\n      // \t\torg.speed *= ability.slow.factor; // Multiply speed by factor to reset to original\n      // \t\tability.slow.value = false;\n      // \t\tsocket.emit('Ability', ability);\n      // \t}, ability.slow.time);\n      // });\n\n      socket.on('Immortality', () => {\n         ability.immortality.value = true;\n         clearTimeout(ability.immortality.timeout);\n         ability.immortality.start = new Date();\n         socket.emit('Ability', ability);\n         ability.immortality.timeout = setTimeout(() => { // End ability\n            ability.immortality.value = false;\n            ability.immortality.end = new Date();\n            ability.immortality.cooling = true;\n         }, ability.immortality.time);\n      });\n\n      socket.on('Freeze', () => {\n         ability.freeze.value = true;\n         clearTimeout(ability.freeze.timeout);\n         socket.emit('Ability', ability);\n         ability.freeze.timeout = setTimeout(() => { // End ability\n            ability.freeze.value = false;\n            socket.emit('Ability', ability);\n         }, ability.freeze.time);\n      });\n\n      // socket.on('Stimulate', () => {\n      // \tability.stimulate.value = true;\n      // \tclearTimeout(ability.stimulate.timeout);\n      // \tability.stimulate.start = new Date();\n      // \tsocket.emit('Ability', ability);\n      // \tability.stimulate.timeout = setTimeout(() => { // End ability\n      // \t\tability.stimulate.value = false;\n      // \t\tability.stimulate.end = new Date();\n      // \t\tability.stimulate.cooling = true;\n      // \t\tsocket.emit('Ability', ability);\n      // \t}, ability.stimulate.time);\n      // });\n\n      // socket.on('Poison', () => {\n      // \tability.poison.value = true;\n      // \tclearTimeout(ability.poison.timeout);\n      // \tsocket.emit('Ability', ability);\n      // \tability.poison.timeout = setTimeout(() => { // End ability\n      // \t\tability.poison.value = false;\n      // \t\tsocket.emit('Ability', ability);\n      // \t}, ability.poison.time);\n      // });\n\n      socket.on('Neutralize', () => {\n         ability.neutralize.value = true;\n         ability.neutralize.start = new Date();\n         clearTimeout(ability.neutralize.timeout);\n         ability.neutralize.x = org.x();\n         ability.neutralize.y = org.y();\n         socket.emit('Ability', ability);\n         ability.neutralize.timeout = setTimeout(() => {\n            ability.neutralize.value = false;\n            ability.neutralize.end = new Date();\n            ability.neutralize.cooling = true;\n            socket.emit('Ability', ability);\n         }, ability.neutralize.time);\n      });\n\n      socket.on('Toxin', () => {\n         ability.toxin.value = true;\n         ability.toxin.start = new Date();\n         clearTimeout(ability.toxin.timeout);\n         ability.toxin.x = org.x();\n         ability.toxin.y = org.y();\n         socket.emit('Ability', ability);\n         ability.toxin.timeout = setTimeout(() => {\n            ability.toxin.value = false;\n            ability.toxin.end = new Date();\n            ability.toxin.cooling = true;\n            socket.emit('Ability', ability);\n         }, ability.toxin.time);\n      });\n   }\n}","var title; // Initialize in global scope\nvar Title = function() {\n   state = 'title';\n   this.src = 'title';\n   this.margin = _margin;\n   this.world = new World({ width: window.innerWidth - this.margin * 2, height: window.innerHeight - this.margin * 2, type: 'rectangle', color: 'black', x: this.margin, y: this.margin });\n   this.orgs = [];\n   this.abilities = [];\n   let quadrants = [];\n   for (let i = 0; i < _dummies; i++) {\n      let colors = [];\n      for (let j in orgColors.black) {\n         colors.push(orgColors.black[j]);\n      }\n      let color = random(colors);\n      let arr = skins.slice();\n      arr.push('none');\n      let skin = random(arr);\n      let xoff;\n      let yoff;\n      let quadrant;\n      do {\n         quadrant = random();\n         if (quadrant < .25) {\n            quadrant = 1;\n            xoff = 0;\n            yoff = 0;\n         } else if (quadrant < .5) {\n            quadrant = 2;\n            xoff = 1;\n            yoff = 0;\n         } else if (quadrant < .75) {\n            quadrant = 3;\n            xoff = 1;\n            yoff = 1;\n         } else if (quadrant < 1) {\n            quadrant = 4;\n            xoff = 0;\n            yoff = 1;\n         }\n         quadrants[i] = quadrant;\n      } while (freq(quadrants, quadrant) > floor(_dummies / 4) + 1);\n      let pos = {\n         x: random(this.world.x + _cellwidth + this.world.width / 2 * xoff, this.world.x - _cellwidth + this.world.width / 2 * (xoff + 1)), // 80 is edge buffer\n         y: random(this.world.y + _cellwidth + this.world.height / 2 * yoff, this.world.y - _cellwidth + this.world.height / 2 * (yoff + 1))\n      };\n      this.orgs[i] = new Org({ player: i, color: color, skin: skin, team: null, pos: pos, title: true });\n      this.orgs[i].cells[0] = new Cell(this.orgs[i].pos.x, this.orgs[i].pos.y, this.orgs[i]); // Title must exist to create new Cell()\n      this.orgs[i].count++;\n      this.abilities[i] = new Ability({ player: i });\n   }\n   this.menu = new TitleMenu(this.world.x + this.world.width / 2, this.world.y + this.world.height / 2);\n   this.interval = setInterval(() => {\n      { // Render\n         // Background\n         background(this.world.backdrop.r, this.world.backdrop.g, this.world.backdrop.b);\n\n         // Shadows\n         fill(this.world.backdrop.r - 20, this.world.backdrop.g - 20, this.world.backdrop.b - 20);\n         noStroke();\n         rect(this.world.x + this.world.width / 2 + 7, this.world.y + this.world.height / 2 + 6, this.world.width, this.world.height); // World\n\n         // World\n         fill(this.world.background.r, this.world.background.g, this.world.background.b);\n         stroke(this.world.border.color.r, this.world.border.color.g, this.world.border.color.b);\n         strokeWeight(1);\n         rect(this.world.x + this.world.width / 2, this.world.y + this.world.height / 2, this.world.width, this.world.height);\n\n         // Orgs\n         renderOrgs();\n      } { // Calculate\n         for (let i = 0; i < this.orgs.length; i++) {\n            grow(this.orgs[i]);\n         }\n      }\n   }, _ofrequency);\n   this.resize = (x, y, w, h) => {\n      center.x = window.innerWidth / 2;\n      center.y = window.innerHeight / 2;\n      let old_x = this.world.x - this.margin;\n      let old_y = this.world.y - this.margin;\n      for (let i = 0; i < this.orgs.length; i++) {\n         this.orgs[i].pos.x = (this.orgs[i].pos.x - this.margin - old_x) / this.world.width * (w - this.margin * 2) + (this.margin + x); // Reposition org correctly\n         this.orgs[i].pos.y = (this.orgs[i].pos.y - this.margin - old_y) / this.world.height * (h - this.margin * 2) + (this.margin + y); // Must be before new world creation so can find percentage of former world size\n         this.orgs[i].cells = [];\n         this.orgs[i].cells[0] = new Cell(this.orgs[i].pos.x, this.orgs[i].pos.y, this.orgs[i]);\n         this.orgs[i].count = 1;\n      }\n      this.world = new World({ width: w - this.margin * 2, height: h - this.margin * 2, type: 'rectangle', color: 'black', x: x + this.margin, y: y + this.margin });\n      if (state === 'title') {\n         renderTitle();\n      } else if (state === 'browser') {\n         renderBrowser();\n      }\n   };\n};\n\nclass TitleMenu extends React.Component {\n   constructor(props) {\n      super(props);\n   }\n\n   handleClick(btn) {\n      switch (btn) {\n         case 'host':\n            renderMenu('create');\n            break;\n         case 'join':\n            renderBrowser();\n            break;\n         case 'tutorial':\n            renderTutorial();\n            tutorial = new Tutorial();\n            break;\n      }\n   };\n\n   render() {\n      let x = center.x;\n      let y = center.y;\n      let mWidth = 170; // Menu Width\n      let mHeight = 150;\n      let bWidth = mWidth * 2 / 3; // Button Width\n      let bHeight = 25;\n      let style = {\n         menu: {\n            left: (x - mWidth / 2) + 'px',\n            top: (y - mHeight / 2) + 'px'\n         },\n         host: {\n            left: (x - bWidth / 2) + 'px',\n            top: (y - mHeight / 2 + 29) + 'px'\n         },\n         join: {\n            left: (x - bWidth / 2) + 'px',\n            top: (y - mHeight / 2 + 29 + bHeight * 3 / 2) + 'px'\n         },\n         tutorial: {\n            left: (x - bWidth / 2) + 'px',\n            top: (y - mHeight / 2 + 29 + bHeight * 3 / 2 * 2) + 'px'\n         }\n      };\n      return (\n         <div id='Title Menu' style={style.menu}>\n            <div id='Title Host Button' className='Title Menu Button' onClick={() => this.handleClick('host')} style={style.host}>Host</div>\n            <div id='Title Join Button' className='Title Menu Button' onClick={() => this.handleClick('join')} style={style.join}>Join</div>\n            <div id='Title Tutorial Button' className='Title Menu Button' onClick={() => this.handleClick('tutorial')} style={style.tutorial}>Tutorial</div>\n         </div>\n      ); // handleClick does not need to be bound if arrow function is used; without using arrow function, 'host'/'join'/'tutorial' properties could not be sent\n   }\n};\n\nfunction renderTitle() {\n   state = 'title';\n   let a = ReactDOM.render( // Title rendering placed within ReactDOM.render() so Title() can be used for title and retain this. namespace\n      <div id='title'>\n         <CanvasCont />\n         <TitleMenu />\n      </div>\n   , eid('cont')); // TitleMenu will not retain its this. namespace\n   ability = new Ability({ player: socket.id });\n}\n\nvar Shade = function() {\n   let style = {\n      position: 'fixed',\n      left: '0px',\n      top: '0px',\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'rgb(255, 255, 255)',\n      opacity: '.5',\n      zIndex: '-1'\n   };\n   return (\n      <div id=\"shade\" style={style}></div>\n   );\n};","var tutorial;\n\nfunction renderTutorial() {\n   clearInterval(title.interval);\n   ReactDOM.render(<CanvasCont />, eid('cont'));\n   state = 'tutorial';\n}\n\nvar Tutorial = function() {\n   this.src = 'tutorial';\n   this.task = 'move';\n   this.taskTimeout = undefined;\n   this.margin = _margin;\n   this.world = new World({ width: window.innerWidth - this.margin * 2, height: window.innerHeight - this.margin * 2, type: 'rectangle', color: 'black', x: this.margin, y: this.margin }); { // Org\n      let colors = [];\n      for (let j in orgColors.black) {\n         if (j != 'sun' && j != 'sky') { // No bright colors which would obscure the crosshair in tutorial to minimize confusion\n            colors.push(orgColors.black[j]);\n         }\n      }\n      let color = random(colors);\n      org = new Org({ player: socket.id, color: color, skin: 'none', spectate: false, pos: { x: center.x, y: center.y }, title: false });\n      org.cells[0] = new Cell(org.pos.x, org.pos.y, org); // Create first cell in org\n      org.count++;\n   }\n   this.orgs = [org];\n   this.abilities = [ability];\n   this.ointerval = setInterval(() => {\n      for (let i = 0; i < this.orgs.length; i++) {\n         grow(this.orgs[i]);\n         if (org.count == 0) {\n            this.orgs[i].cells[0] = new Cell(org.pos.x, org.pos.y, org); // Create first cell in org\n            this.orgs[i].count++;\n         }\n      }\n   }, _ofrequency); // 70ms\n   this.rinterval = setInterval(() => {\n      { // Render\n         // Background\n         background(this.world.backdrop.r, this.world.backdrop.g, this.world.backdrop.b);\n\n         // Shadows\n         { // World\n            fill(this.world.backdrop.r - 20, this.world.backdrop.g - 20, this.world.backdrop.b - 20);\n            noStroke();\n            rect(this.world.x + this.world.width / 2 + 7, this.world.y + this.world.height / 2 + 6, this.world.width, this.world.height);\n         } { // Messages\n            if (Messages == true) {\n               textFont('Helvetica');\n               textStyle(NORMAL);\n               let message = currentMessage();\n               if (message != undefined) {\n                  let breaks = freq(message, '\\n');\n                  let width = messageWidth(message);\n                  rect(5 + 25 + width / 2, 4 + 25 + 9 * breaks, 25 + width, 26 + 18 * breaks);\n               }\n            }\n\n         }\n\n         // World\n         fill(this.world.background.r, this.world.background.g, this.world.background.b);\n         stroke(this.world.border.color.r, this.world.border.color.g, this.world.border.color.b);\n         strokeWeight(1);\n         rect(this.world.x + this.world.width / 2, this.world.y + this.world.height / 2, this.world.width, this.world.height);\n\n         // Game\n         renderToxin(ability);\n         renderSecretions(ability);\n         renderNeutralize(ability);\n         renderOrgs();\n         renderSpores(ability);\n         if (this.task != 'move' && this.task != 'survive') {\n            translate(-org.off.x, -org.off.y);\n            renderUI();\n            translate(org.off.x, org.off.y);\n         }\n         noFill(); // Crosshair\n         stroke(this.world.border.color.r, this.world.border.color.g, this.world.border.color.b);\n         strokeWeight(1);\n         line(org.pos.x - 4, org.pos.y, org.pos.x + 4, org.pos.y);\n         line(org.pos.x, org.pos.y - 4, org.pos.x, org.pos.y + 4);\n         renderMessages(); // Render messages outside translation\n      } { // Calculate\n         if (this.stopped == false) {\n            if (ability.spore.value == true) {\n               ability.spore.interval();\n            }\n            for (let i = 0; i < 3; i++) {\n               if (ability.shoot.value[i] == true) {\n                  ability.shoot.interval[i]();\n               }\n            }\n            if (state == 'tutorial') {\n               move();\n            }\n         }\n         this.detect();\n      }\n   }, _renderfrequency); // 40ms\n   this.clear = function() {\n      clearInterval(this.ointerval);\n      clearInterval(this.rinterval);\n   };\n   this.stopped = false;\n   this.stopdate = undefined;\n   this.stop = function() {\n      this.stopped = true;\n      this.stopdate = new Date();\n      clearInterval(this.ointerval);\n   };\n   this.resize = function(x, y, w, h) {\n      center.x = window.innerWidth / 2;\n      center.y = window.innerHeight / 2;\n      let old_x = this.world.x - this.margin;\n      let old_y = this.world.y - this.margin;\n      for (let i = 0; i < this.orgs.length; i++) {\n         this.orgs[i].pos.x = (this.orgs[i].pos.x - this.margin - old_x) / this.world.width * (w - this.margin * 2) + (this.margin + x); // Reposition org correctly\n         this.orgs[i].pos.y = (this.orgs[i].pos.y - this.margin - old_y) / this.world.height * (h - this.margin * 2) + (this.margin + y); // Must be before new world creation so can find percentage of former world size\n         this.orgs[i].cells = [];\n         this.orgs[i].cells[0] = new Cell(this.orgs[i].pos.x, this.orgs[i].pos.y, this.orgs[i]);\n         this.orgs[i].count = 1;\n      }\n      this.world = new World({ width: w - this.margin * 2, height: h - this.margin * 2, type: 'rectangle', color: 'black', x: x + this.margin, y: y + this.margin });\n      if (state === 'tutorial') renderTutorial(); // Only render if state is 'tutorial'; otherwise, will render over pause menu\n   };\n   this.detect = function() {\n      switch (this.task) {\n         case 'move':\n            {\n               if (keyIsDown(Controls.left1.code) || keyIsDown(Controls.left2.code) || keyIsDown(Controls.up1.code) || keyIsDown(Controls.up2.code) || keyIsDown(Controls.right1.code) || keyIsDown(Controls.right2.code) || keyIsDown(Controls.down1.code) || keyIsDown(Controls.down2.code)) { // If a directional key is pressed\n                  this.task = 'fullscreen';\n                  if (this.taskTimeout == undefined) {\n                     this.taskTimeout = setTimeout(() => {\n                        this.taskTimeout = undefined;\n                        this.task = 'survive';\n                     }, 3500);\n                  }\n               }\n               break;\n            }\n         case 'survive':\n            {\n               if (this.taskTimeout == undefined) {\n                  this.taskTimeout = setTimeout(() => {\n                     this.taskTimeout = undefined;\n                     this.task = 'extend';\n                     ability.extend.activated = true;\n                     ability.extend.can = true;\n                     socket.emit('Ability', ability);\n                  }, 4500);\n               }\n               break;\n            }\n         case 'extend':\n            {\n               if (keyIsDown(Controls.ability1.code)) {\n                  if (this.taskTimeout == undefined) {\n                     this.taskTimeout = setTimeout(() => {\n                        this.taskTimeout = undefined;\n                        ability.extend.activated = false;\n                        ability.extend.can = false;\n                        this.task = 'immortality';\n                        ability.immortality.activated = true;\n                        ability.immortality.can = true;\n                        socket.emit('Ability', ability);\n                     }, ability.extend.time);\n                  }\n               }\n               break;\n            }\n         case 'immortality':\n            {\n               if (keyIsDown(Controls.ability2.code)) {\n                  if (this.taskTimeout == undefined) {\n                     this.taskTimeout = setTimeout(() => {\n                        this.taskTimeout = undefined;\n                        ability.immortality.activated = false;\n                        ability.immortality.can = false;\n                        this.task = 'neutralize';\n                        ability.neutralize.activated = true;\n                        ability.neutralize.can = true;\n                        socket.emit('Ability', ability);\n                     }, ability.immortality.time);\n                  }\n               }\n               break;\n            }\n         case 'neutralize':\n            {\n               if (keyIsDown(Controls.ability3.code)) {\n                  if (this.taskTimeout == undefined) {\n                     this.taskTimeout = setTimeout(() => {\n                        this.taskTimeout = undefined;\n                        ability.neutralize.activated = false;\n                        ability.neutralize.can = false;\n                        this.task = 'shoot';\n                        ability.compress.activated = true;\n                        ability.compress.can = true;\n                        ability.freeze.activated = true;\n                        ability.freeze.can = true;\n                        socket.emit('Ability', ability);\n                     }, ability.neutralize.time);\n                  }\n               }\n               break;\n            }\n         case 'shoot':\n            {\n               if (this.taskTimeout == undefined) {\n                  this.taskTimeout = setTimeout(() => {\n                     this.taskTimeout = undefined;\n                     ability.freeze.activated = false;\n                     ability.freeze.can = false;\n                     this.task = 'compress';\n                     ability.compress.activated = true; // Redundancy\n                     ability.compress.can = true; // Redundancy\n                  }, 10000);\n               }\n               break;\n            }\n         case 'compress':\n            {\n               if (this.orgs.length == 1) {\n                  let colors = [];\n                  for (let j in orgColors.black) {\n                     if (j != 'sun' && j != 'lime')\n                        colors.push(orgColors.black[j]);\n                  }\n                  let color = random(colors);\n                  let pos;\n                  do {\n                     pos = { x: random(this.world.width), y: random(this.world.height) };\n                  } while (sqrt(sq(pos.x - org.pos.x) + sq(pos.y - org.pos.y)) < _range + 30); // _range + 20 is maximum extend range\n                  this.orgs.push(new Org({ player: 'bot' + 1, color: color, skin: 'none', spectate: false, pos: pos, title: false }));\n                  this.orgs[1].cells[0] = new Cell(this.orgs[1].pos.x, this.orgs[1].pos.y, this.orgs[1]); // Create first cell in org\n                  this.orgs[1].count++;\n                  this.abilities[1] = new Ability({ player: 'bot' + 1 });\n               }\n               if (ability.compress.applied == true) {\n                  if (this.taskTimeout == undefined) {\n                     this.taskTimeout = setTimeout(() => {\n                        this.taskTimeout = undefined;\n                        ability.compress.activated = false;\n                        ability.compress.can = false;\n                        ability.freeze.activated = true;\n                        ability.freeze.can = true;\n                        this.task = 'freeze';\n                     }, ability.compress.time);\n                  }\n               }\n               break;\n            }\n         case 'freeze':\n            {\n               if (ability.freeze.applied == true) {\n                  if (this.taskTimeout == undefined) {\n                     this.taskTimeout = setTimeout(() => {\n                        this.taskTimeout = undefined;\n                        ability.freeze.activated = false;\n                        ability.freeze.can = false;\n                        ability.toxin.activated = true;\n                        ability.toxin.can = true;\n                        this.task = 'toxin';\n                     }, ability.freeze.time);\n                  }\n               }\n               break;\n            }\n         case 'toxin':\n            {\n               if (keyIsDown(Controls.ability3.code)) {\n                  if (this.taskTimeout == undefined) {\n                     this.taskTimeout = setTimeout(() => {\n                        this.taskTimeout = undefined;\n                        ability.toxin.activated = false;\n                        ability.toxin.can = false; // All ability can values are reset to true after task change by cooldown; not a problem at the moment; can = false is useless at the moment\n                        this.task = 'spore';\n                        ability.spore.activated = true;\n                        ability.spore.can = true;\n                        ability.secrete.activated = true; // .can = false\n                        socket.emit('Ability', ability);\n                     }, ability.toxin.time);\n                  }\n               }\n               break;\n            }\n         case 'spore':\n            {\n               let current = new Date();\n               if (ability.secrete.value == true) {\n                  if (this.stopped == true) {\n                     this.stopped = false;\n                     this.ointerval = setInterval(() => { // Restart\n                        for (let i = 0; i < this.orgs.length; i++) {\n                           grow(this.orgs[i]);\n                           if (org.count == 0) {\n                              this.orgs[i].cells[0] = new Cell(org.pos.x, org.pos.y, org); // Create first cell in org\n                              this.orgs[i].count++;\n                           }\n                        }\n                     }, _ofrequency); // 70ms\n                     ability.spore.end = new Date();\n                     ability.secrete.start = new Date();\n                  }\n                  if (this.taskTimeout == undefined) {\n                     this.taskTimeout = setTimeout(() => {\n                        this.taskTimeout = undefined;\n                        ability.spore.activated = false;\n                        ability.spore.can = false;\n                        ability.secrete.activated = false;\n                        ability.secrete.can = false;\n                        this.task = 'done';\n                     }, ability.secrete.time);\n                  }\n               } else if (ability.spore.value == true && current - ability.spore.start >= ability.spore.time / 2) {\n                  if (this.stopped == false) {\n                     clearInterval(ability.spore.interval);\n                     clearTimeout(ability.spore.timeout);\n                     this.stop();\n                  }\n               }\n               break;\n            }\n      }\n   };\n};","var World = function(datA) { // datA: { width: , height: , type: , color: , x: , y: }\n   let data = datA;\n   this.host = socket.id; // Cannot call game.info.host since game is not fully constructed yet; World() can only be called by host, so socket.id is ok\n   this.width = data.width;\n   this.height = data.height;\n   if (data.x != undefined) { // Coordinates are for top left corner\n      this.x = data.x;\n   } else {\n      this.x = 0;\n   }\n   if (data.y != undefined) {\n      this.y = data.y;\n   } else {\n      this.y = 0;\n   }\n   this.type = data.type\n   this.color = data.color;\n   for (let i in worldColors) {\n      if (i == this.color) {\n         this.background = worldColors[i];\n         break;\n      }\n   }\n   this.interval = undefined;\n   this.border = {\n      color: undefined,\n      weight: 1\n   };\n   this.backdrop = { r: 70, g: 70, b: 70 };\n   this.border.weight = 1;\n   if (this.color == 'black') {\n      this.border.color = { r: 255, g: 255, b: 255 };\n   } else if (this.color == 'white') {\n      this.border.color = { r: 0, g: 0, b: 0 };\n   }\n};\n\nfunction renderWorld() {\n   // Background\n   background(game.world.backdrop.r, game.world.backdrop.g, game.world.backdrop.b);\n\n   // Shadows\n   fill(game.world.backdrop.r - 20, game.world.backdrop.g - 20, game.world.backdrop.b - 20);\n   noStroke();\n   { // World\n      if (game.world.type == 'rectangle') { // World\n         rect(game.world.x + game.world.width / 2 + 7, game.world.y + game.world.height / 2 + 6, game.world.width, game.world.height);\n      } else if (game.world.type == 'ellipse') {\n         ellipse(game.world.x + game.world.width / 2 + 5, game.world.y + game.world.height / 2 + 4, game.world.width / 2, game.world.height / 2);\n      }\n   }\n   { // Leaderboard\n      translate(org.off.x, org.off.y); // Shadows in renderWorld() so it will render behind world\n      rectMode(CORNER);\n      game.board.y = game.board.marginTop; // Leaderboard Head\n      switch (game.info.mode) {\n         case 'ffa':\n            game.board.x = width - (game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.threeWidth) - game.board.marginRight;\n            rect(game.board.x + 4, game.board.y + 3, game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.threeWidth, game.board.rowHeight);\n            game.board.count = min(game.board.show, game.board.list.length);\n            break;\n         case 'skm':\n            game.board.x = width - (game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.threeWidth) - game.board.marginRight;\n            rect(game.board.x + 4, game.board.y + 3, game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.threeWidth, game.board.rowHeight);\n            game.board.count = game.teams.length;\n            break;\n         case 'srv':\n            game.board.x = width - (game.board.nameWidth + game.board.oneWidth + game.board.twoWidth) - game.board.marginRight;\n            rect(game.board.x + 4, game.board.y + 3, game.board.nameWidth + game.board.oneWidth + game.board.twoWidth, game.board.rowHeight);\n            game.board.count = min(game.board.show, game.board.list.length);\n            break;\n         case 'ctf':\n            game.board.x = width - (game.board.nameWidth + game.board.oneWidth + game.board.twoWidth) - game.board.marginRight;\n            rect(game.board.x + 4, game.board.y + 3, game.board.nameWidth + game.board.oneWidth + game.board.twoWidth, game.board.rowHeight);\n            game.board.count = game.teams.length;\n            break;\n         case 'inf':\n            game.board.x = width - (game.board.nameWidth + game.board.oneWidth) - game.board.marginRight;\n            rect(game.board.x + 4, game.board.y + 3, game.board.nameWidth + game.board.oneWidth, game.board.rowHeight);\n            game.board.count = min(game.board.show, game.board.list.length);\n            break;\n         case 'kth':\n            game.board.x = width - (game.board.nameWidth + game.board.oneWidth + game.board.twoWidth) - game.board.marginRight;\n            rect(game.board.x + 4, game.board.y + 3, game.board.nameWidth + game.board.oneWidth + game.board.twoWidth, game.board.rowHeight);\n            game.board.count = min(game.board.show, game.board.list.length);\n            break;\n      }\n      var a = 0;\n      for (let i = 0; i < game.board.count; i++) { // Leaderboard Body\n         if (game.info.mode != 'skm' && game.info.mode != 'ctf') { // If not a team mode\n            var spectator = false;\n            for (let j = 0; j < game.spectators.length; j++) {\n               if (game.board.list[i].player == game.spectators[j]) {\n                  spectator = true;\n                  break;\n               }\n            }\n            if (spectator == true) {\n               if (i < game.board.count) {\n                  if (game.board.count < game.info.count) {\n                     game.board.count++; // Extend leaderboard length to include the next player\n                     i++; // Do not render leaderboard status if player is a spectator\n                  } else {\n                     continue;\n                  }\n               }\n            }\n         }\n         switch (game.info.mode) {\n            case 'ffa':\n               rect(game.board.x + 4, game.board.y + 3 + (a + 1) * game.board.rowHeight, game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.threeWidth, game.board.rowHeight);\n               break;\n            case 'skm':\n               rect(game.board.x + 4, game.board.y + 3 + (a + 1) * game.board.rowHeight, game.board.nameWidth + game.board.oneWidth + game.board.twoWidth + game.board.threeWidth, game.board.rowHeight);\n               break;\n            case 'srv':\n               rect(game.board.x + 4, game.board.y + 3 + (a + 1) * game.board.rowHeight, game.board.nameWidth + game.board.oneWidth + game.board.twoWidth, game.board.rowHeight);\n               break;\n            case 'ctf':\n               rect(game.board.x + 4, game.board.y + 3 + (a + 1) * game.board.rowHeight, game.board.nameWidth + game.board.oneWidth + game.board.twoWidth, game.board.rowHeight);\n               break;\n            case 'inf':\n               rect(game.board.x + 4, game.board.y + 3 + (a + 1) * game.board.rowHeight, game.board.nameWidth + game.board.oneWidth, game.board.rowHeight);\n               break;\n            case 'kth':\n               rect(game.board.x + 4, game.board.y + 3 + (a + 1) * game.board.rowHeight, game.board.nameWidth + game.board.oneWidth + game.board.twoWidth, game.board.rowHeight);\n               break;\n         }\n         a++;\n      }\n      translate(-org.off.x, -org.off.y);\n      rectMode(CENTER);\n   } { // Messages\n      translate(org.off.x, org.off.y);\n      if (Messages == true) {\n         textFont('Helvetica');\n         textStyle(NORMAL);\n         let message = currentMessage();\n         if (message != undefined) {\n            let breaks = freq(message, '\\n');\n            let width = messageWidth(message);\n            rect(5 + 25 + width / 2, 4 + 25 + 9 * breaks, 25 + width, 26 + 18 * breaks);\n         }\n      }\n      translate(-org.off.x, -org.off.y);\n   }\n\n   // World\n   fill(game.world.background.r, game.world.background.g, game.world.background.b);\n   stroke(game.world.border.color.r, game.world.border.color.g, game.world.border.color.b);\n   strokeWeight(game.world.border.weight);\n   if (game.world.type == 'rectangle') {\n      rect(game.world.x + game.world.width / 2, game.world.y + game.world.height / 2, game.world.width, game.world.height); // World border\n   } else if (game.world.type == 'ellipse') {\n      ellipse(game.world.x + game.world.width / 2, game.world.y + game.world.height / 2, game.world.width / 2, game.world.height / 2); // World border\n   }\n\n   // CTF\n   if (game.info.mode == 'ctf') {\n      // Bases\n      for (let i = 1; i < game.teams.length + 1; i++) {\n         let color = teamColorDef[teamColors[i - 1]];\n         stroke(orgColors[game.world.color][color].r, orgColors[game.world.color][color].g, orgColors[game.world.color][color].b);\n         strokeWeight(3);\n         let bin = i.toString(2); // Convert i to binary string\n         if (bin.length < 2) {\n            bin = '0' + bin; // Add zero to front to form equivalent two-length binary number\n         }\n         let x = game.world.x + (game.world.width * parseInt(bin[bin.length - 1]));\n         let y = game.world.y + (game.world.height * parseInt(bin[bin.length - 2]));\n         let theta;\n         if (bin == '01') {\n            theta = 270;\n         } else if (bin == '10') {\n            theta = 90;\n         } else if (bin == '11') {\n            theta = 180;\n         } else if (bin == '100') {\n            theta = 0;\n         }\n         let l = 150;\n         if (game.world.type == 'rectangle') {\n            arc(x, y, l, l, -theta + 1, -theta + 89); // -1 to avoid world border overlap with a degree cushion either side\n         } else if (game.world.type == 'ellipse') {\n            let r = game.world.width / 2;\n            let h = x + cos(-theta + 45) * r * (root2 - 1); // l = r(root2 - 1); length from circle to square corner\n            let k = y + sin(-theta + 45) * r * (root2 - 1); // yoff = l*sin(-theta + 45); -theta + 45 gives angle to center\n            let a = game.world.x + r; // a is world center x\n            let b = game.world.y + r; // b is world center y\n            let diffs = [];\n            let points = [ /*{ p: Number, q: Number }*/ ];\n            for (let j = 0; j < 720; j++) {\n               let alpha = j;\n               let p = h + l * cos(alpha);\n               let q = k + l * sin(alpha);\n               let d = abs(sqrt(sq(p - a) + sq(q - b)) - r); // Calculate distance of point on base circle to world circle\n               diffs.push(d); // Store all distances to array\n               points.push({ p: p, q: q }); // Store all points to array\n            }\n            let point = points[diffs.indexOf(min(diffs))]; // Find closest point to world circle (points and diffs are analogous)\n            let phi = atan(abs(point.q - k) / abs(point.p - h));\n            if (phi > 45) {\n               phi = 90 - phi;\n            }\n            arc(h, k, l, l, -theta - phi + 1, -theta + 90 + phi - 1); // -1 to avoid world border overlap\n         }\n      }\n      // Flag\n      noFill();\n      stroke(game.world.border.color.r, game.world.border.color.g, game.world.border.color.b);\n      strokeWeight(2);\n      line(game.flag.x - game.flag.width / 2, game.flag.y - game.flag.height / 2, game.flag.x - game.flag.width / 2, game.flag.y + game.flag.height / 2);\n      fill(game.flag.color.r, game.flag.color.g, game.flag.color.b);\n      strokeWeight(1);\n      triangle(game.flag.x - game.flag.width / 2, game.flag.y - game.flag.height / 2, game.flag.x - game.flag.width / 2, game.flag.y, game.flag.x + game.flag.width / 2, game.flag.y - game.flag.height / 4);\n   }\n}"]}